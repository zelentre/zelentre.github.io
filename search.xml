<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL索引</title>
      <link href="/2022/04/06/MySQL%E7%B4%A2%E5%BC%95/"/>
      <url>/2022/04/06/MySQL%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL索引"><a href="#MySQL索引" class="headerlink" title="MySQL索引"></a>MySQL索引</h1><blockquote><p><strong>索引是对数据库表中一列或多列的值进行排序的一种结构。MySQL索引的建立对于MySQL的高效运行是很重要的，索引可以大大提高MySQL的检索速度。</strong> 索引只是提高效率的一个因素，如果你的MySQL有大数据量的表，就需要花时间研究建立最优秀的索引，或优化查询语句。</p><p>📌简单类比一下，数据库如同书籍，索引如同数据目录，假如我们需要从书籍查找与xx相关的内容，我们可以直接从目录中查找，定位到xx内容所在页面，如果目录中没有xx相关字符或者没有设置目录（索引），那就只能逐字逐页阅读文本查找，效率可想而知。</p></blockquote><span id="more"></span><h2 id="1-索引的优缺点"><a href="#1-索引的优缺点" class="headerlink" title="1. 索引的优缺点"></a>1. 索引的优缺点</h2><blockquote><p>索引可以大大提高MySQL的检索速度，为什么不对表中的每一个列创建一个索引呢？</p></blockquote><h3 id="1-1-优点"><a href="#1-1-优点" class="headerlink" title="1.1. 优点"></a>1.1. 优点</h3><ul><li><strong>索引大大减小了服务器需要扫描的数据量，从而大大加快数据的检索速度，这也是创建索引的最主要原因</strong></li><li><strong>索引可以帮助服务器避免排序和创建临时表</strong></li><li><strong>索引可以将随机IO变成顺序IO</strong></li><li>索引可以对于InnoDB（对索引支持行级锁）非常重要，因为它可以让查询锁更少的元组，提高了表访问并发性</li><li>关于InnoDB、索引和锁：InnoDB在二级索引上使用共享锁（读锁），但访问主键索引需要排他锁（写锁）</li><li>通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性</li><li>可以加速表与表之间的连接，特别是在实现数据的参考完整性方面特别有意义</li><li>在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间</li><li>通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能</li></ul><h3 id="1-2-缺点"><a href="#1-2-缺点" class="headerlink" title="1.2. 缺点"></a>1.2. 缺点</h3><ul><li>创建索引和维护索引要<strong>消耗时间</strong>，这种时间随着数据量的增加而增加</li><li>索引需要占<strong>物理空间</strong>，除了数据表占用数据空间之外，每一个索引还要占用一定的物理空间，如果需要建立聚簇索引，那么需要占用的空间会更大</li><li>对表中的数据进行增、删、改的时候，索引也要动态的维护，这就降低了整数的维护速度</li><li>如果某个数据列包含许多重复的内容，为它建立索引就没有太大的实际效果</li><li>对于非常小的表，大部分情况下建单的全表扫描更高效</li></ul><h2 id="2-创建索引准则"><a href="#2-创建索引准则" class="headerlink" title="2. 创建索引准则"></a>2. 创建索引准则</h2><blockquote><p>索引是建立在数据库表中的某些列的上面。因此，在创建索引的时候，应该仔细考虑在那些列上可以创建索引，在那些列上不能创建索引。</p></blockquote><h3 id="2-1-应该创建索引的列"><a href="#2-1-应该创建索引的列" class="headerlink" title="2.1. 应该创建索引的列"></a>2.1. 应该创建索引的列</h3><ul><li>在<strong>经常需要搜索的列</strong>上，可以加快搜索的速度</li><li>在作为<strong>主键的列</strong>上，强制该列的唯一性和组织表中数据的排列结构</li><li>在<strong>经常用在连接（JOIN）的列上</strong>，这些列主要是一些外键，可以加快连接的速度</li><li>在<strong>经常需要根据范围（&lt;, &lt;&#x3D;, &#x3D;, &gt;, &gt;&#x3D;, BETWEEN, IN）进行搜索的列</strong>上创建索引，因为索引已经排序，其指定的范围是连续的</li><li>在<strong>经常需要排序的（ORDER BY）的列</strong>上创建索引，因为索引已经排序，这样查询可以利用索引的排序，加快排序查询时间</li><li>在<strong>经常使用WHERE子句中的列</strong>上创建索引，加快条件的判断速度</li></ul><h3 id="2-2-不该创建索引的列"><a href="#2-2-不该创建索引的列" class="headerlink" title="2.2. 不该创建索引的列"></a>2.2. 不该创建索引的列</h3><ul><li>对于那些在查询中<strong>很少使用或者参考的列</strong>不应该创建索引。若列很少使用到，因此有索引或者无索引，并不能提高查询速度。相反，由于增加了索引，反而降低了系统的维护速度和增大了空间需求</li><li>对于那些只有<strong>很少数据值或者重复值多的列</strong>也不应该增加索引。这些列的取值很少，例如人事表的性别列，在查询的结果中，结果集的数据行占了表中数据行的很大比例，即需要在表中搜索的数据行的比例很大。增加索引，并不能明显加快检索速度</li><li>对于那些定义为<strong>text, image和bit数据类型的列</strong>不应该增加索引。这些列的数据量要么相当大，要么取值很少</li><li>当该列<strong>修改性能要求远远高于检索性能</strong>时，不应该创建索引。（修改性能和检索性能是相互矛盾的）</li></ul><h2 id="3-索引结构"><a href="#3-索引结构" class="headerlink" title="3. 索引结构"></a>3. 索引结构</h2><blockquote><p>MySQL中常用的索引结构（索引底层的数据结构）有：B-TREE ，B+TREE ，HASH 等。</p></blockquote><h3 id="3-1-B-Tree"><a href="#3-1-B-Tree" class="headerlink" title="3.1. B-Tree"></a>3.1. B-Tree</h3><p><strong>B-树就是B树，多路搜索树，树高一层意味着多一次的磁盘I&#x2F;O</strong>，下图是3阶B树</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/2021013023233065.png" alt="B-树"></p><p>B树的特征：</p><ul><li><strong>关键字集合分布在整棵树中</strong></li><li>任何一个关键字出现且只出现在一个节点中</li><li><strong>搜索有可能在非叶子节点结束</strong></li><li>其搜索性能等价于关键字全集内做一次二分查找</li><li>自动层次控制</li></ul><h3 id="3-2-B-TREE"><a href="#3-2-B-TREE" class="headerlink" title="3.2. B+TREE"></a>3.2. B+TREE</h3><blockquote><p>B+树是B-树的变体，也是一种多路搜索树</p></blockquote><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20210130232533425.png" alt="B+树"></p><p>B+树的特征：</p><ul><li><strong>所有关键字都出现在叶子节点的链表中（稠密索引），且链表中的关键字恰好是有序的</strong></li><li><strong>不可能在非叶子节命中</strong></li><li><strong>非叶子节点相当于是叶子节点的索引（稀疏索引），叶子节点相当于是存储（关键字）数据的数据层</strong></li><li>每一个叶子节点都包含指向下一个叶子节点的指针，从而方便叶节点的范围遍历</li><li>更适合文件索引系统<h3 id="3-2-HASH"><a href="#3-2-HASH" class="headerlink" title="3.2. HASH"></a>3.2. HASH</h3><blockquote><p>哈希索引就是采用一定的哈希算法，把键值换算成新的哈希值，检索时不需要类似B+数那样给从根节点到叶子节点逐级查找，只需一次哈希算法即可立即定位到相应的位置，速度非常高快。</p></blockquote></li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20220308214810.png" alt="HASH"></p><p><strong>哈希索引仅仅能满足<code>&quot;=&quot;,“IN&quot;和”&lt;=&gt;&quot;</code>查询，不能使用范围查询。</strong> 也不支持任何范围查询，例如<code>WHERE price &gt; 100</code>。<br>由于<strong>Hash</strong>索引比较的是进行Hash运算之后的Hash值，所以它只能用于等值的过滤，不能用于基于范围的过滤，因为经过相应的Hash算法处理之后的Hash值的大小关系，并不能保证和Hash运算前完全一样。</p><h3 id="3-3-补充：索引存储在文件系统中"><a href="#3-3-补充：索引存储在文件系统中" class="headerlink" title="3.3. 补充：索引存储在文件系统中"></a>3.3. 补充：索引存储在文件系统中</h3><p><strong>索引是占据物理空间的，在不同的存储引擎中，索引存在的文件也不同。</strong>存储引擎室基于表的，以下分别使用MyISAM和InnoDB存储引擎建立两张表。</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20210130233352294.png" alt="存储引擎是基于表的，以下建立两张别使用MyISAM和InnoDB引擎的表，看看其在文件系统中对应的文件存储格式。"></p><h4 id="3-3-1-存储引擎为MyISAM："><a href="#3-3-1-存储引擎为MyISAM：" class="headerlink" title="3.3.1. 存储引擎为MyISAM："></a>3.3.1. 存储引擎为MyISAM：</h4><ul><li>*.frm：与表相关的元数据信息都存放在frm文件，包括表结构的定义信息等</li><li>*.MYD：MyISAM DATA，用于存储MyISAM表的数据</li><li>*.MYI：MyISAM INDEX，用于存储MyISAM表的索引相关信息</li></ul><h4 id="3-3-2-存储引擎为InnoDB："><a href="#3-3-2-存储引擎为InnoDB：" class="headerlink" title="3.3.2. 存储引擎为InnoDB："></a>3.3.2. 存储引擎为InnoDB：</h4><ul><li>*.frm：与表相关的元数据信息都存放在frm文件，包括表结构的定义信息等</li><li>*.ibd：InnoDB DATA，表数据和索引的文件。该表的索引（B+树）的每个非叶子节点存储索引，叶子节点存储索引和索引对应的数据</li></ul><h2 id="4-索引分类"><a href="#4-索引分类" class="headerlink" title="4. 索引分类"></a>4. 索引分类</h2><blockquote><p>MySQL的索引有两种分类方式：逻辑分类和物理分类。</p></blockquote><h3 id="4-1-逻辑分类"><a href="#4-1-逻辑分类" class="headerlink" title="4.1. 逻辑分类"></a>4.1. 逻辑分类</h3><blockquote><p>有多种逻辑划分的方式，比如按功能划分，按组成索引的列数划分等</p></blockquote><h4 id="4-1-1-按功能划分"><a href="#4-1-1-按功能划分" class="headerlink" title="4.1.1. 按功能划分"></a>4.1.1. 按功能划分</h4><ul><li><p>主键索引：一张表只能有一个主键索引，不允许重复、不允许为NULL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TableName <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(column_list);</span><br></pre></td></tr></table></figure></li><li><p>唯一索引：数据列不允许重复，允许为NULL值，一张表可有多个唯一索引，索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX IndexName <span class="keyword">ON</span> `TableName`(`字段名`(length));</span><br><span class="line"># 或者</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TableName <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (column_list); </span><br></pre></td></tr></table></figure></li><li><p>普通索引：一张表可以创建多个普通索引，一个普通索引可以包含多个字段，允许数据重复，允许NULL值插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX IndexName <span class="keyword">ON</span> `TableName`(`字段名`(length));</span><br><span class="line"># 或者</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TableName <span class="keyword">ADD</span> INDEX IndexName(`字段名`(length));</span><br></pre></td></tr></table></figure></li><li><p>全文索引：它查找的是文本中的关键字，主要用于全文检索。</p></li></ul><h4 id="4-1-2-按列数划分"><a href="#4-1-2-按列数划分" class="headerlink" title="4.1.2. 按列数划分"></a>4.1.2. 按列数划分</h4><ul><li>单例索引：一个索引只包含一个列，一个表可以有多个单例索引</li><li>组合索引：一个组合索引可以包含两个或两个以上的列。查询的时候遵循MySQL组合索引的”最左前缀“原则，即使用where时条件要按照建立索引时的字段排列方式放置，索引才会生效</li></ul><h3 id="4-2-物理分类"><a href="#4-2-物理分类" class="headerlink" title="4.2. 物理分类"></a>4.2. 物理分类</h3><blockquote><p>物理分类分为聚簇索引和非聚簇索引（有时也称辅助索引或二级索引）</p></blockquote><h4 id="4-2-1-聚簇索引和非聚簇索引"><a href="#4-2-1-聚簇索引和非聚簇索引" class="headerlink" title="4.2.1. 聚簇索引和非聚簇索引"></a>4.2.1. 聚簇索引和非聚簇索引</h4><blockquote><p>聚簇是为了提高某个属性（或属性组）的查询速度，把这个或这些属性（称为聚簇码）上具有相同值的元组集中存放在连续的物理块</p></blockquote><p><strong>聚簇索引（clustered index）：不是单独的一种索引类型，而是一种数据存储方式。</strong>这种储存方式是依靠B+树来实现的，<strong>根据表的主键构造一棵B+树且B+树叶子节点存放的都是表的行记录数据</strong>时，方可称该主键索引为聚簇索引。<strong>聚簇索引也可以理解为将数据存储与索引放到了一块，找到索引也就找到了数据。</strong></p><p><strong>非聚簇索引：数据和索引是分开的，B+树叶子节点存放的不是数据表的行记录。</strong></p><p>虽然InnoDB和MyISAM存储引擎都默认使用B+树结构存储索引，但是<strong>只有InnoDB的主键索引才是聚簇索引</strong>，InnoDB中的辅助索引以及MyISAM使用的都是非聚簇索引。<strong>每张表做多只能拥有一个聚簇索引</strong>。</p><h4 id="4-2-2-拓展：聚簇索引优缺点"><a href="#4-2-2-拓展：聚簇索引优缺点" class="headerlink" title="4.2.2. 拓展：聚簇索引优缺点"></a>4.2.2. 拓展：聚簇索引优缺点</h4><ol><li>优点：<ul><li><strong>数据访问更快</strong>，因为聚簇索引将索引和数据保存在同一个B+树中，因此从聚簇索引中获取数据比非聚簇索引</li><li>聚簇索引对于主键的排序查找和范围查找速度非常快</li></ul></li><li>缺点：<ul><li><strong>插入速度严重依赖于插入顺序</strong>，按照主键的顺序插入时最快的方式，否则将会出现页分裂，严重影响性能。因此，对于InnoDB表，我们一般都会定义一个自增的ID列为主键<strong>（主键列不要选没有意义的自增列，选经常查询的条件列才好，不然无法体现其主键索引性能）</strong></li><li><strong>更新主键的代价很高</strong>，因为将会导致被更新的行移动。因此，对于InnoDB表，我们一般定义主键为不可更新</li><li><strong>二级索引访问需要两次索引查找</strong>，第一次找到主键值，第二次根据主键值找到行数据</li></ul></li></ol><h3 id="4-3-【-补充】MySQL中key、primary-key、unique-key与index区别"><a href="#4-3-【-补充】MySQL中key、primary-key、unique-key与index区别" class="headerlink" title="4.3.【 补充】MySQL中key、primary key、unique key与index区别"></a>4.3.【 补充】MySQL中key、primary key、unique key与index区别</h3><h4 id="4-3-1-key与index含义"><a href="#4-3-1-key与index含义" class="headerlink" title="4.3.1. key与index含义"></a>4.3.1. key与index含义</h4><p>key具有两层含义：</p><ol><li>约束（约束和规范数据库的结构完整性）</li><li>索引</li></ol><p>index：索引</p><h4 id="4-3-2-key种类"><a href="#4-3-2-key种类" class="headerlink" title="4.3.2. key种类"></a>4.3.2. key种类</h4><p>key：等价普通索引<code>key键名（列）</code></p><p>primary key：</p><ul><li>约束作用（constraint），主键约束（unique，not null，一表一主键，唯一标识记录），规范存储主键和强调唯一性</li><li>为这个key建立主键索引</li></ul><p>unique key：</p><ul><li>约束作用（constraint），unique约束（保证列或者列集合提供唯一性）</li><li>为这个key建立一个唯一索引</li></ul><p>foreign key：</p><ul><li>约束作用（constraint），外键约束，规范数据的引用完整性</li><li>为这个key建立一个普通索引</li></ul><h4 id="4-3-3-key值类型"><a href="#4-3-3-key值类型" class="headerlink" title="4.3.3. key值类型"></a>4.3.3. key值类型</h4><ul><li>PRI主键约束</li><li>UNI唯一约束</li><li>MUL可以重复</li></ul><p>如果一个key有多个约束，将显示约束优先级最高的，<strong>PRI&gt;UNI&gt;MUL</strong></p><h2 id="5-InnoDB和MyISM索引实现"><a href="#5-InnoDB和MyISM索引实现" class="headerlink" title="5. InnoDB和MyISM索引实现"></a>5. InnoDB和MyISM索引实现</h2><h3 id="5-1-InnoDB索引实现"><a href="#5-1-InnoDB索引实现" class="headerlink" title="5.1. InnoDB索引实现"></a>5.1. InnoDB索引实现</h3><blockquote><p>InnoDB使用B+树存储数据，除了主键索引为聚簇索引，其它索引均为非聚簇索引。一个表中只能存在一个聚簇索引（主键索引），但可以存在多个非聚簇索引。InnoDB表的索引和数据是存储在一起的，<code>.idb</code>表数据和索引的文件</p></blockquote><h4 id="5-1-1-聚簇索引（主键索引）"><a href="#5-1-1-聚簇索引（主键索引）" class="headerlink" title="5.1.1. 聚簇索引（主键索引）"></a>5.1.1. 聚簇索引（主键索引）</h4>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线程池相关</title>
      <link href="/2021/10/04/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9B%B8%E5%85%B3/"/>
      <url>/2021/10/04/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="线程池相关"><a href="#线程池相关" class="headerlink" title="线程池相关"></a>线程池相关</h1><h2 id="一、初识线程池"><a href="#一、初识线程池" class="headerlink" title="一、初识线程池"></a>一、初识线程池</h2><p>​线程池所实现的就是线程的服用。先准备若干线程放在线程池中备用，如果有新任务来了，就从线程池里取出一个线程处理，处理完在放回线程池，这样就提高了线程的利用率，避免不必要的开销，当新任务来的时候直接取出线程就能用，不用等待线程的创建。所以线程池不仅可以<font color=red>降低资源的消耗</font>，还可以<font color=red>提高响应速度</font>。最关键的是，我们用线程池对线程进行统一的管理和分配，就可以<font color=red>提高线程的可管理性</font>，避免了无限制地创建线程导致系统崩溃。</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20211005165003614.png" alt="image-20211005165003614"></p><span id="more"></span><h2 id="二、线程池是怎么处理任务的"><a href="#二、线程池是怎么处理任务的" class="headerlink" title="二、线程池是怎么处理任务的"></a>二、线程池是怎么处理任务的</h2><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20211004151759966.png" alt="线程池处理任务"></p><ul><li>核心线程池中的线程默认情况下是当有任务提交的时候才开始创建，而且就算空闲的线程足以处理新任务，他仍然会创建新的线程去处理，直到核心线程数达到最大，如果调用了<font color='red'>prestartAllCoreThreads()</font>方法则会事先创建所有核心线程。正常情况下，核心线程池中的线程一但创建了就不会自动被销毁，除非设置了<font color='red'>allowCoreThreadTimeOut&#x3D;true</font>，或者是线程在执行任务的时候报了异常。</li><li>如果核心线程池的线程已经满了并且都在执行任务的话，新任务就会暂时被存放在任务队列中，当核心线程池中有空闲的线程后就会从任务队列中去取一个任务处理。</li><li>那么核心线程池中的线程都在工作，并且任务队列已经排满了，这时候就会创建新的线程去处理任务，这些线程我将其称为<strong>临时工</strong>，临时工线程在线程池中但不在核心线程池中。当临时工线程在指定的时间内没有处理任务就会被<strong>辞退</strong>，也就是销毁，不想核心线程池中的线程那样不干活也可以长期驻留。</li><li>当线程池中的线程都在工作，并且任务队列也满了，那么新的任务就会交给饱和策略去处理。</li></ul><blockquote><p>总结：任务会优先交给核心线程处理，核心线程处理不过来会放在任务队列，任务队列排满了才会去启用临时工线程。</p></blockquote><h2 id="三、线程池的创建与使用"><a href="#三、线程池的创建与使用" class="headerlink" title="三、线程池的创建与使用"></a>三、线程池的创建与使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">1L</span>,TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ArrayBlockingQueue</span>&lt;&gt;(<span class="number">3</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class="line">        executorService.execute(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>直接new一个<strong>ThreadPoolExecutor</strong>就可以创建一个线程池。里面有几个参数：</p><ul><li><strong>corePoolSize</strong>：核心线程池中的线程数</li><li><strong>maximumPoolSize</strong>：线程池中线程的最大数量</li><li><strong>keepAliveTime</strong>：临时线程的存活时间，超过指定时间就会被销毁</li><li><strong>unit</strong>：时间单位</li><li><strong>workQueue</strong>：任务队列</li><li><strong>handle</strong>：饱和策略</li></ul><p>要执行任务的话就调用<font color='red'>execute</font>方法，传入一个Runnable对象，任务逻辑写在run方法里。</p><h2 id="四、任务队列"><a href="#四、任务队列" class="headerlink" title="四、任务队列"></a>四、任务队列</h2><p>​当线程池中的线程处理不过来的时候，就会将任务暂时放入任务队列中，任务队列也有好几种：</p><ul><li><font color='red'>ArrayBlockingQueue</font>：基于数组实现的有界阻塞队列，按照先进先出的顺序对元素进行排列</li><li><font color='red'>LinkedBlockingDeque</font>：基于链表实现的阻塞队列，初始化的时候不指定容量的话，默认容量是<strong>Integer.MAX_VALUE</strong>，相当于无界队列，也是按照先进先出的规则排序元素</li><li><font color='red'>SynchronousQueue</font>：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态。也就是说，当任务数超过线程池最大线程数时就会执行饱和策略</li><li><font color='red'>PriorityBlockingQueue</font>：一个具有优先级的无限阻塞队列</li></ul><blockquote><p>在实际使用的时候，建议使用有界队列，因为使用无界队列，如果有大量任务且线程池处理不过来，就会积压在内存中，严重的会导致内存溢出(OOM)，系统崩溃</p></blockquote><h2 id="五、饱和策略"><a href="#五、饱和策略" class="headerlink" title="五、饱和策略"></a>五、饱和策略</h2><ul><li><font color='red'>AbortPolicy</font>：这个是默认策略，当线程池中的线程都在工作，并且任务队列已满的时候，再试图进来任务的话<strong>execute</strong>方法就会<strong>抛出异常</strong>，记得一定要捕获异常，不然程序就会终止。</li><li><font color='red'>CallerRunsPolicy</font>：在任务被拒绝添加后，会在调用execute方法的线程（一般是主线程）来执行被拒绝的任务，<font color='orange'>除非executor被关闭，否则任务不会被丢弃</font>。</li><li><font color='red'>DiscardOldestPolicy</font>：丢弃队列里最近的一个任务，并执行当前任务。</li><li><font color='red'>DiscardPolicy</font>：不处理，丢弃。</li></ul><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ol><li><a href="https://blog.csdn.net/f641385712/article/details/105270194">一文搞懂Executor执行器和线程池的关系，整体介绍其任务执行&#x2F;调度体系：ThreadPoolExecutor、ScheduledExecutorService</a></li><li><a href="https://blog.csdn.net/a1173537204/article/details/89852613">java并发编程（十九）- 线程池（ScheduledThreadPoolExecutor ）详细使用</a></li><li><a href="https://www.cnblogs.com/zouhong/p/13206920.html">ThreadPoolTaskExecutor和ThreadPoolExecutor</a></li><li><a href="https://blog.csdn.net/w605283073/article/details/89930497">Java ThreadPoolExecutor的拒绝策略CallerRunsPolicy的一个潜在的大坑</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzA3MDA1MTgzMA==&mid=2247484944&idx=1&sn=f0edeb48176ddf9bf5dfa017432ece7e&chksm=9ec3f489a9b47d9f2452321d0cf10312ee6531449b92c14beb6a8510d1f9d0792f4c43ac74c9&scene=178&cur_album_id=1402315038182162433#rd">Java线程池初步解读(重点参考)</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI0ODk2NDIyMQ==&mid=2247488182&idx=1&sn=58c058525d66ef8ce78fb8549c989489&chksm=e999e7a4deee6eb2284560e8ae072be520a8b173d02ceae12404db0d968b2658d541f12b5c95&token=1997065385&lang=zh_CN#rd">肝完这篇线程池(重点)</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 线程池 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线程池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ学习</title>
      <link href="/2021/07/17/RabbitMQ%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/07/17/RabbitMQ%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="RabbitMQ学习"><a href="#RabbitMQ学习" class="headerlink" title="RabbitMQ学习"></a>RabbitMQ学习</h1><p><strong>核心概念</strong></p><blockquote><p>Server：又称Broker，接受客户端的连接，实现AMQP实体服务</p><p>Connection：连接，应用程序与Broker的网络连接TCP&#x2F;IP&#x2F;三次握手四次挥手</p><p>Channel：网络通道，几乎所有操作都在Channel中进行，Channel是进行消息读写的通道，客户端可以建立对应Channel，每个Channel代表一个会话任务</p><p>Message：消息，服务与应用程之间传送的数据，有Properties和body组成，Properties可以对消息进行修饰，比如消息的优先级、延迟等高级特性，body就是消息体的内容</p><p>Virtual Host：虚拟地址，用于进行逻辑隔离，最上层的消息路由，一个虚拟主机可以有若干个Exchange和Queue，同一个虚拟主机里面不能有相同名字的Exchange</p><p>Exchange：交换机，接收消息，根据路由键发送消息到绑定的队列（不具备消息存储的能力）</p><p>Bindings：Exchange和Queue之间的虚拟连接，binding中可以保护多个routing key</p><p>Routing key：是一个路由规则，虚拟机可以用它来确定如何路由一个特定消息</p><p>Queue：队列也就是Message Queue，消息队列，保存消息并将它们转发给消费者</p></blockquote><span id="more"></span><h2 id="一、模式"><a href="#一、模式" class="headerlink" title="一、模式"></a>一、模式</h2><p><strong>Work模式</strong></p><blockquote><p>主要有两种模式：</p><ol><li>轮询模式的分发：一个消费者一条，按均分配</li><li>公平分发：根据消费者的消费能力进行公平分发，处理的快的处理的多，处理的慢的处理的少；按劳分配</li></ol></blockquote><p><strong>RabbitMQ使用场景</strong></p><blockquote><ol><li>同步异步问题（串行）：将订单信息写入数据库成功后，发送注册邮件，在发送注册短信。以上三个任务全部完成后，返回给客户端</li></ol><p>  <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210721145751320.png" alt="image-20210721145751320"></p><ol start="2"><li>同步异步问题（并行、异步线程池）：将订单写入数据库成功后，同时进行注册邮件、注册短信的发送，完成以上三个任务后，返回给客户端，与串行的差别是，并行的方式可以提高处理的时间</li></ol><p>  <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210721172427071.png" alt="image-20210721172427071"></p><p>  存在问题：</p><ul><li>耦合度高</li><li>需要自己写线程池自己维护成本太高</li><li>出现了消息可能丢失，需要做消息补全</li><li>需要考虑如何保证消息的可靠性</li><li>若服务器承载不了，需要自己去写高可用</li></ul><ol start="3"><li>异步消息队列的方式：</li></ol><p>  <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210721173920110.png" alt="image-20210721173920110"></p><p>  好处：</p><ul><li><p>完全解耦，用MQ简历桥接</p></li><li><p>有独立的线程池和运行模型</p></li><li><p>出现了消息可能丢失，MQ有持久化功能</p></li><li><p>如何保证消息的可靠性，死信队列和消息转移等</p></li><li><p>若服务器承载不了，HA镜像模型高可用，增加集群</p><p>按照以上约定，用户的响应时间相当于是订单信息写入数据库的时间。注册邮件、短信发送写入消息队列后，直接返回（写入消息队列的速度很快，基本可以忽略）。因此架构改变后，系统的吞吐量提高到每秒20QPS，比串行提高了三倍，比并行提高了两倍</p></li></ul><ol start="4"><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210721175005637.png" alt="image-20210721175005637"></p></li><li><p>流量削峰</p></li></ol><p>  <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210721175150300.png" alt="image-20210721175150300"></p></blockquote><p><strong>队列绑定关系声明（Configuration）在生产者还是消费者好，其他都可以但是为了防止项目启动报错建议声明在消费者</strong></p><h2 id="二、过期时间TTL"><a href="#二、过期时间TTL" class="headerlink" title="二、过期时间TTL"></a>二、过期时间TTL</h2><ol><li>什么是TTL<ul><li>time to live 消息存活时间</li><li>如果消息在存活时间内未被消费，则会被清除</li><li>rabbitmq支持两种ttl设置<ul><li>单独消息进行配置ttl</li><li>整个队列进行配置ttl（居多）</li><li>若上述两种方法同时使用，则消息的过期时间以两者之间TTL较小的那个数值为准。消息在队列的生存时间一旦超过设置的TTL值，就称为dead message被投递到死信队列，消费者将无法在收到改消息。</li></ul></li></ul></li></ol><h2 id="三、死信队列"><a href="#三、死信队列" class="headerlink" title="三、死信队列"></a>三、死信队列</h2><p><strong>概念</strong>：没有被及时消费的消息存放队列</p><p><strong>死信交换机：</strong>Dead Letter Exchange(缩写：DLX)当消息称为死信后，会被重新发送到另一个交换机，这个交换机就是DLX死信交换机。</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210722170415668.png" alt="image-20210722170415668"></p><p>消息变成死信，可能是由于以下的原因：</p><ul><li>消息被拒绝</li><li>消息过期</li><li>队列达到最大长度</li></ul><p>DLX也是一个正常的交换机，和一般的交换机没有区别，它能在任何的队列上被指定，实际上就是设置某一个队列的属性，当这个队列存在死信时，rabbitmq就会自动的将这个消息重新发布到设置的DLX上，进而被路由到另一个队列，即死信队列，想要使用死信队列，只需要在定义队列的时候设置队列参数<code> x-dead-letter-exchange</code>指定交换机即可。</p><p><strong>过期时间+死信队列&#x3D;延时队列</strong></p><h2 id="四、集群"><a href="#四、集群" class="headerlink" title="四、集群"></a>四、集群</h2><p>​RabbitMQ本身是基于Erlang编写，Erlang语言天生具备分布式特性（通过通不过Erlang集群各节点的magic cookie来实现）。因此,rabbitmq天然支持clustering。这使得rabbitmq本身不需要像activemq、Kafka那样通过zookeeper分别来实现HA方案和保存集群的元数据。集群是保证可靠性的一种方式，同时可以通过水平扩展以达到增加消息吞吐量能力的目的。在实际使用过程中多采用多机多实例部署方式。</p><h2 id="五、面试题分析"><a href="#五、面试题分析" class="headerlink" title="五、面试题分析"></a>五、面试题分析</h2><p>1.　Rabbitmq为什么需要信道，为什么不是TCP直接通信？</p><ul><li>TCP的创建和销毁，开销大，创建要三次握手，销毁要四次分手</li><li>如果不用信道，那应用程序就会TCP连接到RabbitMQ服务器，高峰时每秒成千上万连接就会造成资源的巨大浪费，而且<strong>底层操作系统每秒处理tcp连接数也是有限的，必定造成性能瓶颈</strong>。</li><li>信道的原理时一条线程一条信道，多条线程多条信道用一条TCP连接，一条TCP连接可以容纳无限的信道，即使每秒成千上万的请求也不会称为性能瓶颈。<br>2.　queue队列到底在消费者创建还是在生产者创建？</li><li>一般建议实在rabbitmq操作面板创建，这是一种稳妥的做法。</li><li>按照常理来说，确实应该消费者这边创建是最好，消息的消费是在这边。这样你承受一个后果，可能生产者的生产消息会丢失。</li><li>在生产者创建队列也可以，这样稳妥的方法，消息是不会出现丢失。</li><li>如果生产者和消费者都创建的队列，谁先启动谁先创建，后面启动的就会覆盖前面的</li></ul>]]></content>
      
      
      <categories>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习</title>
      <link href="/2021/07/05/MySQL%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/07/05/MySQL%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL学习"><a href="#MySQL学习" class="headerlink" title="MySQL学习"></a>MySQL学习</h1><span id="more"></span><h2 id="数据库事务"><a href="#数据库事务" class="headerlink" title="数据库事务"></a>数据库事务</h2><p>数据库事务是指作为单个逻辑工作单元执行的一系列操作，这些操作要么全做要么全不做，是一个不可分割的工作单位。</p><p>数据库事务的四大特性(简称ACID)是： </p><p><strong>(1) 原子性(Atomicity)</strong></p><p>事务的原子性指的是，事务中包含的程序作为数据库的逻辑工作单位，它所做的对数据修改操作要么全部执行，要么完全不执行。这种特性称为原子性。</p><p>例如银行取款事务分为2个步骤(1)存折减款(2)提取现金。不可能存折减款，却没有提取现金。2个步骤必须同时完成或者都不完成。</p><p><strong>(2)一致性(Consistency)</strong>    </p><p>事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。这种特性称为事务的一致性。假如数据库的状态满足所有的完整性约束，就说该数据库是一致的。</p><p>例如完整性约束a+b&#x3D;10，一个事务改变了a，那么b也应随之改变。</p><p><strong>(3)分离性(亦称独立性Isolation)</strong></p><p>分离性指并发的事务是相互隔离的。即一个事务内部的操作及正在操作的数据必须封锁起来，不被其它企图进行修改的事务看到。假如并发交叉执行的事务没有任何控制，操纵相同的共享对象的多个并发事务的执行可能引起异常情况。</p><p><strong>(4)持久性(Durability)</strong></p><p>持久性意味着当系统或介质发生故障时，确保已提交事务的更新不能丢失。即一旦一个事务提交，DBMS保证它对数据库中数据的改变应该是永久性的，即对已提交事务的更新能恢复。持久性通过数据库备份和恢复来保证。 </p><h2 id="什么是事务隔离？"><a href="#什么是事务隔离？" class="headerlink" title="什么是事务隔离？"></a>什么是事务隔离？</h2><p>任何支持事务的数据库，都必须具备四个特性，分别是：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability），也就是我们常说的事务ACID，这样才能保证事务（（Transaction）中数据的正确性。</p><p>而事务的隔离性就是指，多个并发的事务同时访问一个数据库时，一个事务不应该被另一个事务所干扰，每个并发的事务间要相互进行隔离。</p><p>如果没有事务隔离，会出现什么样的情况呢？</p><p>假设我们现在有这样一张表（T），里面记录了很多牛人的名字，我们不进行事务的隔离看看会发生什么呢？</p><p>第一天，事务A访问了数据库，它干了一件事情，往数据库里加上了新来的牛人的名字，但是没有提交事务。</p><p>insert into T values (4, ‘牛D’);</p><p>这时，来了另一个事务B，他要查询所有牛人的名字。</p><p>select Name from T;</p><p>这时，如果没有事务之间没有有效隔离，那么事务B返回的结果中就会出现“牛D”的名字。这就是“<strong>脏读（dirty read）</strong>”。</p><p>第二天，事务A访问了数据库，他要查看ID是1的牛人的名字，于是执行了</p><p>select Name from T where ID &#x3D; 1;</p><p>这时，事务B来了，因为ID是1的牛人改名字了，所以要更新一下，然后提交了事务。</p><p>update T set Name &#x3D; ‘不牛’ where ID &#x3D; 1;</p><p>接着，事务A还想再看看ID是1的牛人的名字，于是又执行了</p><p>select Name from T where ID &#x3D; 1;</p><p>结果，两次读出来的ID是1的牛人名字竟然不相同，这就是<strong>不可重复读（unrepeatable read）</strong>。</p><p>第三天，事务A访问了数据库，他想要看看数据库的牛人都有哪些，于是执行了</p><p>select * from T;</p><p>这时候，事务B来了，往数据库加入了一个新的牛人。</p><p>insert into T values(4, ‘牛D’);</p><p>这时候，事务A忘了刚才的牛人都有哪些了，于是又执行了。</p><p>select * from T;</p><p>结果，第一次有三个牛人，第二次有四个牛人。</p><p>相信这个时候事务A就蒙了，刚才发生了什么？这种情况就叫“幻读（phantom problem）”。</p><p>为了防止出现脏读、不可重复读、幻读等情况，我们就需要根据我们的实际需求来设置数据库的隔离级别。</p><p>数据库都有哪些隔离级别呢？</p><p>一般的数据库，都包括以下四种隔离级别：</p><p>读未提交（Read Uncommitted）读提交（Read Committed）可重复读（Repeated Read）串行化（Serializable）如何使用这些隔离级别，那就需要根据业务的实际情况来进行判断了。</p><p>我们接下来就看看这四个隔离级别的具体情况</p><p>读未提交（Read Uncommitted）</p><p>读未提交，顾名思义，就是可以读到未提交的内容。</p><p>因此，在这种隔离级别下，查询是不会加锁的，也由于查询的不加锁，所以这种隔离级别的一致性是最差的，可能会产生“脏读”、“不可重复读”、“幻读”。</p><p>如无特殊情况，基本是不会使用这种隔离级别的。</p><p>读提交（Read Committed）</p><p>读提交，顾名思义，就是只能读到已经提交了的内容。</p><p>这是各种系统中最常用的一种隔离级别，也是SQL Server和Oracle的默认隔离级别。这种隔离级别能够有效的避免脏读，但除非在查询中显示的加锁，如：</p><p>select * from T where ID&#x3D;2 lock in share mode;</p><p>select * from T where ID&#x3D;2 for update;</p><p>不然，普通的查询是不会加锁的。</p><p>那为什么“读提交”同“读未提交”一样，都没有查询加锁，但是却能够避免脏读呢？</p><p>这就要说道另一个机制“快照（snapshot）”，而这种既能保证一致性又不加锁的读也被称为“<strong>快照读（Snapshot Read）</strong>”</p><p>假设没有“快照读”，那么当一个更新的事务没有提交时，另一个对更新数据进行查询的事务会因为无法查询而被阻塞，这种情况下，并发能力就相当的差。</p><p>而“快照读”就可以完成高并发的查询，不过，“读提交”只能避免“脏读”，并不能避免“不可重复读”和“幻读”。</p><p>可重复读(Repeated Read)</p><p>可重复读，顾名思义，就是专门针对“不可重复读”这种情况而制定的隔离级别，自然，它就可以有效的避免“不可重复读”。而它也是MySql的默认隔离级别。</p><p>在这个级别下，普通的查询同样是使用的“快照读”，但是，和“读提交”不同的是，当事务启动时，就不允许进行“修改操作（Update）”了，而“不可重复读”恰恰是因为两次读取之间进行了数据的修改，因此，“可重复读”能够有效的避免“不可重复读”，但却避免不了“幻读”，因为幻读是由于“插入或者删除操作（Insert or Delete）”而产生的。</p><p>串行化（Serializable）</p><p>这是数据库最高的隔离级别，这种级别下，事务“串行化顺序执行”，也就是一个一个排队执行。</p><p>这种级别下，“脏读”、“不可重复读”、“幻读”都可以被避免，但是执行效率奇差，性能开销也最大，所以基本没人会用。</p><p>总结一下</p><p>为什么会出现“脏读”？因为没有“select”操作没有规矩。</p><p>为什么会出现“不可重复读”？因为“update”操作没有规矩。</p><p>为什么会出现“幻读”？因为“insert”和“delete”操作没有规矩。</p><p>“读未提（Read Uncommitted）”能预防啥？啥都预防不了。</p><p>“读提交（Read Committed）”能预防啥？使用“快照读（Snapshot Read）”，避免“脏读”，但是可能出现“不可重复读”和“幻读”。</p><p>“可重复读（Repeated Red）”能预防啥？使用“快照读（Snapshot Read）”，锁住被读取记录，避免出现“脏读”、“不可重复读”，但是可能出现“幻读”。</p><p>“串行化（Serializable）”能预防啥？排排坐，吃果果，有效避免“脏读”、“不可重复读”、“幻读”，不过效果谁用谁知道。</p><p>delemiter 分隔符 除\符号外，任何字符都可以用作语句分隔符</p><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><p>drop procedure if exists  name  删除存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 使用存储过程</span></span><br><span class="line"><span class="comment">    MySQL支持IN（传递给存储过程）、OUT（从存储过程传出，如下面的例子）、INOUT（对存储过程传入和传出）类型的参数。存储过程的代码位于BEGIN和END语句内，它们是一系列SELECT语句，用来检索值，然后保存到相应的变量（通过指定INTO关键字）</span></span><br><span class="line"><span class="comment"> 参数的数据类型：</span></span><br><span class="line"><span class="comment"> 存储过程的参数允许的数据类型与表钟使用的数据类型相同。注意，记录集不是允许的类型，因此，不能通过一个参数返回多个行和列。这是就是下面例子使用3个参数（和3条SELECT语句）的原因。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> productpricing;</span><br><span class="line"><span class="keyword">CREATE</span>　<span class="keyword">PROCEDURE</span> productpricing(</span><br><span class="line">    <span class="keyword">OUT</span> pl <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),<span class="keyword">OUT</span> ph <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),<span class="keyword">OUT</span> pa <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>)</span><br><span class="line">) </span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span>　<span class="built_in">Min</span>(prod_price)</span><br><span class="line"><span class="keyword">INTO</span> pl</span><br><span class="line"><span class="keyword">FROM</span> products;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">Max</span>(prod_price)</span><br><span class="line"><span class="keyword">INTO</span> ph</span><br><span class="line"><span class="keyword">FROM</span> products;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">Avg</span>(prod_price)</span><br><span class="line"><span class="keyword">INTO</span> pa</span><br><span class="line"><span class="keyword">FROM</span> products;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">调用存储过程，必须指定三个变量名（参数名可以随便指定）</span></span><br><span class="line"><span class="comment">分析：由于此存储过程要求3个参数，因此必须正好传递3个参数，所以这条CALL语句给出3个参数。他们是存储过程将保存结果的3个变量的名称</span></span><br><span class="line"><span class="comment">变量名 所有MySQL变量都必须以@开始。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">CALL</span> productpricing(<span class="variable">@pl</span>,<span class="variable">@ph</span>,<span class="variable">@pa</span>)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在调用时，这条语句并不显示任何数据。它返回以后可以显示（或在其他处理中使用）的变量。</span></span><br><span class="line"><span class="comment">如下，搜索产品的平均价格</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@pa</span>;</span><br><span class="line"># 获取三个值</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@pl</span>,<span class="variable">@ph</span>,<span class="variable">@pa</span>;</span><br><span class="line"># <span class="keyword">IN</span> 使用</span><br><span class="line"><span class="keyword">CREATE</span>　<span class="keyword">PROCEDURE</span> ordertotal(</span><br><span class="line">    <span class="keyword">IN</span> onumber <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">OUT</span> ototal <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>)</span><br><span class="line">) </span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(item_price<span class="operator">*</span>quantity)</span><br><span class="line"><span class="keyword">FROM</span> orderitems</span><br><span class="line"><span class="keyword">WHERE</span> order_num <span class="operator">=</span> onumber</span><br><span class="line"><span class="keyword">INTO</span>　ototal;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">CALL</span> ordertotal(<span class="number">20005</span>,<span class="variable">@total</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@total</span>;</span><br><span class="line"><span class="comment">-- 游标cursor。。</span></span><br></pre></td></tr></table></figure><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><p>​触发器是MySQL响应以下任意语句而自动执行的一条MySQL语句（或位于BEGIN和END语句之间的一组语句）：delete、insert、update，其他MySQL语句不支持触发器。</p><h3 id="一、创建触发器"><a href="#一、创建触发器" class="headerlink" title="一、创建触发器"></a>一、创建触发器</h3><ul><li><p>唯一的触发器名</p></li><li><p>触发器的关联表</p></li><li><p>触发器应该相应的活动（delete、insert、update）</p></li><li><p>触发器何时执行（处理之前或之后）</p><p><strong>保持每个数据库的触发器名唯一</strong>在MySQL5中，触发器名必须在每个表中唯一，但不是在每个数据库中唯一。这表示同一数据库中的两个表可具有相同名字的触发器。这在其他每个数据库触发器名必须唯一的DBMS中是不允许的，而且以后的MySQL版本很有可能会使命名规则更为严格。因此，现在最好是在数据库范围内使用唯一的触发器名。</p><p><a href="https://zhuanlan.zhihu.com/p/158670286">触发器参考</a></p></li></ul><h2 id="管理事务处理"><a href="#管理事务处理" class="headerlink" title="管理事务处理"></a>管理事务处理</h2><p>​<strong>并非所有引擎都支持事务处理</strong>MySQL支持几种基本的数据库引擎。MyISAM和InnoDB是两种最常使用的引擎。前者不支持明确的事务处理管理，后者支持。若你的应用中需要事务处理功能，则一定要使用正确的引擎类型。</p><p>​事务处理可以用来维护数据库的完整性，它保证成批的MySQL操作要么完全执行，要么完全不执行。</p><ul><li><p>事务（transaction）指一组SQL语句。</p></li><li><p>回退（rollback）指撤销指定SQL语句的过程。</p></li><li><p>提交（commit）指将为存储的SQL语句结果写入数据库表。</p></li><li><p>保留点（savepoint）指事务处理中设置的历史占位符（placehoder），你可以对它发布回退（与回退整个事务处理不同）。</p></li></ul><h3 id="使用ROLLBACK"><a href="#使用ROLLBACK" class="headerlink" title="使用ROLLBACK"></a>使用ROLLBACK</h3>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> ordertotals;</span><br><span class="line"><span class="keyword">START</span> TRANSACTION;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> ordertotals;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> ordertotals;</span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> ordertotals;</span><br></pre></td></tr></table></figure><p>  <strong>可回退的语句</strong>事务处理用来管理insert、update和delete语句。你不能回退select语句（这样做也没有什么意义）你不能回退create或drop操作。事务处理块中可以使用这两条语句，但如果你执行回退，它们不会被撤销。</p><h3 id="使用COMMIT"><a href="#使用COMMIT" class="headerlink" title="使用COMMIT"></a>使用COMMIT</h3><p>​一般的MySQL语句都是直接针对数据库表执行和编写的。这就是所谓的隐含提交（implicit commit），即提交（写或保存）操作时自动进行的。但是在事务处理模块中，提交不会隐含的进行。为进行明确的提交，使用commit语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> orderitems <span class="keyword">where</span> order_num <span class="operator">=</span> <span class="number">20010</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> orders <span class="keyword">where</span> order_num <span class="operator">=</span> <span class="number">20010</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在这个例子中，从系统中完全删除订单20010。因为涉及更新两个数据库表orders和orderitems，所以使用事务处理块俩保证订单不被部分删除。最后的commit语句仅在不出错时写出更改。如果第一条delete起作用，但第二条失败，则delete不会提交（实际上，它是被自动撤销的）。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>​<strong>隐含事务关闭</strong>当commit或rollback语句执行后，事务会自动关闭(将来的更改会隐含提交)。</p><h3 id="使用保留点"><a href="#使用保留点" class="headerlink" title="使用保留点"></a>使用保留点</h3><p>​为了支持回退部分事务处理，必须能在事务处理块中合适的位置放置占位符。这样，如果需要回退，可以回退到某个占位符。这些占位符称为保留点。为了创建占位符，可如下使用savepoint语句<br><code>savepoint delete1;</code>每个保留点都取标识它的唯一名字，以便在回退时，MySQL知道要回退到何处。回退到本例给出的保留点  <code>rollback to delete1;</code></p><p>​<strong>保留点越多越好</strong>可以子啊MySQL代码中设置任意多的保留点，越多越好。保留点越多，就越能按照自己的意愿灵活的进行回退。</p><p>​<strong>释放保留点</strong>保留点在事务处理完成（执行一条rollback或commit）后自动释放。自MySQL5以来，也可以用 release savepoint明确地释放保留点。</p><h3 id="更改默认的提交行为"><a href="#更改默认的提交行为" class="headerlink" title="更改默认的提交行为"></a>更改默认的提交行为</h3><p>​默认的MySQL行为是自动提交所有更改。任何时候你执行一条MySQL语句，该语句实际上都是针对表执行的，而且所作的更改立即生效。为指示MySQL不自动提交更改，需要使用以下语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">autocommit标志决定是否自动提更改，不管有没有commit语句。设置autocommit为0（MySQL 0为false，非0为true）指示MySQLMySQL不自动提交更改（直到autocommit被设置为真为止）</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>​<strong>标志为连接专用</strong>autocommit标志是针对每个连接而不是服务器的。</p>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装docker</title>
      <link href="/2021/05/01/Ubuntu%E5%AE%89%E8%A3%85docker/"/>
      <url>/2021/05/01/Ubuntu%E5%AE%89%E8%A3%85docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu安装docker"><a href="#Ubuntu安装docker" class="headerlink" title="Ubuntu安装docker"></a>Ubuntu安装docker</h1><h2 id="一、准备工作下载相软件、镜像"><a href="#一、准备工作下载相软件、镜像" class="headerlink" title="一、准备工作下载相软件、镜像"></a>一、准备工作下载相软件、镜像</h2><ol><li><a href="https://www.vmware.com/go/getworkstation-win">下载win10 VMware Workstation Pro</a>如果想下载其他版本请<a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">前往</a></li><li><a href="https://releases.ubuntu.com/20.04.2/ubuntu-20.04.2-live-server-amd64.iso">下载Ubuntu服务器版镜像</a>如果想下载其他版本请<a href="https://cn.ubuntu.com/download">前往</a></li><li>安装VMware Workstation Pro 激活密钥: <code>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</code>  安装镜像，此步骤如果不会请<a href="https://www.baidu.com/s?ie=UTF-8&wd=vmwareworkstationpro%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85ubuntu%E9%95%9C%E5%83%8F">百度</a></li></ol><span id="more"></span> <h2 id="二、修改Ubuntu相关配置"><a href="#二、修改Ubuntu相关配置" class="headerlink" title="二、修改Ubuntu相关配置"></a>二、修改Ubuntu相关配置</h2><p><strong><a href="https://zelen.lanzoui.com/ihS85tjde5a">相关配置文件下载 清华软件源、MySQL配置文件、redis配置文件、elasticsearch配置文件、kibana配置文件、docker镜像源配置文件</a></strong></p><p><strong>切换软件源为<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">清华源</a>根据自己的安装版本选择</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">简单来说就是：apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.安装lrzsz工具，方便windows和linux间的文件上传下载</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install lrzsz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.备份镜像源 参考 2</span></span><br><span class="line">sudo cp -v /etc/apt/sources.list /etc/apt/sources.list.backup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.更换镜像源</span></span><br><span class="line">sudo rm -rf /etc/apt/sources.list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者直接重命名</span></span><br><span class="line">sudo mv /etc/apt/sources.list /etc/apt/sources.list.backup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传已经编辑好的sources.list到 /etc/apt/ 目录下 或者使用vim编辑sources.list(不推荐 太慢了)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.更新 参考 3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt update：只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）</span></span><br><span class="line">sudo apt update </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt upgrade：更新已安装的软件包具体可百度自行查找</span></span><br><span class="line">sudo apt upgrade 软件包名(不填则更新所有)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5.修改Ubuntu时区 参考 5</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看时间</span></span><br><span class="line">date -R</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改时区</span></span><br><span class="line">timedatectl set-timezone &quot;Asia/Shanghai&quot;</span><br></pre></td></tr></table></figure><h2 id="三、安装docker"><a href="#三、安装docker" class="headerlink" title="三、安装docker"></a>三、安装docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装方法挺多的 我是直接按照官方方式安装的 可以根据脚本方式安装Install using the convenience script 下列命令的相关解释请查看 参考 4</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">我是新环境无需执行卸载步骤 如果需要的自行卸载</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方法一 推荐（脚本方式安装）</span></span><br><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"></span><br><span class="line">sudo sh get-docker.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">方法二</span></span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install apt-transport-https ca-certificates curl gnupg lsb-release</span><br><span class="line"></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line">echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看是否安装成功</span></span><br><span class="line">sudo docker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装成功在进行以下步骤，若未成功请自查原因 版本 Ubuntu Server 20.04.2 LTS</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改docker镜像源 按照下载的daemon.json配置 直接vim 我的是没有daemon.json这个配置文件的vim帮我自动创建了，若你有此文件 则进行修改 wq保存退出</span></span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;&quot;registry-mirrors&quot;:[</span><br><span class="line">&quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br><span class="line">]&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将当前用户 添加 Docker用户组 zne 用户名 尝试过重启docker但没起作用 因此直接 reboot</span></span><br><span class="line">sudo groupadd docker.service</span><br><span class="line">sudo usermod -aG docker zne</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h2 id="四、docker安装相关镜像及配置"><a href="#四、docker安装相关镜像及配置" class="headerlink" title="四、docker安装相关镜像及配置"></a>四、docker安装相关镜像及配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 创建相关文件 可按照个人习惯创建</span></span><br><span class="line">sudo mkdir -pv /usr/local/portainer/data</span><br><span class="line">sudo mkdir -pv /usr/local/mysql/&#123;conf,data,logs&#125; </span><br><span class="line">sudo mkdir -pv /usr/local/redis/&#123;conf,data,logs&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将下载的配置文件放置到对应的文件夹下 my.cnf --&gt; /usr/local/mysql/conf  redis.conf --&gt; /usr/local/redis/conf</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 下载相关镜像</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">portainer/poratainer 已弃用 https://hub.docker.com/r/portainer/portainer</span></span><br><span class="line">docker pull portainer/portainer</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Portainer 2.0 的所有新版本都将在 portainer/portainer-ce 中发布 推荐使用下面这个</span></span><br><span class="line">docker pull portainer/portainer-ce</span><br><span class="line">docker pull mysql</span><br><span class="line">docker pull redis</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3. 运行镜像</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Portainer 参考 6 直接浏览器 运行 Ubuntu IP:9000 创建新的用户即可 废弃</span></span><br><span class="line">docker run -p 9000:9000 -p 8000:8000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/portainer/data:/data -d portainer/portainer</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Portainer-ce 参考 6 直接浏览器 运行 Ubuntu IP:9000 创建新的用户即可</span></span><br><span class="line">docker run -p 9000:9000 -p 8000:8000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/portainer/data:/data -d portainer/portainer-ce</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MySQL</span></span><br><span class="line">docker run --name mysql --restart=always -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql/conf:/etc/mysql/conf.d -v /usr/local/mysql/logs:/logs -d mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改MySQL 密码为root 若想用123456的则不必执行下列命令</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器</span></span><br><span class="line">docker exec -it mysql bash</span><br><span class="line">mysql -uroot -p</span><br><span class="line">123456</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改MySQL8为简易密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Redis</span></span><br><span class="line">docker run -it -v /usr/local/redis/data:/var/lib/redis -v /usr/local/redis/conf/redis.conf:/etc/redis/redis.conf -v /usr/local/redis/logs:/logs --restart=always --name redis -p 6379:6379 -d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure><h3 id="安装rabbitmq"><a href="#安装rabbitmq" class="headerlink" title="安装rabbitmq"></a>安装rabbitmq</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://hub.docker.com/_/rabbitmq 查找rabbitmq镜像</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">此方法需要手动开启它的管理后台(我使用的这种)</span></span><br><span class="line">docker pull rabbitmq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取带web管理界面的</span></span><br><span class="line">docker pull rabbitmq:3.8.19-management</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">带图形化界面（推荐使用这个）</span></span><br><span class="line">docker pull rabbitmq:management</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建相关挂载目录</span></span><br><span class="line">sudo mkdir -pv /usr/local/rabbitmq/&#123;conf,data,logs&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">图像化镜像启动</span></span><br><span class="line">docker run -p 15672:15672 -p 5672:5672 --name rabbitmq --restart=always -v /usr/local/rabbitmq/data:/var/lib/rabbitmq/mnesia -v /usr/local/rabbitmq/logs:/var/log/rabbitmq/log -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -d rabbitmq:management</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动镜像</span></span><br><span class="line">docker run -p 15672:15672 -p 5672:5672 --name rabbitmq --restart=always -v /usr/local/rabbitmq/data:/var/lib/rabbitmq/mnesia -v /usr/local/rabbitmq/logs:/var/log/rabbitmq/log -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin -d rabbitmq</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器并开启web管理界面</span></span><br><span class="line">docker exec -it rabbitmq bash</span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure><h3 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建相关挂载目录</span></span><br><span class="line">sudo mkdir -pv /usr/local/mongo/&#123;conf,data,logs&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在 /usr/local/mongo/conf目录下创建mongo配置文件，内容在下面</span></span><br><span class="line">touch mongodb.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取镜像</span></span><br><span class="line">docker pull mongo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动镜像 参考 8</span></span><br><span class="line">docker run --name mongo --restart=always -p 27017:27017 -v /usr/local/mongo/data:/data/db -v /usr/local/mongo/conf:/data/conf -v /usr/local/mongo/logs:/data/log -d mongo</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">端口</span></span><br><span class="line">port=27017</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库文件存放目录</span></span><br><span class="line">dbpath=/data/mongo/data</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">日志文件存放路径</span></span><br><span class="line">logpath=/data/mongo/log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用追加方式写日志</span></span><br><span class="line">logappend=true</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以守护线程的方式运行，创建服务器进程</span></span><br><span class="line">fork=true</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">最大同时连接数</span></span><br><span class="line">maxConns=100</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">不启用验证</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">noauth=<span class="literal">true</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每次写入会记录一条操作日志</span></span><br><span class="line">journal=true</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">存储引擎有mmapv1、wiredTiger、mongorocks</span></span><br><span class="line">storageEngine=wiredTiger</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">访问IP</span></span><br><span class="line">bind_ip=0.0.0.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用户验证</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">auth=<span class="literal">true</span></span></span><br></pre></td></tr></table></figure><h3 id="安装MinIO"><a href="#安装MinIO" class="headerlink" title="安装MinIO"></a>安装MinIO</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相关参考 9</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建相关挂载目录</span></span><br><span class="line">sudo mkdir -pv /usr/local/minio/&#123;conf,data,logs&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取镜像</span></span><br><span class="line">docker pull minio/minio</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动镜像</span></span><br><span class="line">docker run -p 9090:9000 -p 9001:9001 --name minio --restart=always -v /usr/local/minio/data:/data -e MINIO_ROOT_USER=minioadmin -e MINIO_ROOT_PASSWORD=minioadmin -d minio/minio server /data --console-address &quot;:9001&quot;</span><br></pre></td></tr></table></figure><h3 id="安装elasticsearch"><a href="#安装elasticsearch" class="headerlink" title="安装elasticsearch"></a>安装elasticsearch</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相关参考 10（主要） 11（辅助）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建相关挂载目录</span></span><br><span class="line">sudo mkdir -pv /usr/local/elk/elasticsearch/&#123;config,data,logs,plugins&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果有需要，创建用户定义的网络（用于连接到连接到同一网络的其他服务（例如：Kibana））</span></span><br><span class="line">docker network rm mynet</span><br><span class="line">docker network create --driver bridge --subnet 172.18.0.0/16 --gateway 172.18.0.1 mynet</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取镜像</span> </span><br><span class="line">docker pull elasticsearch:7.14.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先最简启动一个elasticsearch 容器 复制他的相关配置文件</span></span><br><span class="line">docker run --name elasticsearch -d -e ES_JAVA_OPTS=&quot;-Xms256m -Xmx256m&quot; -e &quot;discovery.type=single-node&quot; -p 9200:9200 -p 9300:9300 elasticsearch:7.14.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制配置文件</span></span><br><span class="line">docker cp elasticsearch:/usr/share/elasticsearch/config /usr/local/elk/elasticsearch/</span><br><span class="line">docker cp elasticsearch:/usr/share/elasticsearch/plugins /usr/local/elk/elasticsearch/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换身份为root 先将原配置文件重命名，在将配置文件elasticsearch.yml复制到config下(直接在xshell中拖动即可，注意一定要用root)</span></span><br><span class="line">mv elasticsearch.yml elasticsearch.yml.old</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改目录权限</span></span><br><span class="line">sudo chmod -vR 777 /usr/local/elk/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器并重新启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动镜像</span></span><br><span class="line">docker run --name elasticsearch --restart=always --net mynet -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS=&quot;-Xms512m -Xmx512m&quot; -e &quot;discovery.type=single-node&quot; -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -v /usr/local/elk/elasticsearch/config/:/usr/share/elasticsearch/config -v /usr/local/elk/elasticsearch/data:/usr/share/elasticsearch/data -v /usr/local/elk/elasticsearch/logs:/usr/share/elasticsearch/logs -v /usr/local/elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins -d elasticsearch:7.14.1</span><br></pre></td></tr></table></figure><h3 id="安装kibana"><a href="#安装kibana" class="headerlink" title="安装kibana"></a>安装kibana</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相关参考 10、11</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建相关挂载目录</span></span><br><span class="line">sudo mkdir -pv /usr/local/elk/kibana/&#123;config,data,logs,plugins&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取镜像</span> </span><br><span class="line">docker pull kibana:7.14.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先最简启动一个kibana 容器 复制他的相关配置文件</span></span><br><span class="line">docker run --name kibana -p 5601:5601 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -d kibana:7.14.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制配置文件</span></span><br><span class="line">docker cp kibana:/usr/share/kibana/config /usr/local/elk/kibana/</span><br><span class="line">docker cp kibana:/usr/share/kibana/plugins /usr/local/elk/kibana/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换身份为root 先将原配置文件重命名，在将配置文件kibana.yml复制到config下(直接在xshell中拖动即可，注意一定要用root)</span></span><br><span class="line">mv kibana.yml kibana.yml.old</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器并重新启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动镜像</span></span><br><span class="line">docker run --name kibana --restart=always --net mynet -p 5601:5601 -v /usr/local/elk/kibana/config:/usr/share/kibana/config -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -d kibana:7.14.1</span><br></pre></td></tr></table></figure><h3 id="docker相关命令"><a href="#docker相关命令" class="headerlink" title="docker相关命令"></a>docker相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开机启动</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找镜像 替换mysql</span></span><br><span class="line">docker search mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载镜像 此处为指定版本5.7 可直接mysql（下载最新版mysql）</span></span><br><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除镜像   f6509bac4980为IMAGE ID</span></span><br><span class="line">docker rmi f6509bac4980</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看容器列表  -a 查看所有容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止运行的容器  使用容器名或者容器<span class="built_in">id</span></span></span><br><span class="line">docker stop container-name/container-id</span><br><span class="line">docker start container-name/container-id</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除容器</span></span><br><span class="line">docker rm container-id</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">容器日志</span></span><br><span class="line">docker logs container-name/container-id</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020043011175696.png" alt="docker"></p><blockquote><p>-i：表示运行容器<br>-d：在run后面加上-d参数,则会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加-it两个参数，创建后就会自动进去容器）。<br>-di：后台运行容器；<br>–name：指定容器名；<br>-p：指定服务运行的端口（5672：应用访问端口；15672：控制台Web端口号）；<br>-v：映射目录或文件（文件共享），格式 宿主机目录：容器目录<br>–hostname：主机名（RabbitMQ的一个重要注意事项是它根据所谓的 “节点名称” 存储数据，默认为主机名）；<br>-e 指定环境变量；（RABBITMQ_DEFAULT_VHOST：默认虚拟机名；RABBITMQ_DEFAULT_USER：默认的用户名；RABBITMQ_DEFAULT_PASS：默认用户名的密码）</p></blockquote><h2 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h2><ol><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></li><li><a href="https://blog.csdn.net/weixin_42118522/article/details/106069030">ubuntu20.04更改国内镜像源</a></li><li><a href="https://blog.csdn.net/zhjulia123/article/details/83479515">Ubuntu 中apt update和upgrade 的区别</a></li><li><a href="https://docs.docker.com/engine/install/ubuntu/">Install Docker Engine on Ubuntu | Docker Documentation</a></li><li><a href="https://blog.csdn.net/cau_eric/article/details/90478798">ubuntu查看和修改时区</a></li><li><a href="https://mp.weixin.qq.com/s/YRqISK4yJo9J9WzzTvD9CQ">Docker 图形化工具 Portainer</a></li><li><a href="https://blog.csdn.net/weixin_44763595/article/details/109528165">为什么用docker安装rabbitmq打不开管理页面呢</a></li><li><a href="https://blog.csdn.net/weixin_45345374/article/details/116271582">docker安装mongo容器并挂载外部配置文件及目录</a></li><li><a href="https://mp.weixin.qq.com/s/qHjOEeQ3CaA0U4a2YBi3Pw">Github标星28K+！MinIO这款可视化的对象存储服务真香！</a></li><li><a href="https://github.com/Weasley-J/lejing-mall/blob/main/shell/run_elk_install_v7.13.2.sh">lejing-mall&#x2F;run_elk_install_v7.13.2.sh</a></li><li><a href="https://blog.csdn.net/qq_40942490/article/details/111594267">docker安装elasticsearch（最详细版）</a></li><li><a href="https://www.elastic.co/guide/en/kibana/7.14/docker.html">Install Kibana with Docker | Kibana Guide </a></li><li><a href="https://www.cnblogs.com/Kit-L/p/13251786.html">Docker的自定义网络</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM相关</title>
      <link href="/2021/04/23/JVM%E7%9B%B8%E5%85%B3/"/>
      <url>/2021/04/23/JVM%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="JVM相关"><a href="#JVM相关" class="headerlink" title="JVM相关"></a>JVM相关</h1><h2 id="一、JVM性能调优的6大步骤，及关键调优参数详解"><a href="#一、JVM性能调优的6大步骤，及关键调优参数详解" class="headerlink" title="一、JVM性能调优的6大步骤，及关键调优参数详解"></a>一、<a href="https://zhuanlan.zhihu.com/p/222718783">JVM性能调优的6大步骤，及关键调优参数详解</a></h2><h3 id="一、JVM内存调优"><a href="#一、JVM内存调优" class="headerlink" title="一、JVM内存调优"></a>一、JVM内存调优</h3><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210423154342856.png" alt="image-20210423154342856"></p><p><strong>对JVM内存的系统级的调优主要目的是减少GC的频率和Full GC的次数</strong></p><ol><li><p><strong>Full GC</strong></p><p>会对整个堆进行整理，包括Yong、Tenured和Perm。Full GC需要对整个堆进行回收，所以比较慢，因此应该尽可能减少Full GC的次数</p></li><li><p><strong>导致Full GC的原因</strong></p><ul><li><strong>年老代(Tenured)被写满</strong>  调优时尽量让对象在新生代GC时被回收、让对象在新生代多存活一段时间和不要创建过大的对象及数组避免直接在旧生代创建对象 。</li><li><strong>持久代Pemanet Generation空间不足</strong>  增大Perm Gen空间，避免太多静态对象 ， 控制好新生代和旧生代的比例</li><li><strong>System.gc()被显示调用</strong>  垃圾回收不要手动触发，尽量依靠JVM自身的机制</li></ul><p><strong>在对JVM调优的过程中，很大一部分工作就是对于FullGC的调节</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> jvm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 WSL 安装 docker 相关流程</title>
      <link href="/2021/03/28/Win10%20WSL%20%E5%AE%89%E8%A3%85%20docker%20%E7%9B%B8%E5%85%B3%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/03/28/Win10%20WSL%20%E5%AE%89%E8%A3%85%20docker%20%E7%9B%B8%E5%85%B3%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10-WSL-安装-docker-相关流程"><a href="#Win10-WSL-安装-docker-相关流程" class="headerlink" title="Win10 WSL 安装 docker 相关流程"></a>Win10 WSL 安装 docker 相关流程</h1><span id="more"></span><h2 id="一、相关下载及配置"><a href="#一、相关下载及配置" class="headerlink" title="一、相关下载及配置"></a>一、相关下载及配置</h2><ol><li><p><a href="https://www.docker.com/products/docker-desktop">下载docker desktop</a></p></li><li><p>微软商或者<a href="https://docs.microsoft.com/en-us/windows/wsl/install-manual#installing-your-distro">网站</a>下载相应的win10 子系统</p></li><li><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10">开启 wsl2</a></p></li><li><p>下载 <a href="https://github.com/DDoSolitary/LxRunOffline/releases/tag/v3.5.0">LxRunOffline-vx.x.0-msvc</a> 此步骤为迁移子系统到D盘，若C盘足够可忽略此步骤</p><ul><li><p>在LxRunOffline下载目录按住SHIFT并右键鼠标，选择“在此处打开Powershell窗口”，进入界面后输入.\LxRunOffline.exe list即可查询目前本机有的子系统以及位置</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210328205752655.png" alt="image-20210328205752655"></p></li><li><p>子系统迁移  <strong>使用<code>lxrunoffline move</code>进行迁移 ， -n 指定你要迁移的系统名 ，-d 指定你新系统的迁移路径</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210328210100012.png" alt="image-20210328210100012"></p></li><li><p>使用<code>LxRunOffline.exe get-dir</code>查询系统目录，查看是否迁移成功  <code>LxRunOffline.exe get-dir -n 子系统名称</code></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/145753804">参考链接</a></p></li></ul></li><li><p>安装 docker，若C盘足够同样忽略一下 步骤</p><ul><li><p>看似<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210328211606211.png" alt="wsl开启"></p></li><li><p>镜像加速 <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">阿里云</a> 容器镜像服务–&gt;镜像工具–&gt;镜像加速器–&gt;加速地址<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210328211652150.png" alt="image-20210328211652150"></p></li><li><p>将docker数据从C盘迁移出去</p></li><li><p>关闭docker</p></li><li><p>关闭所有发行版 <code>wsl --shutdown</code></p></li><li><p>将docker-desktop-data、docker-desktop导出 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --export docker-desktop-data D:\wsl\docker-desktop-data\docker-desktop-data.tar</span><br><span class="line">wsl --export docker-desktop D:\wsl\docker-desktop\docker-desktop.tar</span><br></pre></td></tr></table></figure></li><li><p>注销docker-desktop-data </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister docker-desktop-data</span><br><span class="line">wsl --unregister docker-desktop</span><br></pre></td></tr></table></figure></li><li><p>重新导入docker-desktop-data</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --import docker-desktop-data D:\wsl\docker-desktop-data\ D:\wsl\docker-desktop-data\docker-desktop-data.tar --version 2</span><br><span class="line">wsl --import docker-desktop D:\wsl\docker-desktop\ D:\wsl\docker-desktop\docker-desktop.tar --version 2</span><br></pre></td></tr></table></figure></li><li><p>重启docker</p></li></ul></li></ol><h2 id="二、docker-镜像下载及启动（以Ubuntu为例）"><a href="#二、docker-镜像下载及启动（以Ubuntu为例）" class="headerlink" title="二、docker 镜像下载及启动（以Ubuntu为例）"></a>二、docker 镜像下载及启动（以Ubuntu为例）</h2><h3 id="一、将配置文件挂载到Ubuntu"><a href="#一、将配置文件挂载到Ubuntu" class="headerlink" title="一、将配置文件挂载到Ubuntu"></a>一、将配置文件挂载到Ubuntu</h3><p><strong>访问Ubuntu文件 win+ r 在输入 \wsl$\Ubuntu-20.04\  注意替换自己的子系统名</strong></p><ol><li><p>创建 相关文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -pv /usr/local/mysql/&#123;conf,data,logs&#125; </span><br><span class="line">sudo mkdir -pv /usr/local/redis/&#123;conf,data,logs&#125; </span><br></pre></td></tr></table></figure></li><li><p>下载镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不指定版本 默认下载最新版本镜像</span></span><br><span class="line">docker pull mysql</span><br><span class="line">docker pull redis</span><br></pre></td></tr></table></figure></li><li><p>镜像启动</p><ol><li><p>MySQL 配置文件<a href="https://zelen.lanzous.com/imB5Bnevqih">下载</a>将下载的文件放入到 <code>/usr/local/mysql/conf</code>也可自己重新指定文件路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql --restart=always -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql/conf:/etc/mysql/conf.d -v /usr/local/mysql/logs:/logs -d mysql</span><br></pre></td></tr></table></figure></li><li><p>Redis配置文件<a href="https://zelen.lanzous.com/iektOil70vc">下载 </a> 文件放入路径<code>/usr/local/redis/conf/redis.conf</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /usr/local/redis/data:/var/lib/redis -v /usr/local/redis/conf/redis.conf:/etc/redis/redis.conf -v /usr/local/redis/logs:/logs --restart=always --name redis -p 6379:6379 -d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="二、配置文件在docker容器中"><a href="#二、配置文件在docker容器中" class="headerlink" title="二、配置文件在docker容器中"></a>二、配置文件在docker容器中</h3><p><strong>若要修改配置文件需要到指定的容器中进行修改</strong></p><ol><li><p>镜像启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MySQL /usr/local/mysql/conf为空文件</span></span><br><span class="line">docker run --name mysql --restart=always -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql/conf:/etc/mysql/conf.d -v /usr/local/mysql/logs:/logs -d mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Redis /usr/local/redis/conf为空文件</span></span><br><span class="line">docker run -it -v /usr/local/redis/data:/var/lib/redis -v /usr/local/redis/conf:/etc/redis/redis.conf -v /usr/local/redis/logs:/logs --restart=always --name redis -p 6379:6379 -d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure></li></ol><h3 id="三、其他相关命令"><a href="#三、其他相关命令" class="headerlink" title="三、其他相关命令"></a>三、其他相关命令</h3><p><strong>修改配置文件、下载配置文件等操作</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">docker <span class="built_in">cp</span> :用于容器与主机之间的数据拷贝。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6bb94da8196e为容器<span class="built_in">id</span> 可通过 docker ps 查看</span></span><br><span class="line">docker cp 6bb94da8196e:/etc/mysql/ D:\ZNE\1\</span><br><span class="line">docker cp D:\ZNE\1\ 6bb94da8196e:/etc/mysql/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改容器配置文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入指定容器</span></span><br><span class="line">docker exec -it mysql bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 linux版本</span></span><br><span class="line">cat /etc/issue</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新 apt-get 若无法更新 尝试更换配置 /etc/apt/sources.list</span></span><br><span class="line">apt-get update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 vim</span></span><br><span class="line">apt-get install vim -y</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置文件路径 在启动镜像时已指定 也可通过 find 查找</span></span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/linux/linux-comm-find.html">Linux find 命令</a></p>]]></content>
      
      
      <categories>
          
          <category> wsl </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win10 WSL 安装 docker 相关流程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10 WSL2 使用Docker</title>
      <link href="/2021/02/05/Win10%20WSL2%20%E4%BD%BF%E7%94%A8Docker/"/>
      <url>/2021/02/05/Win10%20WSL2%20%E4%BD%BF%E7%94%A8Docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10-WSL2-使用Docker"><a href="#Win10-WSL2-使用Docker" class="headerlink" title="Win10 WSL2 使用Docker"></a>Win10 WSL2 使用Docker</h1><span id="more"></span><h2 id="一、相关环境配置"><a href="#一、相关环境配置" class="headerlink" title="一、相关环境配置"></a>一、相关环境配置</h2><ol><li>win10环境为专业版（不是的自行百度找秘钥）</li><li><a href="https://www.docker.com/products/docker-desktop">安装docker-desktop</a></li><li>打开系统虚拟机平台<ul><li>首先，需要打开“系统虚拟机平台”功能，在“控制面板\所有控制面板项\程序和功能”中选择“启用或者关闭Windows功能”，勾选对应选项即可：<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205102305690.png" alt="image-20210205102305690"></li></ul></li></ol><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205102336980.png" alt="image-20210205102336980"></p><ol start="4"><li><p>打开Microsoft Store，下载Ubuntu20.04</p><ul><li><p><strong>将Ubuntu安装到D盘，步骤如下</strong></p><ul><li><a href="https://docs.microsoft.com/en-us/windows/wsl/install-manual#installing-your-distro">现在对应版本的Ubuntu</a></li></ul></li></ul></li></ol><ul><li>将文件解压到你要指定的路径 解压<ul><li>双击 ubuntu2004.exe运行即可</li></ul></li></ul><ol start="5"><li><p>cmd 查看 <code>wsl -l --v</code>  </p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205113626498.png" alt="image-20210205113626498"></p></li><li><p>查看linux目录 <code>\\wsl$\Ubuntu-20.04\</code></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205102754173.png" alt="image-20210205102754173"></p></li><li><p>docker 相关</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205103053072.png" alt="image-20210205103053072"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20210205103035157.png" alt="image-20210205103035157"></p></li><li><p>将docker数据从C盘迁移出去</p><ul><li><p>关闭docker</p></li><li><p>关闭所有发行版 <code>wsl --shutdown</code></p></li><li><p>将docker-desktop-data导出 ，docker-desktop占用空间小暂不处理（处理方式类似）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --export docker-desktop-data D:\wsl\docker-desktop-data\docker-desktop-data.tar</span><br></pre></td></tr></table></figure></li><li><p>注销docker-desktop-data <code>wsl --unregister docker-desktop-data</code></p></li><li><p>重新导入docker-desktop-data</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import docker-desktop-data D:\wsl\docker-desktop-data\ D:\wsl\docker-desktop-data\docker-desktop-data.tar --version 2</span><br></pre></td></tr></table></figure></li><li><p>重启docker</p></li></ul></li><li><p><a href="https://zelen.lanzous.com/inqvqlc4msh">docker 镜像相关挂载文件</a>将文件放在 <code>/mnt/wsl/docker/</code></p></li></ol><h2 id="二、安装相关镜像"><a href="#二、安装相关镜像" class="headerlink" title="二、安装相关镜像"></a>二、安装相关镜像</h2><h3 id="安装MySQL相关命令"><a href="#安装MySQL相关命令" class="headerlink" title="安装MySQL相关命令"></a>安装MySQL相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载 随系统启动</span></span><br><span class="line">docker run -it -v /mnt/wsl/docker/mysql/data:/var/lib/mysql -v /mnt/wsl/docker/mysql/config/my.cnf:/etc/mysql/my.cnf --restart=always --name mysql8 -e MYSQL_ROOT_PASSWORD=system123456 -p 3306:3306 -d mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入容器</span></span><br><span class="line">docker exec -it mysql8 bash</span><br><span class="line">mysql -uroot -p</span><br><span class="line">system123456</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改MySQL8为简易密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;root&#x27;;</span><br></pre></td></tr></table></figure><h3 id="安装Redis相关命令"><a href="#安装Redis相关命令" class="headerlink" title="安装Redis相关命令"></a>安装Redis相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载 随系统启动</span></span><br><span class="line">docker run -it -v /mnt/wsl/docker/redis/data:/var/lib/redis -v /mnt/wsl/docker/redis/config/redis.conf:/etc/redis/redis.conf --restart=always --name redis -p 6379:6379 -d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure><h2 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h2><p><a href="https://www.jianshu.com/p/a20c2d58eaac">https://www.jianshu.com/p/a20c2d58eaac</a></p><p><a href="https://zhuanlan.zhihu.com/p/148511634">https://zhuanlan.zhihu.com/p/148511634</a></p><p><a href="https://docs.docker.com/docker-for-windows/wsl/">https://docs.docker.com/docker-for-windows/wsl/</a></p><p><a href="https://my.oschina.net/u/4313107/blog/4404650">https://my.oschina.net/u/4313107/blog/4404650</a></p><p><a href="https://www.jianshu.com/p/e79f4c938000">https://www.jianshu.com/p/e79f4c938000</a></p>]]></content>
      
      
      <categories>
          
          <category> wsl </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> win10 </tag>
            
            <tag> wsl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零散记录 LINUX相关</title>
      <link href="/2021/01/28/%E9%9B%B6%E6%95%A3%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/01/28/%E9%9B%B6%E6%95%A3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="零散记录-LINUX相关"><a href="#零散记录-LINUX相关" class="headerlink" title="零散记录 LINUX相关"></a>零散记录 LINUX相关</h1><!--  more  --><h2 id="centos7-安装Chrome"><a href="#centos7-安装Chrome" class="headerlink" title="centos7 安装Chrome"></a>centos7 安装Chrome</h2><ol><li><p><strong>先打开你的终端，并使用wget下载最新的Chrome 64位.rpm软件包：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p><strong>用sudo权限或者root用户进行安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo</span></span><br><span class="line">sudo yum install ./google-chrome-stable_current_*.rpm -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">root</span></span><br><span class="line">yum install ./google-chrome-stable_current_*.rpm -y</span><br></pre></td></tr></table></figure></li><li><p><strong>确认是否安装成功, 以及检查安裝的版本:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-chrome -version</span><br></pre></td></tr></table></figure></li><li><p>查看浏览器路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> rpm -qal |grep chrome</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">正常路径</span></span><br><span class="line">/usr/bin/google-chrome</span><br></pre></td></tr></table></figure></li></ol><h2 id="Ubuntu-安装node"><a href="#Ubuntu-安装node" class="headerlink" title="Ubuntu 安装node"></a>Ubuntu 安装node</h2><p><strong>以下为root权限，权限不足自觉 sudo</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行检查可更新的软件</span></span><br><span class="line">apt update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装nodejs、npm</span></span><br><span class="line">apt install nodejs</span><br><span class="line">apt install npm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更换淘宝镜像 外网环境请忽略</span> </span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装更新版本的工具 N -g 全局安装</span></span><br><span class="line">npm install n -g</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新node版本 stable 稳定版  lts 长久支持版</span></span><br><span class="line">n stable</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新服务器 防止 nodejs 与 npm 版本冲突</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="Ubuntu-安装-Chrome"><a href="#Ubuntu-安装-Chrome" class="headerlink" title="Ubuntu 安装 Chrome"></a>Ubuntu 安装 Chrome</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - </span><br><span class="line"></span><br><span class="line">sudo sh -c &#x27;echo &quot;deb http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google.list&#x27;</span><br><span class="line"></span><br><span class="line">sudo apt-get update </span><br><span class="line"></span><br><span class="line">sudo apt-get install google-chrome-stable</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WIN10 激活相关</title>
      <link href="/2021/01/18/WIN10%20%E6%BF%80%E6%B4%BB%E7%9B%B8%E5%85%B3/"/>
      <url>/2021/01/18/WIN10%20%E6%BF%80%E6%B4%BB%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="WIN10-激活相关"><a href="#WIN10-激活相关" class="headerlink" title="WIN10 激活相关"></a>WIN10 激活相关</h1><p><a href="https://github.com/TGSAN/CMWTAT_Digital_Edition/releases/tag/2.5.0.0">最优解</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">WIN10 pro</span></span><br><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">slmgr /skms kms.03k.org # 公司可换成网关ip</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure><!-- more --><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">office</span></span><br><span class="line">cd &quot;C:\Program Files\Microsoft Office\Office16&quot;</span><br><span class="line">cscript ospp.vbs /sethst:kms.03k.org</span><br><span class="line">cscript ospp.vbs /act</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除C盘临时文件</span></span><br><span class="line">del /s /q %temp%</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> win10激活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RedisTemplate常用方法总结</title>
      <link href="/2020/11/19/RedisTemplate%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2020/11/19/RedisTemplate%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="RedisTemplate常用方法总结"><a href="#RedisTemplate常用方法总结" class="headerlink" title="RedisTemplate常用方法总结"></a>RedisTemplate常用方法总结</h1><h2 id="Redis常用的数据类型："><a href="#Redis常用的数据类型：" class="headerlink" title="Redis常用的数据类型："></a>Redis常用的数据类型：</h2><ul><li>String</li><li>Hash</li><li>List</li><li>Set</li><li>zSet</li><li>Sorted set</li></ul><p><a href="https://blog.csdn.net/sinat_22797429/article/details/89196933">原文</a></p><span id="more"></span><h2 id="String类型"><a href="#String类型" class="headerlink" title="String类型"></a>String类型</h2><p>判断是否有key所对应的值，有则返回true，没有则返回false</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.hasKey(key)</span><br></pre></td></tr></table></figure><p>有则取出key值所对应的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().get(key)</span><br></pre></td></tr></table></figure><p>删除单个key值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.delete(key)</span><br></pre></td></tr></table></figure><p>批量删除key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.delete(keys) <span class="comment">//其中keys:Collection&lt;K&gt; keys</span></span><br></pre></td></tr></table></figure><p>将当前传入的key值序列化为byte[]类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.dump(key)</span><br></pre></td></tr></table></figure><p>设置过期时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">expire</span><span class="params">(String key, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.expire(key, timeout, unit);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> Boolean <span class="title function_">expireAt</span><span class="params">(String key, Date date)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.expireAt(key, date);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>查找匹配的key值，返回一个Set集合类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">getPatternKey</span><span class="params">(String pattern)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.keys(pattern);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改redis中key的名称</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">renameKey</span><span class="params">(String oldKey, String newKey)</span> &#123;</span><br><span class="line">    redisTemplate.rename(oldKey, newKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回传入key所存储的值的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> DataType <span class="title function_">getKeyType</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.type(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果旧值存在时，将旧值改为新值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">renameOldKeyIfAbsent</span><span class="params">(String oldKey, String newKey)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.renameIfAbsent(oldKey, newKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从redis中随机取出一个key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.randomKey()</span><br></pre></td></tr></table></figure><p>返回当前key所对应的剩余过期时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> Long <span class="title function_">getExpire</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.getExpire(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回剩余过期时间并且指定时间单位</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Long <span class="title function_">getExpire</span><span class="params">(String key, TimeUnit unit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.getExpire(key, unit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将key持久化保存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">persistKey</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.persist(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将当前数据库的key移动到指定redis中数据库当中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">moveToDbIndex</span><span class="params">(String key, <span class="type">int</span> dbIndex)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.move(key, dbIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置当前的key以及value值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().set(key, value)</span><br></pre></td></tr></table></figure><p>设置当前的key以及value值并且设置过期时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().set(key, value, timeout, unit)</span><br></pre></td></tr></table></figure><p>返回key中字符串的子字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getCharacterRange</span><span class="params">(String key, <span class="type">long</span> start, <span class="type">long</span> end)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForValue().get(key, start, end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将旧的key设置为value，并且返回旧的key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">setKeyAsValue</span><span class="params">(String key, String value)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForValue().getAndSet(key, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>批量获取值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;String&gt; <span class="title function_">multiGet</span><span class="params">(Collection&lt;String&gt; keys)</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> redisTemplate.opsForValue().multiGet(keys);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在原有的值基础上新增字符串到末尾</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().append(key, value)</span><br></pre></td></tr></table></figure><p>以增量的方式将double值存储在变量中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Double <span class="title function_">incrByDouble</span><span class="params">(String key, <span class="type">double</span> increment)</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, increment);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过increment(K key, long delta)方法以增量方式存储long值（正值则自增，负值则自减）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Long <span class="title function_">incrBy</span><span class="params">(String key, <span class="type">long</span> increment)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForValue().increment(key, increment);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果对应的map集合名称不存在，则添加否则不做修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">valueMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap1&quot;</span>,<span class="string">&quot;map1&quot;</span>);  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap2&quot;</span>,<span class="string">&quot;map2&quot;</span>);  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap3&quot;</span>,<span class="string">&quot;map3&quot;</span>);  </span><br><span class="line">redisTemplate.opsForValue().multiSetIfAbsent(valueMap); </span><br></pre></td></tr></table></figure><p>设置map集合到redis</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">valueMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap1&quot;</span>,<span class="string">&quot;map1&quot;</span>);  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap2&quot;</span>,<span class="string">&quot;map2&quot;</span>);  </span><br><span class="line">valueMap.put(<span class="string">&quot;valueMap3&quot;</span>,<span class="string">&quot;map3&quot;</span>);  </span><br><span class="line">redisTemplate.opsForValue().multiSet(valueMap);  </span><br></pre></td></tr></table></figure><p>获取字符串的长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().size(key)</span><br></pre></td></tr></table></figure><p>用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().set(key, value, offset)</span><br></pre></td></tr></table></figure><p>重新设置key对应的值，如果存在返回false，否则返回true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().setIfAbsent(key, value)</span><br></pre></td></tr></table></figure><p>将值 value 关联到 key,并将 key 的过期时间设为 timeout</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().set(key, value, timeout, unit)</span><br></pre></td></tr></table></figure><p>将二进制第offset位值变为value</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().setBit(key, offset, value)</span><br></pre></td></tr></table></figure><p>对key所储存的字符串值，获取指定偏移量上的位(bit)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForValue().getBit(key, offset)</span><br></pre></td></tr></table></figure><h2 id="Hash类型"><a href="#Hash类型" class="headerlink" title="Hash类型"></a>Hash类型</h2><p>Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。<br>Redis 中每个 hash 可以存储 2^32 - 1 键值对（40多亿）。</p><p>获取变量中的指定map键是否有值,如果存在该map键则获取值，没有则返回null。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForHash().get(key, field)</span><br></pre></td></tr></table></figure><p>获取变量中的键值对</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;Object, Object&gt; <span class="title function_">hGetAll</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增hashMap值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForHash().put(key, hashKey, value)</span><br></pre></td></tr></table></figure><p>以map集合的形式添加键值对</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hPutAll</span><span class="params">(String key, Map&lt;String, String&gt; maps)</span> &#123;</span><br><span class="line">    redisTemplate.opsForHash().putAll(key, maps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仅当hashKey不存在时才设置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">hashPutIfAbsent</span><span class="params">(String key, String hashKey, String value)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().putIfAbsent(key, hashKey, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除一个或者多个hash表字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Long <span class="title function_">hashDelete</span><span class="params">(String key, Object... fields)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().delete(key, fields);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看hash表中指定字段是否存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hashExists</span><span class="params">(String key, String field)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().hasKey(key, field);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给哈希表key中的指定字段的整数值加上增量increment</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Long <span class="title function_">hashIncrBy</span><span class="params">(String key, Object field, <span class="type">long</span> increment)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, field, increment);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> Double <span class="title function_">hIncrByDouble</span><span class="params">(String key, Object field, <span class="type">double</span> delta)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().increment(key, field, delta);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取所有hash表中字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForHash().keys(key)</span><br></pre></td></tr></table></figure><p>获取hash表中字段的数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForHash().size(key)</span><br></pre></td></tr></table></figure><p>获取hash表中存在的所有的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Object&gt; <span class="title function_">hValues</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().values(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配获取键值对，ScanOptions.NONE为获取全部键对</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Cursor&lt;Entry&lt;Object, Object&gt;&gt; <span class="title function_">hashScan</span><span class="params">(String key, ScanOptions options)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.opsForHash().scan(key, options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List类型"><a href="#List类型" class="headerlink" title="List类型"></a>List类型</h2><p>通过索引获取列表中的元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().index(key, index)</span><br></pre></td></tr></table></figure><p>获取列表指定范围内的元素(start开始位置, 0是开始位置，end 结束位置, -1返回所有)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().range(key, start, end)</span><br></pre></td></tr></table></figure><p>存储在list的头部，即添加一个就把它放在最前面的索引处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().leftPush(key, value)</span><br></pre></td></tr></table></figure><p>把多个值存入List中(value可以是多个值，也可以是一个Collection value)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().leftPushAll(key, value)</span><br></pre></td></tr></table></figure><p>List存在的时候再加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().leftPushIfPresent(key, value)</span><br></pre></td></tr></table></figure><p>如果pivot处值存在则在pivot前面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().leftPush(key, pivot, value)</span><br></pre></td></tr></table></figure><p>按照先进先出的顺序来添加(value可以是多个值，或者是Collection var2)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().rightPush(key, value)</span><br><span class="line">redisTemplate.opsForList().rightPushAll(key, value)</span><br></pre></td></tr></table></figure><p>在pivot元素的右边添加值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().rightPush(key, pivot, value)</span><br></pre></td></tr></table></figure><p>设置指定索引处元素的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().set(key, index, value)</span><br></pre></td></tr></table></figure><p>移除并获取列表中第一个元素(如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().leftPop(key)</span><br><span class="line">redisTemplate.opsForList().leftPop(key, timeout, unit)</span><br></pre></td></tr></table></figure><p>移除并获取列表最后一个元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().rightPop(key)</span><br><span class="line">redisTemplate.opsForList().rightPop(key, timeout, unit)</span><br></pre></td></tr></table></figure><p>从一个队列的右边弹出一个元素并将这个元素放入另一个指定队列的最左边</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().rightPopAndLeftPush(sourceKey, destinationKey)</span><br><span class="line">redisTemplate.opsForList().rightPopAndLeftPush(sourceKey, destinationKey, timeout, unit)</span><br></pre></td></tr></table></figure><p>删除集合中值等于value的元素(index&#x3D;0, 删除所有值等于value的元素; index&gt;0, 从头部开始删除第一个值等于value的元素; index&lt;0, 从尾部开始删除第一个值等于value的元素)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().remove(key, index, value)</span><br></pre></td></tr></table></figure><p>将List列表进行剪裁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().trim(key, start, end)</span><br></pre></td></tr></table></figure><p>获取当前key的List列表长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForList().size(key)</span><br></pre></td></tr></table></figure><h2 id="Set类型"><a href="#Set类型" class="headerlink" title="Set类型"></a>Set类型</h2><p>添加元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().add(key, values)</span><br></pre></td></tr></table></figure><p>移除元素(单个值、多个值)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().remove(key, values)</span><br></pre></td></tr></table></figure><p>删除并且返回一个随机的元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().pop(key)</span><br></pre></td></tr></table></figure><p>获取集合的大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().size(key)</span><br></pre></td></tr></table></figure><p>判断集合是否包含value</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().isMember(key, value)</span><br></pre></td></tr></table></figure><p>获取两个集合的交集(key对应的无序集合与otherKey对应的无序集合求交集)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().intersect(key, otherKey)</span><br></pre></td></tr></table></figure><p>获取多个集合的交集(Collection var2)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().intersect(key, otherKeys)</span><br></pre></td></tr></table></figure><p>key集合与otherKey集合的交集存储到destKey集合中(其中otherKey可以为单个值或者集合)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().intersectAndStore(key, otherKey, destKey)</span><br></pre></td></tr></table></figure><p>key集合与多个集合的交集存储到destKey无序集合中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().intersectAndStore(key, otherKeys, destKey)</span><br></pre></td></tr></table></figure><p>获取两个或者多个集合的并集(otherKeys可以为单个值或者是集合)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().union(key, otherKeys)</span><br></pre></td></tr></table></figure><p>key集合与otherKey集合的并集存储到destKey中(otherKeys可以为单个值或者是集合)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().unionAndStore(key, otherKey, destKey)</span><br></pre></td></tr></table></figure><p>获取两个或者多个集合的差集(otherKeys可以为单个值或者是集合)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().difference(key, otherKeys)</span><br></pre></td></tr></table></figure><p>差集存储到destKey中(otherKeys可以为单个值或者集合)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().differenceAndStore(key, otherKey, destKey)</span><br></pre></td></tr></table></figure><p>随机获取集合中的一个元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().randomMember(key)</span><br></pre></td></tr></table></figure><p>获取集合中的所有元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().members(key)</span><br></pre></td></tr></table></figure><p>随机获取集合中count个元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().randomMembers(key, count)</span><br></pre></td></tr></table></figure><p>获取多个key无序集合中的元素（去重），count表示个数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().distinctRandomMembers(key, count)</span><br></pre></td></tr></table></figure><p>遍历set类似于Interator(ScanOptions.NONE为显示所有的)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForSet().scan(key, options)</span><br></pre></td></tr></table></figure><h2 id="zSet类型"><a href="#zSet类型" class="headerlink" title="zSet类型"></a>zSet类型</h2><p>ZSetOperations提供了一系列方法对有序集合进行操作<br>添加元素(有序集合是按照元素的score值由小到大进行排列)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().add(key, value, score)</span><br></pre></td></tr></table></figure><p>删除对应的value,value可以为多个值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().remove(key, values)</span><br></pre></td></tr></table></figure><p>增加元素的score值，并返回增加后的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().incrementScore(key, value, delta)</span><br></pre></td></tr></table></figure><p>返回元素在集合的排名,有序集合是按照元素的score值由小到大排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().rank(key, value)</span><br></pre></td></tr></table></figure><p>返回元素在集合的排名,按元素的score值由大到小排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().reverseRank(key, value)</span><br></pre></td></tr></table></figure><p>获取集合中给定区间的元素(start 开始位置，end 结束位置, -1查询所有)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().reverseRangeWithScores(key, start,end)</span><br></pre></td></tr></table></figure><p>按照Score值查询集合中的元素，结果从小到大排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().reverseRangeByScore(key, min, max)</span><br><span class="line">redisTemplate.opsForZSet().reverseRangeByScoreWithScores(key, min, max)</span><br><span class="line"><span class="comment">//返回值为:Set&lt;ZSetOperations.TypedTuple&lt;V&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>从高到低的排序集中获取分数在最小和最大值之间的元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().reverseRangeByScore(key, min, max, start, end)</span><br></pre></td></tr></table></figure><p>根据score值获取集合元素数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().count(key, min, max)</span><br></pre></td></tr></table></figure><p>获取集合的大小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().size(key)</span><br><span class="line">redisTemplate.opsForZSet().zCard(key)</span><br></pre></td></tr></table></figure><p>获取集合中key、value元素对应的score值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().score(key, value)</span><br></pre></td></tr></table></figure><p>移除指定索引位置处的成员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().removeRange(key, start, end)</span><br></pre></td></tr></table></figure><p>移除指定score范围的集合成员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().removeRangeByScore(key, min, max)</span><br></pre></td></tr></table></figure><p>获取key和otherKey的并集并存储在destKey中（其中otherKeys可以为单个字符串或者字符串集合）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().unionAndStore(key, otherKey, destKey)</span><br></pre></td></tr></table></figure><p>获取key和otherKey的交集并存储在destKey中（其中otherKeys可以为单个字符串或者字符串集合）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redisTemplate.opsForZSet().intersectAndStore(key, otherKey, destKey)</span><br></pre></td></tr></table></figure><p>遍历集合（和iterator一模一样）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Cursor&lt;TypedTuple&lt;Object&gt;&gt; scan = opsForZSet.scan(<span class="string">&quot;test3&quot;</span>, ScanOptions.NONE);</span><br><span class="line">        <span class="keyword">while</span> (scan.hasNext())&#123;</span><br><span class="line">            ZSetOperations.TypedTuple&lt;Object&gt; item = scan.next();</span><br><span class="line">            System.out.println(item.getValue() + <span class="string">&quot;:&quot;</span> + item.getScore());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 堆栈详解</title>
      <link href="/2020/10/07/Java%20%E5%A0%86%E6%A0%88%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/10/07/Java%20%E5%A0%86%E6%A0%88%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-堆栈详解"><a href="#Java-堆栈详解" class="headerlink" title="Java 堆栈详解"></a>Java 堆栈详解</h1><span id="more"></span><ol><li>寄存器：最快的存储区, 由编译器根据需求进行分配,我们在程序中无法控制.</li><li>栈：存放基本类型的变量数据和对象的引用，但对象本身不存放在栈中，而是存放在堆（new 出来的对象）或者常量池中（字符串常量对象存放在常量池中。）</li><li>堆：存放所有new出来的对象。</li><li>静态域：存放静态成员（static定义的）</li><li>常量池：存放字符串常量和基本类型常量（public static final）。</li><li>非RAM存储：硬盘等永久存储空间</li></ol><p>这里我们主要关心栈，堆和常量池，对于栈和常量池中的对象可以共享，对于堆中的对象不可以共享。栈中的数据大小和生命周期是可以确定的，当没有引用指向数据时，这个数据就会消失。堆中的对象的由垃圾回收器负责回收，因此大小和生命周期不需要确定，具有很大的灵活性。<br>对于字符串：其对象的引用都是存储在栈中的，如果是编译期已经创建好(直接用双引号定义的)的就存储在常量池中，如果是运行期（new出来的）才能确定的就存储在堆中。对于equals相等的字符串，在常量池中永远只有一份，在堆中有多份。<br>如以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码</span></span><br><span class="line"><span class="number">1.</span> <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;china&quot;</span>; </span><br><span class="line"><span class="number">2.</span> <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;china&quot;</span>; </span><br><span class="line"><span class="number">3.</span> <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="string">&quot;china&quot;</span>; </span><br><span class="line"><span class="number">4.</span> <span class="type">String</span> <span class="variable">ss1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;china&quot;</span>); </span><br><span class="line"><span class="number">5.</span> <span class="type">String</span> <span class="variable">ss2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;china&quot;</span>); </span><br><span class="line"><span class="number">6.</span> <span class="type">String</span> <span class="variable">ss3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;china&quot;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20201007160913.png"></p><p>这里解释一下黄色这3个箭头，对于通过new产生一个字符串（假设为”china”）时，会先去常量池中查找是否已经有了”china”对象，如果没有则在常量池中创建一个此字符串对象，然后堆中再创建一个常量池中此”china”对象的拷贝对象。这也就是有道面试题：String s &#x3D; new String(“xyz”);产生几个对象？一个或两个，如果常量池中原来没有”xyz”,就是两个。</p><p>对于基础类型的变量和常量：变量和引用存储在栈中，常量存储在常量池中。<br>如以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码</span></span><br><span class="line"><span class="number">1.</span> <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">9</span>; </span><br><span class="line"><span class="number">2.</span> <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">9</span>; </span><br><span class="line"><span class="number">3.</span> <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">9</span>;  </span><br><span class="line"><span class="number">4.</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">INT1</span> <span class="operator">=</span> <span class="number">9</span>; </span><br><span class="line"><span class="number">5.</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">INT2</span> <span class="operator">=</span> <span class="number">9</span>; </span><br><span class="line"><span class="number">6.</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">INT3</span> <span class="operator">=</span> <span class="number">9</span>; </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/3968b51b-0a56-3ad6-a54e-b2b19e671526.png"><br>对于成员变量和局部变量：成员变量就是方法外部，类的内部定义的变量；局部变量就是方法或语句块内部定义的变量。局部变量必须初始化。<br>形式参数是局部变量，局部变量的数据存在于栈内存中。栈内存中的局部变量随着方法的消失而消失。<br>成员变量存储在堆中的对象里面，由垃圾回收器负责回收。<br>如以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// java代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BirthDate</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> day;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> month;  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> year;      </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BirthDate</span><span class="params">(<span class="type">int</span> d, <span class="type">int</span> m, <span class="type">int</span> y)</span> &#123;  </span><br><span class="line">        day = d;   </span><br><span class="line">        month = m;   </span><br><span class="line">        year = y;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">// 省略get,set方法………  </span></span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;  </span><br><span class="line"><span class="type">int</span> <span class="variable">date</span> <span class="operator">=</span> <span class="number">9</span>;  </span><br><span class="line">        <span class="type">Test</span> <span class="variable">test</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();        </span><br><span class="line">        test.change(date);   </span><br><span class="line">        BirthDate d1= <span class="keyword">new</span> <span class="title class_">BirthDate</span>(<span class="number">7</span>,<span class="number">7</span>,<span class="number">1970</span>);         </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">change1</span><span class="params">(<span class="type">int</span> i)</span>&#123;  </span><br><span class="line">        i = <span class="number">1234</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/5d8dee1f-ceb9-3705-8924-161dd7599f73.png"><br>对于以上这段代码，date为局部变量，i,d,m,y都是形参为局部变量，day，month，year为成员变量。下面分析一下代码执行时候的变化：</p><ol><li>main方法开始执行：int date &#x3D; 9;<br>date局部变量，基础类型，引用和值都存在栈中。</li><li>Test test &#x3D; new Test();<br>test为对象引用，存在栈中，对象(new Test())存在堆中</li><li>test.change(date);<br>i为局部变量，引用和值存在栈中。当方法change执行完成后，i就会从栈中消失。</li><li>BirthDate d1&#x3D; new BirthDate(7,7,1970);<br>d1为对象引用，存在栈中，对象(new BirthDate())存在堆中，其中d，m，y为局部变量存储在栈中，且它们的类型为基础类型，因此它们的数据也存储在栈中。day,month,year为成员变量，它们存储在堆中(new BirthDate()里面)。当BirthDate构造方法执行完之后，d,m,y将从栈中消失。</li><li>main方法执行完之后，date变量，test，d1引用将从栈中消失，new Test(),new BirthDate()将等待垃圾回收。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 堆栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 堆栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2020/10/07/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2020/10/07/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><span id="more"></span><h2 id="一、进程"><a href="#一、进程" class="headerlink" title="一、进程"></a>一、进程</h2><p>​我们都知道计算机的核心是CPU，它承担了所有的计算任务，而操作系统是计算机的管理者，它负责任务的调度，资源的分配和管理，统领整个计算机硬件；应用程序是具有某种功能的程序，程序是运行于操作系统之上的。</p><p>　　进程是一个具有一定独立功能的程序在一个数据集上的一次动态执行的过程，是操作系统进行资源分配和调度的一个独立单位，是应用程序运行的载体。进程是一种抽象的概念，从来没有统一的标准定义。进程一般由程序，数据集合和进程控制块三部分组成。程序用于描述进程要完成的功能，是控制进程执行的指令集；数据集合是程序在执行时所需要的数据和工作区；程序控制块包含进程的描述信息和控制信息是进程存在的唯一标志</p><p>进程具有的特征：</p><p>动态性：进程是程序的一次执行过程，是临时的，有生命期的，是动态产生，动态消亡的；</p><p>并发性：任何进程都可以同其他进行一起并发执行；</p><p>独立性：进程是系统进行资源分配和调度的一个独立单位；</p><p>结构性：进程由程序，数据和进程控制块三部分组成</p><h2 id="二、线程"><a href="#二、线程" class="headerlink" title="二、线程"></a>二、线程</h2><p>​线程，又称轻量级进程（Light Weight Process）。</p><p>​进程中的一条执行路径，也是CPU的基本调度单位。一个进程由一个或多个线程组成，彼此间完成不同的工作，同时执行，称为多线程。</p><h2 id="三、进程和线程的区别"><a href="#三、进程和线程的区别" class="headerlink" title="三、进程和线程的区别"></a>三、进程和线程的区别</h2><ol><li>进程是操作系统资源分配的基本单位，而线程是CPU的基本调度单位</li><li>一个程序运行后至少有一个进程。</li><li>一个进程可以包含多个线程，但是至少需要有一个线程，否则这个进程是没有意义。</li><li>进程间不能共享数据段地址，但同进程的线程之间可以</li></ol><h2 id="四、线程的组成"><a href="#四、线程的组成" class="headerlink" title="四、线程的组成"></a>四、线程的组成</h2><ul><li>任何一个线程都具有基本的组成本分：<ul><li>CPU时间片：操作系统会为每个线程分配执行时间。</li><li>运行数据：<ul><li>堆空间：存储线程需要使用的对象，多个线程可以共享堆中的对象。</li><li>栈空间：存储线程需要使用的局部变量，每个线程都拥有独立的栈。</li></ul></li><li>线程的逻辑代码</li></ul></li></ul><h2 id="五、线程的特点"><a href="#五、线程的特点" class="headerlink" title="五、线程的特点"></a>五、线程的特点</h2><ol><li>线程抢占式执行<ul><li>效率高</li><li>可防止单一线程长时间独占CPU</li></ul></li><li>在单核CPU中，宏观上同时执行，微观上顺序执行。</li></ol><h2 id="六、创建线程"><a href="#六、创建线程" class="headerlink" title="六、创建线程"></a>六、创建线程</h2><ul><li><p>创建线程的方式</p><ol><li><p>继承Thread类，重写run方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestCreateThread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyThread</span> <span class="variable">myThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>();</span><br><span class="line">        myThread.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;MyThread: &quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取线程ID和线程名称<ol><li>在Thread的子类中调用this.getId()或this.getName()</li><li>使用Thread.currentThread().getId()和Thread.currentThread().getName()</li></ol></li><li>修改线程名称<ol><li>调用线程对象的setName()方法</li><li>使用线程子类的构造方法赋值</li></ol></li></ul></li><li><p>实现Runnable接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">&quot;*******&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestRannable</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">MyRunnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRunnable</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, <span class="string">&quot;我的线程1&quot;</span>);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类实现</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 四个窗口共卖 100</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (ticket &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;****** &quot;</span> + ticket);</span><br><span class="line">                        ticket--;</span><br><span class="line">                        <span class="comment">//想要看到线程效果  最好让执行线程停一会 让别的线程执行</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, <span class="string">&quot;窗口1 &quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, <span class="string">&quot;窗口2 &quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, <span class="string">&quot;窗口3 &quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable, <span class="string">&quot;窗口4 &quot;</span>);</span><br><span class="line"></span><br><span class="line">        thread1.start();</span><br><span class="line">        thread.start();</span><br><span class="line">        thread2.start();</span><br><span class="line">        thread3.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存取钱</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> money;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMoney</span><span class="params">(<span class="type">double</span> money)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BankCard</span> <span class="variable">card</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BankCard</span>();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                    card.setMoney(card.getMoney() + <span class="number">1000</span>);</span><br><span class="line">                    System.err.println(Thread.currentThread().getName() + <span class="string">&quot;add 1000&quot;</span> + <span class="string">&quot;余额&quot;</span> + card.getMoney());</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;射手&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (card.getMoney() &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">                        card.setMoney(card.getMoney() - <span class="number">1000</span>);</span><br><span class="line">                        System.err.println(Thread.currentThread().getName() + <span class="string">&quot;sub 1000&quot;</span> + <span class="string">&quot;余额&quot;</span> + card.getMoney());</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        System.err.println(<span class="string">&quot;余额不足&quot;</span>);</span><br><span class="line">                        i--;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">50</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="string">&quot;钉钉&quot;</span>);</span><br><span class="line">        thread.start();</span><br><span class="line">        thread1.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>实现Callable接口</p></li></ol></li></ul><h2 id="七、线程的状态（基本）"><a href="#七、线程的状态（基本）" class="headerlink" title="七、线程的状态（基本）"></a>七、线程的状态（基本）</h2><ul><li>初始状态（New）：线程对象被创建，即为初始状态。只在堆中开辟内存，与常规对象无异。</li><li>就绪状态（Runnable）：调用start()之后，进入就绪状态。等待OS选中，并分配时间片。</li><li>运行状态（Running）：获得时间片之后，进入运行状态，如果时间片到期，则回到就绪状态。</li><li>阻塞状态（Blocked）：处于运行状态中的线程由于某种原因，暂时放弃对CPU的使用权，停止执行，此时进入阻塞状态，直到其进入到就绪状态，才 有机会再次被CPU调用以进入到运行状态。根据阻塞产生的原因不同，阻塞状态又可以分为三种：<ol><li>等待阻塞：运行状态中的线程执行wait()方法，使本线程进入到等待阻塞状态；</li><li>同步阻塞：线程在获取synchronized同步锁失败(因为锁被其它线程所占用)，它会进入同步阻塞状态；</li><li>其他阻塞：通过调用线程的sleep()或join()或发出了I&#x2F;O请求时，线程会进入到阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I&#x2F;O处理完毕时，线程重新转入就绪状态。</li></ol></li><li>死亡状态（Dead）：线程执行完了或者因异常退出了run()方法，该线程结束生命周期，并释放持有的时间片。</li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20201008162133648.png" alt="image-20201008162133648"></p><h2 id="八、常见方法"><a href="#八、常见方法" class="headerlink" title="八、常见方法"></a>八、常见方法</h2><ul><li><p>休眠：</p><ul><li>sleep(long millis)</li><li>当前线程主动休眠millis毫秒。</li></ul></li><li><p>放弃：</p><ul><li>yield()</li><li>当前线程主动放弃时间片，回到就绪状态，竞争下一次时间片。</li></ul></li><li><p>加入：</p><ul><li>join()</li><li>允许其他线程加入到当前线程中。</li></ul></li><li><p>优先级（不保证优先级高的线程一定最先执行）</p><ul><li><p>线程对象.setPriority(),</p></li><li><p>线程优先级为1-10，默认为5，优先级越高，表示获取CPU机会越多</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">runnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">&quot;*****&quot;</span> + i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable,<span class="string">&quot;p1&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable,<span class="string">&quot;p2&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable,<span class="string">&quot;p3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置优先级 1-10，默认为5，优先级越高，表示获取CPU机会越多</span></span><br><span class="line">        t1.setPriority(<span class="number">1</span>);</span><br><span class="line">        t2.setPriority(<span class="number">5</span>);</span><br><span class="line">        t3.setPriority(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>守护线程</p><ul><li>线程对象.setDaemon(true);设置守护线程</li><li>线程有两类：用户线程（前台线程）、守护线程（后台线程）</li><li>如果程序中所有前台线程都执行完毕了，后台线程回自动结束。</li><li>垃圾回收器线程属于守护线程</li></ul></li></ul><h2 id="九、线程安全问题"><a href="#九、线程安全问题" class="headerlink" title="九、线程安全问题"></a>九、线程安全问题</h2><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/image-20201008190144639.png" alt="image-20201008190144639"></p><ul><li>需求：A线程将“hello”存入数组；B线程将“world“存入数组。</li><li>多线程安全问题：<ul><li>当多线程并发访问临界资源时，如果破坏原子操作，可能会造成数据不一致。</li><li>临界资源：共享资源（同一对象），一次仅允许一个线程使用，才能保证其正确性。</li><li>原子操作：不可分割的多步操作，被视作一个整体，其顺序和步骤不可打乱或缺省。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis 常见问题</title>
      <link href="/2020/09/12/Redis%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2020/09/12/Redis%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis-常见问题"><a href="#Redis-常见问题" class="headerlink" title="Redis 常见问题"></a>Redis 常见问题</h1><span id="more"></span><h2 id="一、如何解决Redis缓存穿透问题？"><a href="#一、如何解决Redis缓存穿透问题？" class="headerlink" title="一、如何解决Redis缓存穿透问题？"></a>一、如何解决Redis缓存穿透问题？</h2><p>Redis缓存穿透指的是攻击者故意大量请求一些Redis缓存中不存在的key的数据，导致请求达到数据库上，导致数据库压力过大。</p><p><strong>解决方案如下：</strong></p><ol><li>做好参数校验，无效的请求直接返回，只能避免一部分情况，攻击者总是可以找到一些没有覆盖的情况。</li><li>对缓存中找不到的key，需要去数据库查找的key，缓存到Redis中，但是可能导致Redis中缓存大量无效的key，可以设置一个很短的过期时间，例如一分钟。</li><li>也可以使用布隆过滤器，将对所有可能的存在数据通过去hash值的方式存入到一个足够大的bitmap中去，处理请求时，通过在botmap中查找，可以将不存在的数据拦截掉。</li></ol><h2 id="二、如何解决Redis缓存击穿问题？"><a href="#二、如何解决Redis缓存击穿问题？" class="headerlink" title="二、如何解决Redis缓存击穿问题？"></a>二、如何解决Redis缓存击穿问题？</h2><p>缓存击穿主要指的是某个key失效，导致大量请求全部转向数据库，导致数据库要力过大。</p><p><strong>解决方案：</strong></p><ol><li>对热点key设置永不过期。</li><li>加互斥锁，缓存中没有热点key对应的数据时，等待100ms，由获得锁的线程去读取数据库然后设置缓存。</li></ol><h2 id="三、如何解决Redis缓存雪崩问题"><a href="#三、如何解决Redis缓存雪崩问题" class="headerlink" title="三、如何解决Redis缓存雪崩问题?"></a>三、如何解决Redis缓存雪崩问题?</h2><p>缓存雪崩只要指的是短时间内大量key失效，导致所有请求全部转向数据库，导致数据库压力过大。</p><p><strong>解决方案：</strong></p><ol><li>在给缓存设置失效时间时加一个随机值，避免集体失效。</li><li>双缓存机制，缓存A的失效时间为20分钟，缓存B没有失效时间，从缓存A读取数据，缓存A没有时，去缓存B中读取数据，并且启动一个异步线程来更新缓存A</li></ol>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongo在win10 docker上的相关安装</title>
      <link href="/2020/09/02/docker%E5%AE%89%E8%A3%85mongo/"/>
      <url>/2020/09/02/docker%E5%AE%89%E8%A3%85mongo/</url>
      
        <content type="html"><![CDATA[<h1 id="mongo在win10-docker上的相关安装"><a href="#mongo在win10-docker上的相关安装" class="headerlink" title="mongo在win10 docker上的相关安装"></a>mongo在win10 docker上的相关安装</h1><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mongo</span><br><span class="line">docker volume create --name mongodb</span><br><span class="line">docker run -it -v mongodb:/data/db --name mongo -p 27017:27017 -d mongo</span><br></pre></td></tr></table></figure><p><strong>简单创建</strong></p><p><a href="http://www.moguf.com/post/windockerrunmongo">参考链接</a></p><p><strong>其他相关命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除数据卷</span></span><br><span class="line">docker volume rm mongodb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看数据卷</span></span><br><span class="line">docker volume ls</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> mongo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL8在win10 docker上的相关安装</title>
      <link href="/2020/08/18/MySQL8%E5%9C%A8win10%20docker%E4%B8%8A%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85/"/>
      <url>/2020/08/18/MySQL8%E5%9C%A8win10%20docker%E4%B8%8A%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL8在win10-docker上的相关安装"><a href="#MySQL8在win10-docker上的相关安装" class="headerlink" title="MySQL8在win10 docker上的相关安装"></a>MySQL8在win10 docker上的相关安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载本地磁盘路径需手动创建(路径自己随便) 随系统自动启动 (建议使用这条)</span></span><br><span class="line">docker run -it -v E:/Docker/docker/mysql/data:/var/lib/mysql -v E:/Docker/docker/mysql/config/my.cnf:/etc/mysql/my.cnf --restart=always --name mysql8 -e MYSQL_ROOT_PASSWORD=system123456 -p 3306:3306 -d mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不随系统自动启动</span></span><br><span class="line">docker run -it --rm  -v E:/Docker/docker/mysql/data:/var/lib/mysql -v E:/Docker/docker/mysql/config/my.cnf:/etc/mysql/my.cnf --name mysql8 -e MYSQL_ROOT_PASSWORD=system123456 -p 3306:3306 -d mysql</span><br></pre></td></tr></table></figure><span id="more"></span><p><a href="https://zelen.lanzous.com/i9dxgfqvq6j">挂载文件</a>  <a href="https://my.oschina.net/summergao/blog/3066063">相关参考</a></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200818094507.png"></p><p><strong>将挂载文件所在目录开放给docker</strong></p><p><strong>进入容器</strong></p><p><code>docker exec -it mysql8 bash</code></p><p><strong>修改MySQL8为简易密码</strong></p><p><code> ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;;</code></p><p><code> ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39;;</code></p><p><a href="https://www.cnblogs.com/c-x-a/p/12632122.html">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> MySQL8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis在win10 docker上的相关安装</title>
      <link href="/2020/08/18/Redis%20%E5%9C%A8win10%20docker%E4%B8%8A%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85/"/>
      <url>/2020/08/18/Redis%20%E5%9C%A8win10%20docker%E4%B8%8A%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis在win10-docker上的相关安装"><a href="#Redis在win10-docker上的相关安装" class="headerlink" title="Redis在win10 docker上的相关安装"></a>Redis在win10 docker上的相关安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载本地磁盘路径需手动创建 随系统自动启动</span></span><br><span class="line">docker run -it -v E:/Docker/docker/redis/data:/var/lib/redis -v E:/Docker/docker/redis/config/redis.conf:/etc/redis/redis.conf --restart=always --name redis -p 6379:6379 -d redis redis-server /etc/redis/redis.conf --appendonly yes</span><br></pre></td></tr></table></figure><p>  <a href="https://www.cnblogs.com/chenlizhi/p/13654922.html">相关参考</a></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200818094507.png"></p><p><a href="https://blog.csdn.net/qq_37334135/article/details/77717248">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习</title>
      <link href="/2020/07/08/Docker%E5%AD%A6%E4%B9%A0/"/>
      <url>/2020/07/08/Docker%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker学习"><a href="#Docker学习" class="headerlink" title="Docker学习"></a>Docker学习</h1><span id="more"></span><h2 id="Docker简述"><a href="#Docker简述" class="headerlink" title="Docker简述"></a>Docker简述</h2><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200505140751.png"></p><ol><li>Docker能干什么<ol><li>简化配置</li><li>整合服务器</li><li>代码流水线管理</li><li>调试能力</li><li>提高开发效率</li><li>多租户</li><li>隔离应用</li><li>快速部署</li></ol></li></ol><h2 id="一、容器技术和Docker简介"><a href="#一、容器技术和Docker简介" class="headerlink" title="一、容器技术和Docker简介"></a>一、容器技术和Docker简介</h2><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200505142429.png"></p><ul><li>虚拟化的优点<ul><li>资源池：一个物理机的资源分配到了不同的虚拟机里</li><li>容易扩展：加物理机器或者加虚拟机</li><li>容易云化：亚马逊AWS，阿里云等</li></ul></li><li>虚拟化的局限性<ul><li>每一个虚拟机都是一个完整的操作性同，要给其分配资源，当虚拟机数量增多时，操作系统本身消耗的资源势必增多</li></ul></li></ul><h2 id="二、Docker环境的各种搭建方法"><a href="#二、Docker环境的各种搭建方法" class="headerlink" title="二、Docker环境的各种搭建方法"></a>二、Docker环境的各种搭建方法</h2><h2 id="三、Docker的镜像和容器"><a href="#三、Docker的镜像和容器" class="headerlink" title="三、Docker的镜像和容器"></a>三、Docker的镜像和容器</h2><h2 id="四、Docker的网络"><a href="#四、Docker的网络" class="headerlink" title="四、Docker的网络"></a>四、Docker的网络</h2><h2 id="五、Docker的持久化存储和数据共享"><a href="#五、Docker的持久化存储和数据共享" class="headerlink" title="五、Docker的持久化存储和数据共享"></a>五、Docker的持久化存储和数据共享</h2><h2 id="六、Docker-Compose多容器部署"><a href="#六、Docker-Compose多容器部署" class="headerlink" title="六、Docker Compose多容器部署"></a>六、Docker Compose多容器部署</h2><h2 id="七、容器编排Docker-Swarm"><a href="#七、容器编排Docker-Swarm" class="headerlink" title="七、容器编排Docker Swarm"></a>七、容器编排Docker Swarm</h2><h2 id="八、DevOps初体验–Docker-Cloud-和Docker企业版"><a href="#八、DevOps初体验–Docker-Cloud-和Docker企业版" class="headerlink" title="八、DevOps初体验–Docker Cloud 和Docker企业版"></a>八、DevOps初体验–Docker Cloud 和Docker企业版</h2><h2 id="九、容器编排Kubernetes"><a href="#九、容器编排Kubernetes" class="headerlink" title="九、容器编排Kubernetes"></a>九、容器编排Kubernetes</h2><h2 id="十、容器的运维和监控"><a href="#十、容器的运维和监控" class="headerlink" title="十、容器的运维和监控"></a>十、容器的运维和监控</h2><h2 id="十一、Docker-DevOps实战–过程和工具"><a href="#十一、Docker-DevOps实战–过程和工具" class="headerlink" title="十一、Docker+DevOps实战–过程和工具"></a>十一、Docker+DevOps实战–过程和工具</h2><h2 id="十二、总结"><a href="#十二、总结" class="headerlink" title="十二、总结"></a>十二、总结</h2>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO相关</title>
      <link href="/2020/07/08/HEXO/"/>
      <url>/2020/07/08/HEXO/</url>
      
        <content type="html"><![CDATA[<h1 id="HEXO相关"><a href="#HEXO相关" class="headerlink" title="HEXO相关"></a>HEXO相关</h1><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.jianshu.com/p/bad24beeb51e">https://www.jianshu.com/p/bad24beeb51e</a> </p><p> npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> cnpm install</p><p>使用上述命令后可使用cnpm 替换npm </p><p>cnpm install -g hexo-cli</p><p>hexo -v</p><p>hexo init</p><p>cnpm install</p><p>hexo clean</p><p>git clone <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> themes&#x2F;next</p><p>zh-CN</p><p>Asia&#x2F;Shanghai</p><p>cnpm install hexo-deployer-git –save</p><p>hexo g -d</p><h2 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h2><p><code>npm install hexo-generator-search --save</code></p><p><code>npm install hexo-generator-searchdb --save</code></p><p>GitHub文档下显示只需要第二条 </p><p>在站点配置文件 _config.yml 中添加如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Search </span><br><span class="line">search:</span><br><span class="line">  path: ./public/search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>path：索引文件的路径，相对于站点根目录<br>field：搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面<br>limit：限制搜索的条目数</p><p>在主题配置文件 _config.yml 中找到如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><p>确保 enable 设成 true</p><p>[参考](<a href="https://www.imczw.com/post/tech/hexo5-next8-updated.html">Hexo-5.x 与 NexT-8.x 跨版本升级 | 第 25 小时随想 (imczw.com)</a>)</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB</title>
      <link href="/2020/07/08/MongoDB/"/>
      <url>/2020/07/08/MongoDB/</url>
      
        <content type="html"><![CDATA[<h1 id="MongoDB（有点乱-之后整理）"><a href="#MongoDB（有点乱-之后整理）" class="headerlink" title="MongoDB（有点乱 之后整理）"></a>MongoDB（有点乱 之后整理）</h1><span id="more"></span><h2 id="一、数据库（Database）"><a href="#一、数据库（Database）" class="headerlink" title="一、数据库（Database）"></a>一、数据库（Database）</h2><ul><li>数据库是按照数据结构来组织、存储和管理数据的仓库。我们的程序都是在内存中运行的，一旦程序运行结束或者计算机断电，程序运行中的数据都会丢失。所以我们就需要将一些程序运行的数据持久化到硬盘之中，以确保数据的安全性。而数据库就是数据持久化的最佳选择。说白了，数据库就是存储数据的仓库</li><li>数据库分类：<ul><li>关系型数据库（RDBMS）<ul><li>MySQL、Oracle、DB2、SQLServer</li><li>关系型数据库中全都是表</li></ul></li><li>非关系型数据库（NoSQL Not Only SQL）<ul><li>MongoDB、Redis</li><li>键值对数据库</li><li>文档数据库MongoDB</li></ul></li></ul></li></ul><h2 id="二、MongoDB相关概念"><a href="#二、MongoDB相关概念" class="headerlink" title="二、MongoDB相关概念"></a>二、MongoDB相关概念</h2><ul><li>业务应用场景<ul><li>传统的关系型数据库（如MySQL），在数据操作的“三高”需求以及应对Web2.0的网站需求面前，显得力不从心。 </li><li>解释：“三高”需求： <ul><li>High performance - 对数据库高并发读写的需求。</li><li>Huge Storage - 对海量数据的高效率存储和访问的需求。 </li><li>High Scalability &amp;&amp; High Availability- 对数据库的高可扩展性和高可用性的需求。 而MongoDB可应对“三高”需求。</li></ul></li><li>具体的应用场景<ol><li>社交场景，使用MongoDB存储用户信息，以及用户发表的朋友圈信息，通过地理位置索引实现附近的人、地点等功能</li><li>游戏场景，使用 MongoDB 存储游戏用户信息，用户的装备、积分等直接以内嵌文档的形式存储，方便查询、高效率存储和访问</li><li>物流场景，使用 MongoDB 存储订单信息，订单状态在运送过程中会不断更新，以 MongoDB 内嵌数组的形式来存储，一次查询就能将 订单所有的变更读取出来</li><li>物联网场景，使用 MongoDB 存储所有接入的智能设备信息，以及设备汇报的日志信息，并对这些信息进行多维度的分析</li><li>视频直播，使用 MongoDB 存储用户信息、点赞互动信息等</li></ol></li><li>以上场景中，数据操作方面的共同特点：<ol><li>数据量大</li><li>写入操作频繁（读写都很频繁）</li><li>价值较低的数据，对事务性要求不高</li></ol></li><li><strong>选择MongoDB</strong><ul><li>在架构选型上，除了上述的三个特点外，如果你还犹豫是否要选择它？可以考虑以下的一些问题： <ul><li>应用不需要事务及复杂 join 支持 、</li><li>新应用，需求会变，数据模型无法确定，想快速迭代开发 </li><li>应用需要2000-3000以上的读写QPS（更高也可以） </li><li>应用需要TB甚至 PB 级别数据存储 应用发展迅速，需要能快速水平扩展 应用要求存储的数据不丢失 应用需要99.999%高可用 应用需要大量的地理位置查询、文本查询 如果上述有1个符合，可以考虑 MongoDB，2个及以上的符合，选择 MongoDB 绝不会后悔</li></ul></li></ul></li></ul></li></ul><h2 id="三、MongoDB简介"><a href="#三、MongoDB简介" class="headerlink" title="三、MongoDB简介"></a>三、MongoDB简介</h2><ul><li><p>MongoDB是为快速开发互联网Web应用而设计的数据库系统。MongoDB的设计目标是极简、灵活、作为Web应用栈的一部分。MongoDB的数据模型是面向文档的，所谓文档是一种类似于JSON的结构，简单理解MongoDB这个数据库中存的是各种各样的JSON。(BSON)（二进制的json）</p></li><li><p>三个概念： 结构类似于：MongoDB –&gt; n * database –&gt;n * collection –&gt;n * document</p><ul><li>数据库（database）<ul><li>数据库是一个仓库，在仓库中可以存放集合</li></ul></li><li>集合（collection）<ul><li>集合类似于数组，在集合中可以存放文档</li></ul></li><li>文档（document）<ul><li>文档数据库中的最小单位，我们存储和操作的内容都是文档</li></ul></li></ul></li><li><p>MongoDB的版本偶数版本为稳定版，奇数版本为开发版，MongoDB对于32位系统支持不佳，所以3.2版本以后没有在对32位系统的支持</p></li><li><p>docker安装MongoDB：</p><ul><li>&#96;&#96;&#96;shell<br>docker pull mongo<br>docker run -itd –name mongo -p 27017:27017 mongo –auth<br>docker exec -it 2c79 mongo admin<br>db.createUser({user: ‘root’, pwd: ‘root’, roles:[{ role: “root”, db:”admin” }]});<br>db.auth(“root”,”root”);<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - **其中 2c79 是 CONTAINER ID，即容器ID**</span><br><span class="line"></span><br><span class="line">## 四、MongoDB技术优势总结</span><br><span class="line"></span><br><span class="line">- JSON结构和对象模型接近，开发代码量低</span><br><span class="line"></span><br><span class="line">- JSON的动态模型意味着更容易响应新的业务需求</span><br><span class="line">- 复制集提供99.99%高可用</span><br><span class="line">- 分片架构支持海量数据和无缝扩容</span><br><span class="line"></span><br><span class="line">## 五、简单使用</span><br><span class="line"></span><br><span class="line">### 使用insert 完成插入操作</span><br><span class="line"></span><br><span class="line">1. 操作格式：</span><br><span class="line"></span><br><span class="line">   - db.&lt;集合&gt;.insertOne(&lt;JSON对象&gt;)</span><br><span class="line"></span><br><span class="line">   - db.&lt;集合&gt;.insertMany([&lt;JSON1&gt;, &lt;JSON2&gt;, ...&lt;JSON3&gt;])</span><br><span class="line"></span><br><span class="line">2. 实例：</span><br><span class="line"></span><br><span class="line">   - db.fruit.insertOne(&#123;name:&quot;apple&quot;&#125;)</span><br><span class="line">   - db.fruit.insertMany([&#123;name:&quot;apple&quot;&#125;,&#123;name:&quot;pear&quot;&#125;,&#123;name:&quot;orange&quot;&#125;])</span><br><span class="line"></span><br><span class="line">### 使用find查询文档</span><br><span class="line"></span><br><span class="line">1. 关于find</span><br><span class="line"></span><br><span class="line">   - find是MongoDB中查询数据的基本指令，相当于SQL中的SELECT</span><br><span class="line">   - find返回的是游标</span><br><span class="line"></span><br><span class="line">2. find示例</span><br><span class="line"></span><br><span class="line">   - db.movies.find(&#123;&quot;year&quot;:1975&#125;)  //单条件查询</span><br><span class="line">   - db.movies.find(&#123;&quot;year&quot;:1989,&quot;title&quot;:&quot;Batman&quot;&#125;)  //多条件and查询</span><br><span class="line">   - db.movies.find(&#123;$and:[&#123;&quot;title&quot;:&quot;Batman&quot;&#125;,&#123;&quot;category&quot;:&quot;action&quot;&#125;]&#125;) //and的另一种形式</span><br><span class="line">   - db.movies.find(&#123;$or:[&#123;&quot;year&quot;:1989&#125;,&#123;&quot;title&quot;:&quot;Batman&quot;&#125;]&#125;)  //多条件or查询</span><br><span class="line">   - db.movies.find(&#123;&quot;title&quot;:/^B/&#125;) //按正则表达式查找</span><br><span class="line"></span><br><span class="line">3. 对照表</span><br><span class="line"></span><br><span class="line">   |     SQL      |               MQL               |</span><br><span class="line">   | :----------: | :-----------------------------: |</span><br><span class="line">   |     a=1      |              &#123;a:1&#125;              |</span><br><span class="line">   |     a&lt;&gt;1     |           &#123;a:&#123;$ne:1&#125;&#125;           |</span><br><span class="line">   |     a&gt;1      |           &#123;a:&#123;$gt:1&#125;&#125;           |</span><br><span class="line">   |     a&gt;=1     |          &#123;a:&#123;$gte:1&#125;&#125;           |</span><br><span class="line">   |     a&lt;1      |           &#123;a:&#123;$lt:1&#125;&#125;           |</span><br><span class="line">   |     a&lt;=1     |          &#123;a:&#123;$lte:1&#125;&#125;           |</span><br><span class="line">   | a=1 AND b=1  | &#123;a:1,b:1&#125;或&#123;$and:[&#123;a:1&#125;,&#123;b:1&#125;]&#125; |</span><br><span class="line">   |  a=1 OR b=1  |       &#123;$or:[&#123;a:1&#125;,&#123;b:1&#125;]&#125;       |</span><br><span class="line">   |  a IS NULL   |       &#123;a:&#123;$exists:false&#125;&#125;       |</span><br><span class="line">   | a IN (1,2,3) |        &#123;a:&#123;$in:[1,2,3]&#125;&#125;        |</span><br><span class="line"></span><br><span class="line">4.   ![image-20200608180446313](https://gitee.com/zelen/IMG/raw/master/PicGo/20200608180434.png)</span><br><span class="line"></span><br><span class="line">5.    ![](https://gitee.com/zelen/IMG/raw/master/PicGo/20200609104401.png)</span><br><span class="line"></span><br><span class="line">6.   ![](https://gitee.com/zelen/IMG/raw/master/PicGo/20200609104633.png)</span><br><span class="line"></span><br><span class="line">7. ![](https://gitee.com/zelen/IMG/raw/master/PicGo/20200609105123.png)</span><br><span class="line"></span><br><span class="line">8. ![](https://gitee.com/zelen/IMG/raw/master/PicGo/20200609104914.png)</span><br><span class="line"></span><br><span class="line">9. 使用drop删除集合</span><br><span class="line"></span><br><span class="line">   - 使用db.&lt;集合&gt;.drop()来删除一个集合</span><br><span class="line">   - 集合中的全部文档都会被删除</span><br><span class="line">   - 集合相关的索引也会被删除</span><br><span class="line">   - `db.colTOBeDropped.drop()`</span><br><span class="line"></span><br><span class="line">10. 使用dropDatabase删除数据库</span><br><span class="line"></span><br><span class="line">    - 使用db.dropDatabase()来删除数据库</span><br><span class="line"></span><br><span class="line">    - 数据库相应文件也会被删除，磁盘空间将被释放</span><br><span class="line"></span><br><span class="line">    -   ```shell</span><br><span class="line">      use tempDB</span><br><span class="line">      db.dropDatabase()</span><br><span class="line">      show collections // No collectios</span><br><span class="line">      show dbs // The db is gone</span><br></pre></td></tr></table></figure><ul><li></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL</title>
      <link href="/2020/07/08/MySQL/"/>
      <url>/2020/07/08/MySQL/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库锁"><a href="#数据库锁" class="headerlink" title="数据库锁"></a>数据库锁</h3><ul><li>粒度小，方便用于集群环境<h3 id="代码锁"><a href="#代码锁" class="headerlink" title="代码锁"></a>代码锁</h3></li><li>粒度大，需要封装</li></ul><span id="more"></span><h2 id="微观"><a href="#微观" class="headerlink" title="微观"></a>微观</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="行锁-amp-表锁"><a href="#行锁-amp-表锁" class="headerlink" title="行锁 &amp; 表锁"></a>行锁 &amp; 表锁</h4><p>只有明确指定主键，才会执行行锁，否则执行表锁</p><ul><li>无锁<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">-1</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line">#排它锁但自增主键一般从<span class="number">1</span>开始  主键不存在  因此不执行锁 </span><br></pre></td></tr></table></figure></li><li>行锁<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">for</span> <span class="keyword">update</span> ;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> name <span class="operator">=</span> <span class="string">&#x27;kk&#x27;</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line">#行级排它锁</span><br></pre></td></tr></table></figure></li><li>表锁<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#主键不明确 锁住整张表</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;kk&#x27;</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id <span class="operator">&lt;&gt;</span> <span class="number">3</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>application.yml的一些配置</title>
      <link href="/2020/07/08/application.yml/"/>
      <url>/2020/07/08/application.yml/</url>
      
        <content type="html"><![CDATA[<p><strong>application.yml的一些配置</strong></p><span id="more"></span><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">addresses:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:5672</span></span><br><span class="line">    <span class="attr">virtual-host:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">connection-timeout:</span> <span class="number">15000</span></span><br><span class="line">    <span class="comment">##开启Publisher Confirm机制 采用消息确认模式，消息发送后异步等待Broker响应</span></span><br><span class="line">    <span class="attr">publisher-confirms:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">##开启Publisher Return机制</span></span><br><span class="line">    <span class="attr">publisher-returns:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">encoding:</span></span><br><span class="line">      <span class="attr">charset:</span> <span class="string">utf-8</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">    <span class="attr">default-property-inclusion:</span> <span class="string">non_null</span></span><br><span class="line">  <span class="comment"># 数据库访问配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/oms?useUnicode=true&amp;charaterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">180C1AD83CA4F0C8E7D27294BBB97A1D</span></span><br><span class="line">    <span class="comment">######以下为druid增加的配置#######</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment"># 初始化大小，最小，最大</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="comment"># 配置获取连接等待超时的时间</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="comment"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="comment"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 打开PSCache，并且指定每个连接上PSCache的大小</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="comment"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&#x27;wall&#x27;用于防火墙，此处是filter修改的地方</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">logSlowSql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;password=$&#123;spring.datasource.password&#125;</span></span><br><span class="line">    <span class="comment"># 合并多个DruidDataSource的监控数据</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment">#mapper扫描路径</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath*:/mapper/**/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#获取数据库自增主键值</span></span><br><span class="line">    <span class="attr">use-generated-keys:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#开启驼峰命名转换</span></span><br><span class="line">    <span class="attr">use-column-label:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#开启驼峰命名转换</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> yaml </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/2020/07/08/docker/"/>
      <url>/2020/07/08/docker/</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong><br> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化,容器是完全使用沙箱机制，相互之间不会有任何接口。</p><span id="more"></span><p>一个完整的Docker有以下几个部分组成：</p><ol><li>DockerClient客户端</li><li>Docker Daemon守护进程</li><li>Docker Image镜像</li><li>DockerContainer容器</li><li><a href="https://blog.csdn.net/qq_38503329/article/details/97147797">一些docker命令</a></li></ol><p><strong>docker 安装 mysql（其他类似）</strong></p><ol><li><p>拉取镜像  指定自己需要的版本，后续启动容器时也需要指定版本（最新版默认不需要）</p><p><code> docker pull mysql:5.7</code></p></li><li><p>运行容器  -p 3306:3306 指定ip、指定宿主机port、指定容器port ip不指定 默认0.0.0.0</p><p><code> docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:5.7</code></p></li><li><p>其他后续 包括修改配置文件</p><p><code>dockerexec -it f7bbac /bin/bash </code>  &#x2F;&#x2F; f7bbac 是容器ID docker ps 可查</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install vim -y</span><br><span class="line">cd /etc/mysql/mysql.conf.d</span><br><span class="line">vim mysqld.cnf</span><br><span class="line">lower_case_table_names=1 //末尾添加 是MySQL不区分大小写 重启后生效</span><br><span class="line">show variables like &#x27;%table_names&#x27;;  //查看是否区分大小写</span><br></pre></td></tr></table></figure></li></ol><p><strong>docker安装最新版MySQL（后两条 修改密码格式 方便 Navicat 连接 MySQL8 以上的版本  本地<code> &#39;root&#39;@&#39;localhost&#39;</code>  远程  <code>&#39;root&#39;@&#39;%&#39;</code>）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line">docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql</span><br><span class="line">dockerexec -it f7bbac /bin/bash</span><br><span class="line">select host, user, authentication_string, plugin from user;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub打不开图片</title>
      <link href="/2020/07/08/github-img/"/>
      <url>/2020/07/08/github-img/</url>
      
        <content type="html"><![CDATA[<h2 id="GitHub打不开图片"><a href="#GitHub打不开图片" class="headerlink" title="GitHub打不开图片"></a>GitHub打不开图片</h2><p><a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a>   查看IP地址替换下面</p><p>hosts<br>路径：C:\Windows\System32\drivers\etc\hosts<br><strong>谨慎使用</strong></p><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GitHub Start</span> </span><br><span class="line">140.82.113.3    github.com</span><br><span class="line">140.82.114.20    gist.github.com</span><br><span class="line">185.199.108.153    assets-cdn.github.com</span><br><span class="line">185.199.109.153    assets-cdn.github.com</span><br><span class="line">185.199.110.153    assets-cdn.github.com</span><br><span class="line">185.199.111.153    assets-cdn.github.com</span><br><span class="line">199.232.68.133    raw.githubusercontent.com</span><br><span class="line">199.232.28.133    gist.githubusercontent.com</span><br><span class="line">199.232.28.133    cloud.githubusercontent.com</span><br><span class="line">199.232.28.133    camo.githubusercontent.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GitHub End</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> question </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yaml配置</title>
      <link href="/2020/07/08/makedown%E7%9B%B8%E5%85%B3/"/>
      <url>/2020/07/08/makedown%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<p><code>--- 放在开头是yaml配置文件</code></p>]]></content>
      
      
      <categories>
          
          <category> yaml </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改MYSQL数据库存储文件路径，MYSQL无法启动的解决方案</title>
      <link href="/2020/07/08/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%EF%BC%8CMYSQL%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2020/07/08/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%EF%BC%8CMYSQL%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="关于修改MYSQL数据库存储文件路径，MYSQL无法启动的解决方案"><a href="#关于修改MYSQL数据库存储文件路径，MYSQL无法启动的解决方案" class="headerlink" title="关于修改MYSQL数据库存储文件路径，MYSQL无法启动的解决方案"></a>关于修改MYSQL数据库存储文件路径，MYSQL无法启动的解决方案</h1><span id="more"></span><p>在修改MYSQL数据库存储文件路径期间，出现了一个问题：路径修改完，MYSQL再也启动不了。</p><p><img src="https://img-blog.csdnimg.cn/20200531095408765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5OTEyNzgx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解决方案：<br>1、检查你更改路径的my.ini文件。<em><em><strong>注意你的新路径使用的是“\”而不是“&#x2F;”*！！！！！！！！！！！</strong></em><br>如图所示：<br><img src="https://img-blog.csdnimg.cn/20200531095850291.png" alt="红色为原路径、绿色为新路径"><br>图中：红色为原路径、绿色为新路径。再说一次</em><em><strong>注意你的新路径使用的是“\”而不是“&#x2F;”*！！！！！！！！！！！</strong></em></p><p>2、如果经过上述操作，还不能重启成功。那么继续：<br>右击 ” 我的电脑 ” 找到“ 管理 ”：<br><img src="https://img-blog.csdnimg.cn/20200531100116741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5OTEyNzgx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击 “工具” 找到 “计算机管理” 点击，找到 ”本地用户和组“<br><img src="https://img-blog.csdnimg.cn/20200531100143602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5OTEyNzgx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择“组”–&gt;双击Administrators–&gt;单击“添加”–&gt;单击“高级”–&gt;单击“立即查找”–&gt;在下面的列表中选择Network Service用户–&gt;两次单击“确定”–&gt;加入。<br><img src="https://img-blog.csdnimg.cn/20200531100207233.png" alt="在这里插入图片描述"><br>好了，然后在重启mysql服务就没问题了，MYSQL数据库存储路径就修改好了，在新建个数据库，就会存到我们修改的路径下了</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态散花代码</title>
      <link href="/2020/07/08/%E5%8A%A8%E6%80%81%E6%95%A3%E8%8A%B1%E4%BB%A3%E7%A0%81/"/>
      <url>/2020/07/08/%E5%8A%A8%E6%80%81%E6%95%A3%E8%8A%B1%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="动态散花代码"><a href="#动态散花代码" class="headerlink" title="动态散花代码"></a>动态散花代码</h1><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>flower<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">*&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">list-style-type</span>:none;&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/* a,img&#123;border:0;&#125; */</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/* body&#123;font:12px/180% Arial, Helvetica, sans-serif, &quot;新宋体&quot;;&#125; */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;sakura&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- sakura shader --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">uniform mat4 uProjection;</span></span><br><span class="line"><span class="language-javascript">uniform mat4 uModelview;</span></span><br><span class="line"><span class="language-javascript">uniform vec3 uResolution;</span></span><br><span class="line"><span class="language-javascript">uniform vec3 uOffset;</span></span><br><span class="line"><span class="language-javascript">uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="language-javascript">uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">attribute vec3 aPosition;</span></span><br><span class="line"><span class="language-javascript">attribute vec3 aEuler;</span></span><br><span class="line"><span class="language-javascript">attribute vec2 aMisc; <span class="comment">//x:size, y:fade</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec3 pposition;</span></span><br><span class="line"><span class="language-javascript">varying float psize;</span></span><br><span class="line"><span class="language-javascript">varying float palpha;</span></span><br><span class="line"><span class="language-javascript">varying float pdist;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="language-javascript">varying vec3 normX;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normY;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normZ;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normal;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying float diffuse;</span></span><br><span class="line"><span class="language-javascript">varying float specular;</span></span><br><span class="line"><span class="language-javascript">varying float rstop;</span></span><br><span class="line"><span class="language-javascript">varying float distancefade;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Projection is based on vertical angle</span></span></span><br><span class="line"><span class="language-javascript">    vec4 pos = uModelview * <span class="title function_">vec4</span>(aPosition + uOffset, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    gl_Position = uProjection * pos;</span></span><br><span class="line"><span class="language-javascript">    gl_PointSize = aMisc.<span class="property">x</span> * uProjection[<span class="number">1</span>][<span class="number">1</span>] / -pos.<span class="property">z</span> * uResolution.<span class="property">y</span> * <span class="number">0.5</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    pposition = pos.<span class="property">xyz</span>;</span></span><br><span class="line"><span class="language-javascript">    psize = aMisc.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">    pdist = <span class="title function_">length</span>(pos.<span class="property">xyz</span>);</span></span><br><span class="line"><span class="language-javascript">    palpha = <span class="title function_">smoothstep</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, (pdist - <span class="number">0.1</span>) / uFade.<span class="property">z</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    vec3 elrsn = <span class="title function_">sin</span>(aEuler);</span></span><br><span class="line"><span class="language-javascript">    vec3 elrcs = <span class="title function_">cos</span>(aEuler);</span></span><br><span class="line"><span class="language-javascript">    mat3 rotx = <span class="title function_">mat3</span>(</span></span><br><span class="line"><span class="language-javascript">        <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="number">0.0</span>, elrcs.<span class="property">x</span>, elrsn.<span class="property">x</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="number">0.0</span>, -elrsn.<span class="property">x</span>, elrcs.<span class="property">x</span></span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">    mat3 roty = <span class="title function_">mat3</span>(</span></span><br><span class="line"><span class="language-javascript">        elrcs.<span class="property">y</span>, <span class="number">0.0</span>, -elrsn.<span class="property">y</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="language-javascript">        elrsn.<span class="property">y</span>, <span class="number">0.0</span>, elrcs.<span class="property">y</span></span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">    mat3 rotz = <span class="title function_">mat3</span>(</span></span><br><span class="line"><span class="language-javascript">        elrcs.<span class="property">z</span>, elrsn.<span class="property">z</span>, <span class="number">0.0</span>, </span></span><br><span class="line"><span class="language-javascript">        -elrsn.<span class="property">z</span>, elrcs.<span class="property">z</span>, <span class="number">0.0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span></span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">    mat3 rotmat = rotx * roty * rotz;</span></span><br><span class="line"><span class="language-javascript">    normal = rotmat[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    mat3 trrotm = <span class="title function_">mat3</span>(</span></span><br><span class="line"><span class="language-javascript">        rotmat[<span class="number">0</span>][<span class="number">0</span>], rotmat[<span class="number">1</span>][<span class="number">0</span>], rotmat[<span class="number">2</span>][<span class="number">0</span>],</span></span><br><span class="line"><span class="language-javascript">        rotmat[<span class="number">0</span>][<span class="number">1</span>], rotmat[<span class="number">1</span>][<span class="number">1</span>], rotmat[<span class="number">2</span>][<span class="number">1</span>],</span></span><br><span class="line"><span class="language-javascript">        rotmat[<span class="number">0</span>][<span class="number">2</span>], rotmat[<span class="number">1</span>][<span class="number">2</span>], rotmat[<span class="number">2</span>][<span class="number">2</span>]</span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">    normX = trrotm[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">    normY = trrotm[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">    normZ = trrotm[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vec3 lit = <span class="title function_">vec3</span>(<span class="number">0.6917144638660746</span>, <span class="number">0.6917144638660746</span>, -<span class="number">0.20751433915982237</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    float tmpdfs = <span class="title function_">dot</span>(lit, normal);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(tmpdfs &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        normal = -normal;</span></span><br><span class="line"><span class="language-javascript">        tmpdfs = <span class="title function_">dot</span>(lit, normal);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    diffuse = <span class="number">0.4</span> + tmpdfs;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    vec3 eyev = <span class="title function_">normalize</span>(-pos.<span class="property">xyz</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(<span class="title function_">dot</span>(eyev, normal) &gt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        vec3 hv = <span class="title function_">normalize</span>(eyev + lit);</span></span><br><span class="line"><span class="language-javascript">        specular = <span class="title function_">pow</span>(<span class="title function_">max</span>(<span class="title function_">dot</span>(hv, normal), <span class="number">0.0</span>), <span class="number">20.0</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        specular = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    rstop = <span class="title function_">clamp</span>((<span class="title function_">abs</span>(pdist - uDOF.<span class="property">x</span>) - uDOF.<span class="property">y</span>) / uDOF.<span class="property">z</span>, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    rstop = <span class="title function_">pow</span>(rstop, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//-0.69315 = ln(0.5)</span></span></span><br><span class="line"><span class="language-javascript">    distancefade = <span class="title function_">min</span>(<span class="number">1.0</span>, <span class="title function_">exp</span>((uFade.<span class="property">x</span> - pdist) * <span class="number">0.69315</span> / uFade.<span class="property">y</span>));</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;sakura_point_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">uniform vec3 uDOF;  <span class="comment">//x:focus distance, y:focus radius, z:max radius</span></span></span><br><span class="line"><span class="language-javascript">uniform vec3 uFade; <span class="comment">//x:start distance, y:half distance, z:near fade start</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> vec3 fadeCol = <span class="title function_">vec3</span>(<span class="number">0.08</span>, <span class="number">0.03</span>, <span class="number">0.06</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec3 pposition;</span></span><br><span class="line"><span class="language-javascript">varying float psize;</span></span><br><span class="line"><span class="language-javascript">varying float palpha;</span></span><br><span class="line"><span class="language-javascript">varying float pdist;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//varying mat3 rotMat;</span></span></span><br><span class="line"><span class="language-javascript">varying vec3 normX;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normY;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normZ;</span></span><br><span class="line"><span class="language-javascript">varying vec3 normal;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying float diffuse;</span></span><br><span class="line"><span class="language-javascript">varying float specular;</span></span><br><span class="line"><span class="language-javascript">varying float rstop;</span></span><br><span class="line"><span class="language-javascript">varying float distancefade;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">float <span class="title function_">ellipse</span>(<span class="params">vec2 p, vec2 o, vec2 r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec2 lp = (p - o) / r;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="title function_">length</span>(lp) - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec3 p = <span class="title function_">vec3</span>(gl_PointCoord - <span class="title function_">vec2</span>(<span class="number">0.5</span>, <span class="number">0.5</span>), <span class="number">0.0</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    vec3 d = <span class="title function_">vec3</span>(<span class="number">0.0</span>, <span class="number">0.0</span>, -<span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    float nd = normZ.<span class="property">z</span>; <span class="comment">//dot(-normZ, d);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(<span class="title function_">abs</span>(nd) &lt; <span class="number">0.0001</span>) discard;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    float np = <span class="title function_">dot</span>(normZ, p);</span></span><br><span class="line"><span class="language-javascript">    vec3 tp = p + d * np / nd;</span></span><br><span class="line"><span class="language-javascript">    vec2 coord = <span class="title function_">vec2</span>(<span class="title function_">dot</span>(normX, tp), <span class="title function_">dot</span>(normY, tp));</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//angle = 15 degree</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> float flwrsn = <span class="number">0.258819045102521</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> float flwrcs = <span class="number">0.965925826289068</span>;</span></span><br><span class="line"><span class="language-javascript">    mat2 flwrm = <span class="title function_">mat2</span>(flwrcs, -flwrsn, flwrsn, flwrcs);</span></span><br><span class="line"><span class="language-javascript">    vec2 flwrp = <span class="title function_">vec2</span>(<span class="title function_">abs</span>(coord.<span class="property">x</span>), coord.<span class="property">y</span>) * flwrm;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    float r;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(flwrp.<span class="property">x</span> &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        r = <span class="title function_">ellipse</span>(flwrp, <span class="title function_">vec2</span>(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, <span class="title function_">vec2</span>(<span class="number">0.36</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        r = <span class="title function_">ellipse</span>(flwrp, <span class="title function_">vec2</span>(<span class="number">0.065</span>, <span class="number">0.024</span>) * <span class="number">0.5</span>, <span class="title function_">vec2</span>(<span class="number">0.58</span>, <span class="number">0.96</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(r &gt; rstop) discard;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    vec3 col = <span class="title function_">mix</span>(<span class="title function_">vec3</span>(<span class="number">1.0</span>, <span class="number">0.8</span>, <span class="number">0.75</span>), <span class="title function_">vec3</span>(<span class="number">1.0</span>, <span class="number">0.9</span>, <span class="number">0.87</span>), r);</span></span><br><span class="line"><span class="language-javascript">    float grady = <span class="title function_">mix</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="title function_">pow</span>(coord.<span class="property">y</span> * <span class="number">0.5</span> + <span class="number">0.5</span>, <span class="number">0.35</span>));</span></span><br><span class="line"><span class="language-javascript">    col *= <span class="title function_">vec3</span>(<span class="number">1.0</span>, grady, grady);</span></span><br><span class="line"><span class="language-javascript">    col *= <span class="title function_">mix</span>(<span class="number">0.8</span>, <span class="number">1.0</span>, <span class="title function_">pow</span>(<span class="title function_">abs</span>(coord.<span class="property">x</span>), <span class="number">0.3</span>));</span></span><br><span class="line"><span class="language-javascript">    col = col * diffuse + specular;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    col = <span class="title function_">mix</span>(fadeCol, col, distancefade);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    float alpha = (rstop &gt; <span class="number">0.001</span>)? (<span class="number">0.5</span> - r / (rstop * <span class="number">2.0</span>)) : <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">    alpha = <span class="title function_">smoothstep</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, alpha) * palpha;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = <span class="title function_">vec4</span>(col * <span class="number">0.5</span>, alpha);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effects --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">uniform vec3 uResolution;</span></span><br><span class="line"><span class="language-javascript">attribute vec2 aPosition;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl_Position = <span class="title function_">vec4</span>(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    texCoord = aPosition.<span class="property">xy</span> * <span class="number">0.5</span> + <span class="title function_">vec2</span>(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    screenCoord = aPosition.<span class="property">xy</span> * <span class="title function_">vec2</span>(uResolution.<span class="property">z</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;bg_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">uniform vec2 uTimes;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec3 col;</span></span><br><span class="line"><span class="language-javascript">    float c;</span></span><br><span class="line"><span class="language-javascript">    vec2 tmpv = texCoord * <span class="title function_">vec2</span>(<span class="number">0.8</span>, <span class="number">1.0</span>) - <span class="title function_">vec2</span>(<span class="number">0.95</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    c = <span class="title function_">exp</span>(-<span class="title function_">pow</span>(<span class="title function_">length</span>(tmpv) * <span class="number">1.8</span>, <span class="number">2.0</span>));</span></span><br><span class="line"><span class="language-javascript">    col = <span class="title function_">mix</span>(<span class="title function_">vec3</span>(<span class="number">0.02</span>, <span class="number">0.0</span>, <span class="number">0.03</span>), <span class="title function_">vec3</span>(<span class="number">0.96</span>, <span class="number">0.98</span>, <span class="number">1.0</span>) * <span class="number">1.5</span>, c);</span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = <span class="title function_">vec4</span>(col * <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_brightbuf_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript">uniform sampler2D uSrc;</span></span><br><span class="line"><span class="language-javascript">uniform vec2 uDelta;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec4 col = <span class="title function_">texture2D</span>(uSrc, texCoord);</span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = <span class="title function_">vec4</span>(col.<span class="property">rgb</span> * <span class="number">2.0</span> - <span class="title function_">vec3</span>(<span class="number">0.5</span>), <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript">uniform sampler2D uSrc;</span></span><br><span class="line"><span class="language-javascript">uniform vec2 uDelta;</span></span><br><span class="line"><span class="language-javascript">uniform vec4 uBlurDir; <span class="comment">//dir(x, y), stride(z, w)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec4 col = <span class="title function_">texture2D</span>(uSrc, texCoord);</span></span><br><span class="line"><span class="language-javascript">    col = col + <span class="title function_">texture2D</span>(uSrc, texCoord + uBlurDir.<span class="property">xy</span> * uDelta);</span></span><br><span class="line"><span class="language-javascript">    col = col + <span class="title function_">texture2D</span>(uSrc, texCoord - uBlurDir.<span class="property">xy</span> * uDelta);</span></span><br><span class="line"><span class="language-javascript">    col = col + <span class="title function_">texture2D</span>(uSrc, texCoord + (uBlurDir.<span class="property">xy</span> + uBlurDir.<span class="property">zw</span>) * uDelta);</span></span><br><span class="line"><span class="language-javascript">    col = col + <span class="title function_">texture2D</span>(uSrc, texCoord - (uBlurDir.<span class="property">xy</span> + uBlurDir.<span class="property">zw</span>) * uDelta);</span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = col / <span class="number">5.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- effect fragment shader template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;fx_common_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript">uniform sampler2D uSrc;</span></span><br><span class="line"><span class="language-javascript">uniform vec2 uDelta;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = <span class="title function_">texture2D</span>(uSrc, texCoord);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- post processing --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_vsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_vertex&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">uniform vec3 uResolution;</span></span><br><span class="line"><span class="language-javascript">attribute vec2 aPosition;</span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl_Position = <span class="title function_">vec4</span>(aPosition, <span class="number">0.0</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    texCoord = aPosition.<span class="property">xy</span> * <span class="number">0.5</span> + <span class="title function_">vec2</span>(<span class="number">0.5</span>, <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    screenCoord = aPosition.<span class="property">xy</span> * <span class="title function_">vec2</span>(uResolution.<span class="property">z</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;pp_final_fsh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;x-shader/x_fragment&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">#ifdef <span class="variable constant_">GL_ES</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//precision mediump float;</span></span></span><br><span class="line"><span class="language-javascript">precision highp float;</span></span><br><span class="line"><span class="language-javascript">#endif</span></span><br><span class="line"><span class="language-javascript">uniform sampler2D uSrc;</span></span><br><span class="line"><span class="language-javascript">uniform sampler2D uBloom;</span></span><br><span class="line"><span class="language-javascript">uniform vec2 uDelta;</span></span><br><span class="line"><span class="language-javascript">varying vec2 texCoord;</span></span><br><span class="line"><span class="language-javascript">varying vec2 screenCoord;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">void</span> <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    vec4 srccol = <span class="title function_">texture2D</span>(uSrc, texCoord) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    vec4 bloomcol = <span class="title function_">texture2D</span>(uBloom, texCoord);</span></span><br><span class="line"><span class="language-javascript">    vec4 col;</span></span><br><span class="line"><span class="language-javascript">    col = srccol + bloomcol * (<span class="title function_">vec4</span>(<span class="number">1.0</span>) + srccol);</span></span><br><span class="line"><span class="language-javascript">    col *= <span class="title function_">smoothstep</span>(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="title function_">pow</span>(<span class="title function_">length</span>((texCoord - <span class="title function_">vec2</span>(<span class="number">0.5</span>)) * <span class="number">2.0</span>), <span class="number">1.2</span>) * <span class="number">0.5</span>);</span></span><br><span class="line"><span class="language-javascript">    col = <span class="title function_">pow</span>(col, <span class="title function_">vec4</span>(<span class="number">0.45454545454545</span>)); <span class="comment">//(1.0 / 2.2)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    gl_FragColor = <span class="title function_">vec4</span>(col.<span class="property">rgb</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    gl_FragColor.<span class="property">a</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// Utilities</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">Vector3</span> = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">Matrix44</span> = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vector3</span>.<span class="property">create</span> = <span class="keyword">function</span>(<span class="params">x, y, z</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;<span class="string">&#x27;x&#x27;</span>:x, <span class="string">&#x27;y&#x27;</span>:y, <span class="string">&#x27;z&#x27;</span>:z&#125;;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vector3</span>.<span class="property">dot</span> = <span class="keyword">function</span> (<span class="params">v0, v1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> v0.<span class="property">x</span> * v1.<span class="property">x</span> + v0.<span class="property">y</span> * v1.<span class="property">y</span> + v0.<span class="property">z</span> * v1.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vector3</span>.<span class="property">cross</span> = <span class="keyword">function</span> (<span class="params">v, v0, v1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    v.<span class="property">x</span> = v0.<span class="property">y</span> * v1.<span class="property">z</span> - v0.<span class="property">z</span> * v1.<span class="property">y</span>;</span></span><br><span class="line"><span class="language-javascript">    v.<span class="property">y</span> = v0.<span class="property">z</span> * v1.<span class="property">x</span> - v0.<span class="property">x</span> * v1.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    v.<span class="property">z</span> = v0.<span class="property">x</span> * v1.<span class="property">y</span> - v0.<span class="property">y</span> * v1.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vector3</span>.<span class="property">normalize</span> = <span class="keyword">function</span> (<span class="params">v</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> l = v.<span class="property">x</span> * v.<span class="property">x</span> + v.<span class="property">y</span> * v.<span class="property">y</span> + v.<span class="property">z</span> * v.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(l &gt; <span class="number">0.00001</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        l = <span class="number">1.0</span> / <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(l);</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">x</span> *= l;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">y</span> *= l;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">z</span> *= l;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vector3</span>.<span class="property">arrayForm</span> = <span class="keyword">function</span>(<span class="params">v</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(v.<span class="property">array</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">array</span>[<span class="number">0</span>] = v.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">array</span>[<span class="number">1</span>] = v.<span class="property">y</span>;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">array</span>[<span class="number">2</span>] = v.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        v.<span class="property">array</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([v.<span class="property">x</span>, v.<span class="property">y</span>, v.<span class="property">z</span>]);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> v.<span class="property">array</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Matrix44</span>.<span class="property">createIdentity</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>]);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Matrix44</span>.<span class="property">loadProjection</span> = <span class="keyword">function</span> (<span class="params">m, aspect, vdeg, near, far</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> h = near * <span class="title class_">Math</span>.<span class="title function_">tan</span>(vdeg * <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180.0</span> * <span class="number">0.5</span>) * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> w = h * aspect;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">0</span>] = <span class="number">2.0</span> * near / w;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">4</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">5</span>] = <span class="number">2.0</span> * near / h;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">6</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">8</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">9</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">10</span>] = -(far + near) / (far - near);</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">11</span>] = -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">12</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">13</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">14</span>] = -<span class="number">2.0</span> * far * near / (far - near);</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">15</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Matrix44</span>.<span class="property">loadLookAt</span> = <span class="keyword">function</span> (<span class="params">m, vpos, vlook, vup</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> frontv = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(vpos.<span class="property">x</span> - vlook.<span class="property">x</span>, vpos.<span class="property">y</span> - vlook.<span class="property">y</span>, vpos.<span class="property">z</span> - vlook.<span class="property">z</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vector3</span>.<span class="title function_">normalize</span>(frontv);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> sidev = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vector3</span>.<span class="title function_">cross</span>(sidev, vup, frontv);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vector3</span>.<span class="title function_">normalize</span>(sidev);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> topv = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vector3</span>.<span class="title function_">cross</span>(topv, frontv, sidev);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vector3</span>.<span class="title function_">normalize</span>(topv);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">0</span>] = sidev.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">1</span>] = topv.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">2</span>] = frontv.<span class="property">x</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">3</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">4</span>] = sidev.<span class="property">y</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">5</span>] = topv.<span class="property">y</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">6</span>] = frontv.<span class="property">y</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">7</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">8</span>] = sidev.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">9</span>] = topv.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">10</span>] = frontv.<span class="property">z</span>;</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">11</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">12</span>] = -(vpos.<span class="property">x</span> * m[<span class="number">0</span>] + vpos.<span class="property">y</span> * m[<span class="number">4</span>] + vpos.<span class="property">z</span> * m[<span class="number">8</span>]);</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">13</span>] = -(vpos.<span class="property">x</span> * m[<span class="number">1</span>] + vpos.<span class="property">y</span> * m[<span class="number">5</span>] + vpos.<span class="property">z</span> * m[<span class="number">9</span>]);</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">14</span>] = -(vpos.<span class="property">x</span> * m[<span class="number">2</span>] + vpos.<span class="property">y</span> * m[<span class="number">6</span>] + vpos.<span class="property">z</span> * m[<span class="number">10</span>]);</span></span><br><span class="line"><span class="language-javascript">    m[<span class="number">15</span>] = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> timeInfo = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;start&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;prev&#x27;</span>:<span class="number">0</span>, <span class="comment">// Date</span></span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;delta&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;elapsed&#x27;</span>:<span class="number">0</span> <span class="comment">// Number(sec)</span></span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> gl;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> renderSpec = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;width&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;height&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;aspect&#x27;</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;array&#x27;</span>:<span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="number">3</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;halfWidth&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;halfHeight&#x27;</span>:<span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;halfArray&#x27;</span>:<span class="keyword">new</span> <span class="title class_">Float32Array</span>(<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// and some render targets. see setViewport()</span></span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript">renderSpec.<span class="property">setSize</span> = <span class="keyword">function</span>(<span class="params">w, h</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">width</span> = w;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">height</span> = h;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">aspect</span> = renderSpec.<span class="property">width</span> / renderSpec.<span class="property">height</span>;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">array</span>[<span class="number">0</span>] = renderSpec.<span class="property">width</span>;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">array</span>[<span class="number">1</span>] = renderSpec.<span class="property">height</span>;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">array</span>[<span class="number">2</span>] = renderSpec.<span class="property">aspect</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">halfWidth</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(w / <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">halfHeight</span> = <span class="title class_">Math</span>.<span class="title function_">floor</span>(h / <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">halfArray</span>[<span class="number">0</span>] = renderSpec.<span class="property">halfWidth</span>;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">halfArray</span>[<span class="number">1</span>] = renderSpec.<span class="property">halfHeight</span>;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">halfArray</span>[<span class="number">2</span>] = renderSpec.<span class="property">halfWidth</span> / renderSpec.<span class="property">halfHeight</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">deleteRenderTarget</span>(<span class="params">rt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">deleteFramebuffer</span>(rt.<span class="property">frameBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">deleteRenderbuffer</span>(rt.<span class="property">renderBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">deleteTexture</span>(rt.<span class="property">texture</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createRenderTarget</span>(<span class="params">w, h</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ret = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;width&#x27;</span>:w,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;height&#x27;</span>:h,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;sizeArray&#x27;</span>:<span class="keyword">new</span> <span class="title class_">Float32Array</span>([w, h, w / h]),</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;dtxArray&#x27;</span>:<span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="number">1.0</span> / w, <span class="number">1.0</span> / h])</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">frameBuffer</span> = gl.<span class="title function_">createFramebuffer</span>();</span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">renderBuffer</span> = gl.<span class="title function_">createRenderbuffer</span>();</span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">texture</span> = gl.<span class="title function_">createTexture</span>();</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, ret.<span class="property">texture</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, w, h, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_S</span>, gl.<span class="property">CLAMP_TO_EDGE</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_T</span>, gl.<span class="property">CLAMP_TO_EDGE</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MAG_FILTER</span>, gl.<span class="property">LINEAR</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MIN_FILTER</span>, gl.<span class="property">LINEAR</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, ret.<span class="property">frameBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">framebufferTexture2D</span>(gl.<span class="property">FRAMEBUFFER</span>, gl.<span class="property">COLOR_ATTACHMENT0</span>, gl.<span class="property">TEXTURE_2D</span>, ret.<span class="property">texture</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindRenderbuffer</span>(gl.<span class="property">RENDERBUFFER</span>, ret.<span class="property">renderBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">renderbufferStorage</span>(gl.<span class="property">RENDERBUFFER</span>, gl.<span class="property">DEPTH_COMPONENT16</span>, w, h);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">framebufferRenderbuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, gl.<span class="property">DEPTH_ATTACHMENT</span>, gl.<span class="property">RENDERBUFFER</span>, ret.<span class="property">renderBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindRenderbuffer</span>(gl.<span class="property">RENDERBUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">compileShader</span>(<span class="params">shtype, shsrc</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> retsh = gl.<span class="title function_">createShader</span>(shtype);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">gl.<span class="title function_">shaderSource</span>(retsh, shsrc);</span></span><br><span class="line"><span class="language-javascript">gl.<span class="title function_">compileShader</span>(retsh);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(!gl.<span class="title function_">getShaderParameter</span>(retsh, gl.<span class="property">COMPILE_STATUS</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> errlog = gl.<span class="title function_">getShaderInfoLog</span>(retsh);</span></span><br><span class="line"><span class="language-javascript">gl.<span class="title function_">deleteShader</span>(retsh);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">error</span>(errlog);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> retsh;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createShader</span>(<span class="params">vtxsrc, frgsrc, uniformlist, attrlist</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vsh = <span class="title function_">compileShader</span>(gl.<span class="property">VERTEX_SHADER</span>, vtxsrc);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> fsh = <span class="title function_">compileShader</span>(gl.<span class="property">FRAGMENT_SHADER</span>, frgsrc);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(vsh == <span class="literal">null</span> || fsh == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prog = gl.<span class="title function_">createProgram</span>();</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">attachShader</span>(prog, vsh);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">attachShader</span>(prog, fsh);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">deleteShader</span>(vsh);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">deleteShader</span>(fsh);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">linkProgram</span>(prog);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (!gl.<span class="title function_">getProgramParameter</span>(prog, gl.<span class="property">LINK_STATUS</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> errlog = gl.<span class="title function_">getProgramInfoLog</span>(prog);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">error</span>(errlog);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(uniformlist) &#123;</span></span><br><span class="line"><span class="language-javascript">        prog.<span class="property">uniforms</span> = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; uniformlist.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            prog.<span class="property">uniforms</span>[uniformlist[i]] = gl.<span class="title function_">getUniformLocation</span>(prog, uniformlist[i]);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(attrlist) &#123;</span></span><br><span class="line"><span class="language-javascript">        prog.<span class="property">attributes</span> = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; attrlist.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> attr = attrlist[i];</span></span><br><span class="line"><span class="language-javascript">            prog.<span class="property">attributes</span>[attr] = gl.<span class="title function_">getAttribLocation</span>(prog, attr);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> prog;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">useShader</span>(<span class="params">prog</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">useProgram</span>(prog);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.<span class="property">attributes</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">enableVertexAttribArray</span>(prog.<span class="property">attributes</span>[attr]);;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">unuseShader</span>(<span class="params">prog</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> prog.<span class="property">attributes</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">disableVertexAttribArray</span>(prog.<span class="property">attributes</span>[attr]);;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">useProgram</span>(<span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/////</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> projection = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;angle&#x27;</span>:<span class="number">60</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;nearfar&#x27;</span>:<span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="number">0.1</span>, <span class="number">100.0</span>]),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;matrix&#x27;</span>:<span class="title class_">Matrix44</span>.<span class="title function_">createIdentity</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> camera = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;position&#x27;</span>:<span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;lookat&#x27;</span>:<span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;up&#x27;</span>:<span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;dof&#x27;</span>:<span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">10.0</span>, <span class="number">4.0</span>, <span class="number">8.0</span>),</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&#x27;matrix&#x27;</span>:<span class="title class_">Matrix44</span>.<span class="title function_">createIdentity</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> pointFlower = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> meshFlower = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> sceneStandBy = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">BlossomParticle</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">rotation</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">alpha</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">zkey</span> = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">setVelocity</span> = <span class="keyword">function</span> (<span class="params">vx, vy, vz</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">0</span>] = vx;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">1</span>] = vy;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">2</span>] = vz;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">setRotation</span> = <span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">setPosition</span> = <span class="keyword">function</span> (<span class="params">nx, ny, nz</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">0</span>] = nx;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">1</span>] = ny;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">2</span>] = nz;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">setEulerAngles</span> = <span class="keyword">function</span> (<span class="params">rx, ry, rz</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">0</span>] = rx;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">1</span>] = ry;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">2</span>] = rz;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">setSize</span> = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">size</span> = s;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">BlossomParticle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params">dt, et</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">0</span>] += <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">1</span>] += <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>[<span class="number">2</span>] += <span class="variable language_">this</span>.<span class="property">velocity</span>[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">0</span>] += <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">0</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">1</span>] += <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">1</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">euler</span>[<span class="number">2</span>] += <span class="variable language_">this</span>.<span class="property">rotation</span>[<span class="number">2</span>] * dt;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createPointFlowers</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// get point sizes</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prm = gl.<span class="title function_">getParameter</span>(gl.<span class="property">ALIASED_POINT_SIZE_RANGE</span>);</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="property">pointSize</span> = &#123;<span class="string">&#x27;min&#x27;</span>:prm[<span class="number">0</span>], <span class="string">&#x27;max&#x27;</span>:prm[<span class="number">1</span>]&#125;;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vtxsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sakura_point_vsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> frgsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sakura_point_fsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">program</span> = <span class="title function_">createShader</span>(</span></span><br><span class="line"><span class="language-javascript">        vtxsrc, frgsrc,</span></span><br><span class="line"><span class="language-javascript">        [<span class="string">&#x27;uProjection&#x27;</span>, <span class="string">&#x27;uModelview&#x27;</span>, <span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uOffset&#x27;</span>, <span class="string">&#x27;uDOF&#x27;</span>, <span class="string">&#x27;uFade&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">        [<span class="string">&#x27;aPosition&#x27;</span>, <span class="string">&#x27;aEuler&#x27;</span>, <span class="string">&#x27;aMisc&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useShader</span>(pointFlower.<span class="property">program</span>);</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">offset</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([<span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]);</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">fader</span> = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">0.0</span>, <span class="number">10.0</span>, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// paramerters: velocity[3], rotate[3]</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">numFlowers</span> = <span class="number">1600</span>;</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">particles</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// vertex attributes &#123;position[3], euler_xyz[3], size[1]&#125;</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">dataArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(pointFlower.<span class="property">numFlowers</span> * (<span class="number">3</span> + <span class="number">3</span> + <span class="number">2</span>));</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">positionArrayOffset</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">eulerArrayOffset</span> = pointFlower.<span class="property">numFlowers</span> * <span class="number">3</span>;</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">miscArrayOffset</span> = pointFlower.<span class="property">numFlowers</span> * <span class="number">6</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">buffer</span> = gl.<span class="title function_">createBuffer</span>();</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, pointFlower.<span class="property">buffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bufferData</span>(gl.<span class="property">ARRAY_BUFFER</span>, pointFlower.<span class="property">dataArray</span>, gl.<span class="property">DYNAMIC_DRAW</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseShader</span>(pointFlower.<span class="property">program</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.<span class="property">numFlowers</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">particles</span>[i] = <span class="keyword">new</span> <span class="title class_">BlossomParticle</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">initPointFlowers</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//area</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">area</span> = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">20.0</span>, <span class="number">20.0</span>, <span class="number">20.0</span>);</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">area</span>.<span class="property">x</span> = pointFlower.<span class="property">area</span>.<span class="property">y</span> * renderSpec.<span class="property">aspect</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">fader</span>.<span class="property">x</span> = <span class="number">10.0</span>; <span class="comment">//env fade start</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">fader</span>.<span class="property">y</span> = pointFlower.<span class="property">area</span>.<span class="property">z</span>; <span class="comment">//env fade half</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">fader</span>.<span class="property">z</span> = <span class="number">0.1</span>;  <span class="comment">//near fade start</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">PI2</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tmpv3 = <span class="title class_">Vector3</span>.<span class="title function_">create</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tmpv = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> symmetryrand = <span class="keyword">function</span>(<span class="params"></span>) &#123;<span class="keyword">return</span> (<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2.0</span> - <span class="number">1.0</span>);&#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.<span class="property">numFlowers</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> tmpprtcl = pointFlower.<span class="property">particles</span>[i];</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//velocity</span></span></span><br><span class="line"><span class="language-javascript">        tmpv3.<span class="property">x</span> = <span class="title function_">symmetryrand</span>() * <span class="number">0.3</span> + <span class="number">0.8</span>;</span></span><br><span class="line"><span class="language-javascript">        tmpv3.<span class="property">y</span> = <span class="title function_">symmetryrand</span>() * <span class="number">0.2</span> - <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        tmpv3.<span class="property">z</span> = <span class="title function_">symmetryrand</span>() * <span class="number">0.3</span> + <span class="number">0.5</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vector3</span>.<span class="title function_">normalize</span>(tmpv3);</span></span><br><span class="line"><span class="language-javascript">        tmpv = <span class="number">2.0</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        tmpprtcl.<span class="title function_">setVelocity</span>(tmpv3.<span class="property">x</span> * tmpv, tmpv3.<span class="property">y</span> * tmpv, tmpv3.<span class="property">z</span> * tmpv);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//rotation</span></span></span><br><span class="line"><span class="language-javascript">        tmpprtcl.<span class="title function_">setRotation</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * <span class="title class_">PI2</span> * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * <span class="title class_">PI2</span> * <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * <span class="title class_">PI2</span> * <span class="number">0.5</span></span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//position</span></span></span><br><span class="line"><span class="language-javascript">        tmpprtcl.<span class="title function_">setPosition</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * pointFlower.<span class="property">area</span>.<span class="property">x</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * pointFlower.<span class="property">area</span>.<span class="property">y</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">symmetryrand</span>() * pointFlower.<span class="property">area</span>.<span class="property">z</span></span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//euler</span></span></span><br><span class="line"><span class="language-javascript">        tmpprtcl.<span class="title function_">setEulerAngles</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span></span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//size</span></span></span><br><span class="line"><span class="language-javascript">        tmpprtcl.<span class="title function_">setSize</span>(<span class="number">0.9</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">renderPointFlowers</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//update</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">PI2</span> = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> limit = [pointFlower.<span class="property">area</span>.<span class="property">x</span>, pointFlower.<span class="property">area</span>.<span class="property">y</span>, pointFlower.<span class="property">area</span>.<span class="property">z</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> repeatPos = <span class="keyword">function</span> (<span class="params">prt, cmp, limit</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(prt.<span class="property">position</span>[cmp]) - prt.<span class="property">size</span> * <span class="number">0.5</span> &gt; limit) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//out of area</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(prt.<span class="property">position</span>[cmp] &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                prt.<span class="property">position</span>[cmp] -= limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                prt.<span class="property">position</span>[cmp] += limit * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> repeatEuler = <span class="keyword">function</span> (<span class="params">prt, cmp</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        prt.<span class="property">euler</span>[cmp] = prt.<span class="property">euler</span>[cmp] % <span class="title class_">PI2</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(prt.<span class="property">euler</span>[cmp] &lt; <span class="number">0.0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            prt.<span class="property">euler</span>[cmp] += <span class="title class_">PI2</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.<span class="property">numFlowers</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> prtcl = pointFlower.<span class="property">particles</span>[i];</span></span><br><span class="line"><span class="language-javascript">        prtcl.<span class="title function_">update</span>(timeInfo.<span class="property">delta</span>, timeInfo.<span class="property">elapsed</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatPos</span>(prtcl, <span class="number">0</span>, pointFlower.<span class="property">area</span>.<span class="property">x</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatPos</span>(prtcl, <span class="number">1</span>, pointFlower.<span class="property">area</span>.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatPos</span>(prtcl, <span class="number">2</span>, pointFlower.<span class="property">area</span>.<span class="property">z</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatEuler</span>(prtcl, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatEuler</span>(prtcl, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">repeatEuler</span>(prtcl, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        prtcl.<span class="property">alpha</span> = <span class="number">1.0</span>;<span class="comment">//(pointFlower.area.z - prtcl.position[2]) * 0.5;</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        prtcl.<span class="property">zkey</span> = (camera.<span class="property">matrix</span>[<span class="number">2</span>] * prtcl.<span class="property">position</span>[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">                    + camera.<span class="property">matrix</span>[<span class="number">6</span>] * prtcl.<span class="property">position</span>[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">                    + camera.<span class="property">matrix</span>[<span class="number">10</span>] * prtcl.<span class="property">position</span>[<span class="number">2</span>]</span></span><br><span class="line"><span class="language-javascript">                    + camera.<span class="property">matrix</span>[<span class="number">14</span>]);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// sort</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">particles</span>.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">p0, p1</span>)&#123;<span class="keyword">return</span> p0.<span class="property">zkey</span> - p1.<span class="property">zkey</span>;&#125;);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// update data</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ipos = pointFlower.<span class="property">positionArrayOffset</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ieuler = pointFlower.<span class="property">eulerArrayOffset</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> imisc = pointFlower.<span class="property">miscArrayOffset</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pointFlower.<span class="property">numFlowers</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> prtcl = pointFlower.<span class="property">particles</span>[i];</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ipos] = prtcl.<span class="property">position</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ipos + <span class="number">1</span>] = prtcl.<span class="property">position</span>[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ipos + <span class="number">2</span>] = prtcl.<span class="property">position</span>[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">        ipos += <span class="number">3</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ieuler] = prtcl.<span class="property">euler</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ieuler + <span class="number">1</span>] = prtcl.<span class="property">euler</span>[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[ieuler + <span class="number">2</span>] = prtcl.<span class="property">euler</span>[<span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">        ieuler += <span class="number">3</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[imisc] = prtcl.<span class="property">size</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">dataArray</span>[imisc + <span class="number">1</span>] = prtcl.<span class="property">alpha</span>;</span></span><br><span class="line"><span class="language-javascript">        imisc += <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//draw</span></span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">BLEND</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//gl.disable(gl.DEPTH_TEST);</span></span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">blendFunc</span>(gl.<span class="property">SRC_ALPHA</span>, gl.<span class="property">ONE_MINUS_SRC_ALPHA</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prog = pointFlower.<span class="property">program</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useShader</span>(prog);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniformMatrix4fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uProjection</span>, <span class="literal">false</span>, projection.<span class="property">matrix</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniformMatrix4fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uModelview</span>, <span class="literal">false</span>, camera.<span class="property">matrix</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uResolution</span>, renderSpec.<span class="property">array</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uDOF</span>, <span class="title class_">Vector3</span>.<span class="title function_">arrayForm</span>(camera.<span class="property">dof</span>));</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uFade</span>, <span class="title class_">Vector3</span>.<span class="title function_">arrayForm</span>(pointFlower.<span class="property">fader</span>));</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, pointFlower.<span class="property">buffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bufferData</span>(gl.<span class="property">ARRAY_BUFFER</span>, pointFlower.<span class="property">dataArray</span>, gl.<span class="property">DYNAMIC_DRAW</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">vertexAttribPointer</span>(prog.<span class="property">attributes</span>.<span class="property">aPosition</span>, <span class="number">3</span>, gl.<span class="property">FLOAT</span>, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.<span class="property">positionArrayOffset</span> * <span class="title class_">Float32Array</span>.<span class="property">BYTES_PER_ELEMENT</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">vertexAttribPointer</span>(prog.<span class="property">attributes</span>.<span class="property">aEuler</span>, <span class="number">3</span>, gl.<span class="property">FLOAT</span>, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.<span class="property">eulerArrayOffset</span> * <span class="title class_">Float32Array</span>.<span class="property">BYTES_PER_ELEMENT</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">vertexAttribPointer</span>(prog.<span class="property">attributes</span>.<span class="property">aMisc</span>, <span class="number">2</span>, gl.<span class="property">FLOAT</span>, <span class="literal">false</span>, <span class="number">0</span>, pointFlower.<span class="property">miscArrayOffset</span> * <span class="title class_">Float32Array</span>.<span class="property">BYTES_PER_ELEMENT</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// doubler</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> zpos = i * -<span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">0</span>] = pointFlower.<span class="property">area</span>.<span class="property">x</span> * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">1</span>] = pointFlower.<span class="property">area</span>.<span class="property">y</span> * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">2</span>] = pointFlower.<span class="property">area</span>.<span class="property">z</span> * zpos;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uOffset</span>, pointFlower.<span class="property">offset</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">drawArrays</span>(gl.<span class="property">POINT</span>, <span class="number">0</span>, pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">0</span>] = pointFlower.<span class="property">area</span>.<span class="property">x</span> * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">1</span>] = pointFlower.<span class="property">area</span>.<span class="property">y</span> *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">2</span>] = pointFlower.<span class="property">area</span>.<span class="property">z</span> * zpos;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uOffset</span>, pointFlower.<span class="property">offset</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">drawArrays</span>(gl.<span class="property">POINT</span>, <span class="number">0</span>, pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">0</span>] = pointFlower.<span class="property">area</span>.<span class="property">x</span> *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">1</span>] = pointFlower.<span class="property">area</span>.<span class="property">y</span> * -<span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">2</span>] = pointFlower.<span class="property">area</span>.<span class="property">z</span> * zpos;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uOffset</span>, pointFlower.<span class="property">offset</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">drawArrays</span>(gl.<span class="property">POINT</span>, <span class="number">0</span>, pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">0</span>] = pointFlower.<span class="property">area</span>.<span class="property">x</span> *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">1</span>] = pointFlower.<span class="property">area</span>.<span class="property">y</span> *  <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">        pointFlower.<span class="property">offset</span>[<span class="number">2</span>] = pointFlower.<span class="property">area</span>.<span class="property">z</span> * zpos;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uOffset</span>, pointFlower.<span class="property">offset</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">drawArrays</span>(gl.<span class="property">POINT</span>, <span class="number">0</span>, pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//main</span></span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">offset</span>[<span class="number">0</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">offset</span>[<span class="number">1</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    pointFlower.<span class="property">offset</span>[<span class="number">2</span>] = <span class="number">0.0</span>;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uOffset</span>, pointFlower.<span class="property">offset</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">drawArrays</span>(gl.<span class="property">POINT</span>, <span class="number">0</span>, pointFlower.<span class="property">numFlowers</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseShader</span>(prog);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">disable</span>(gl.<span class="property">BLEND</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// effects</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//common util</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createEffectProgram</span>(<span class="params">vtxsrc, frgsrc, exunifs, exattrs</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ret = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> unifs = [<span class="string">&#x27;uResolution&#x27;</span>, <span class="string">&#x27;uSrc&#x27;</span>, <span class="string">&#x27;uDelta&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(exunifs) &#123;</span></span><br><span class="line"><span class="language-javascript">        unifs = unifs.<span class="title function_">concat</span>(exunifs);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> attrs = [<span class="string">&#x27;aPosition&#x27;</span>];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(exattrs) &#123;</span></span><br><span class="line"><span class="language-javascript">        attrs = attrs.<span class="title function_">concat</span>(exattrs);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">program</span> = <span class="title function_">createShader</span>(vtxsrc, frgsrc, unifs, attrs);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useShader</span>(ret.<span class="property">program</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">dataArray</span> = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([</span></span><br><span class="line"><span class="language-javascript">        -<span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="language-javascript">         <span class="number">1.0</span>, -<span class="number">1.0</span>,</span></span><br><span class="line"><span class="language-javascript">        -<span class="number">1.0</span>,  <span class="number">1.0</span>,</span></span><br><span class="line"><span class="language-javascript">         <span class="number">1.0</span>,  <span class="number">1.0</span></span></span><br><span class="line"><span class="language-javascript">    ]);</span></span><br><span class="line"><span class="language-javascript">    ret.<span class="property">buffer</span> = gl.<span class="title function_">createBuffer</span>();</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, ret.<span class="property">buffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bufferData</span>(gl.<span class="property">ARRAY_BUFFER</span>, ret.<span class="property">dataArray</span>, gl.<span class="property">STATIC_DRAW</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseShader</span>(ret.<span class="property">program</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> ret;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// basic usage</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// useEffect(prog, srctex(&#123;&#x27;texture&#x27;:texid, &#x27;dtxArray&#x27;:(f32)[dtx, dty]&#125;)); //basic initialize</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// gl.uniform**(...); //additional uniforms</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// drawEffect()</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// unuseEffect(prog)</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// TEXTURE0 makes src</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">useEffect</span>(<span class="params">fxobj, srctex</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> prog = fxobj.<span class="property">program</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useShader</span>(prog);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform3fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uResolution</span>, renderSpec.<span class="property">array</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(srctex != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform2fv</span>(prog.<span class="property">uniforms</span>.<span class="property">uDelta</span>, srctex.<span class="property">dtxArray</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform1i</span>(prog.<span class="property">uniforms</span>.<span class="property">uSrc</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE0</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, srctex.<span class="property">texture</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">drawEffect</span>(<span class="params">fxobj</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindBuffer</span>(gl.<span class="property">ARRAY_BUFFER</span>, fxobj.<span class="property">buffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">vertexAttribPointer</span>(fxobj.<span class="property">program</span>.<span class="property">attributes</span>.<span class="property">aPosition</span>, <span class="number">2</span>, gl.<span class="property">FLOAT</span>, <span class="literal">false</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">drawArrays</span>(gl.<span class="property">TRIANGLE_STRIP</span>, <span class="number">0</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">unuseEffect</span>(<span class="params">fxobj</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseShader</span>(fxobj.<span class="property">program</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> effectLib = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createEffectLib</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vtxsrc, frgsrc;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//common</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> cmnvtxsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fx_common_vsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//background</span></span></span><br><span class="line"><span class="language-javascript">    frgsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;bg_fsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    effectLib.<span class="property">sceneBg</span> = <span class="title function_">createEffectProgram</span>(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uTimes&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// make brightpixels buffer</span></span></span><br><span class="line"><span class="language-javascript">    frgsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fx_brightbuf_fsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    effectLib.<span class="property">mkBrightBuf</span> = <span class="title function_">createEffectProgram</span>(cmnvtxsrc, frgsrc, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// direction blur</span></span></span><br><span class="line"><span class="language-javascript">    frgsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fx_dirblur_r4_fsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    effectLib.<span class="property">dirBlur</span> = <span class="title function_">createEffectProgram</span>(cmnvtxsrc, frgsrc, [<span class="string">&#x27;uBlurDir&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//final composite</span></span></span><br><span class="line"><span class="language-javascript">    vtxsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;pp_final_vsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    frgsrc = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;pp_final_fsh&quot;</span>).<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">    effectLib.<span class="property">finalComp</span> = <span class="title function_">createEffectProgram</span>(vtxsrc, frgsrc, [<span class="string">&#x27;uBloom&#x27;</span>], <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// background</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createBackground</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//console.log(&quot;create background&quot;);</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">initBackground</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//console.log(&quot;init background&quot;);</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">renderBackground</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">disable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useEffect</span>(effectLib.<span class="property">sceneBg</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform2f</span>(effectLib.<span class="property">sceneBg</span>.<span class="property">program</span>.<span class="property">uniforms</span>.<span class="property">uTimes</span>, timeInfo.<span class="property">elapsed</span>, timeInfo.<span class="property">delta</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">drawEffect</span>(effectLib.<span class="property">sceneBg</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseEffect</span>(effectLib.<span class="property">sceneBg</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// post process</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> postProcess = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createPostProcess</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//console.log(&quot;create post process&quot;);</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">initPostProcess</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//console.log(&quot;init post process&quot;);</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">renderPostProcess</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">TEXTURE_2D</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">disable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> bindRT = <span class="keyword">function</span> (<span class="params">rt, isclear</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, rt.<span class="property">frameBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">viewport</span>(<span class="number">0</span>, <span class="number">0</span>, rt.<span class="property">width</span>, rt.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(isclear) &#123;</span></span><br><span class="line"><span class="language-javascript">            gl.<span class="title function_">clearColor</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">            gl.<span class="title function_">clear</span>(gl.<span class="property">COLOR_BUFFER_BIT</span> | gl.<span class="property">DEPTH_BUFFER_BIT</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//make bright buff</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">bindRT</span>(renderSpec.<span class="property">wHalfRT0</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useEffect</span>(effectLib.<span class="property">mkBrightBuf</span>, renderSpec.<span class="property">mainRT</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">drawEffect</span>(effectLib.<span class="property">mkBrightBuf</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseEffect</span>(effectLib.<span class="property">mkBrightBuf</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// make bloom</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> p = <span class="number">1.5</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> s = <span class="number">2.0</span> + <span class="number">1</span> * i;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">bindRT</span>(renderSpec.<span class="property">wHalfRT1</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">useEffect</span>(effectLib.<span class="property">dirBlur</span>, renderSpec.<span class="property">wHalfRT0</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform4f</span>(effectLib.<span class="property">dirBlur</span>.<span class="property">program</span>.<span class="property">uniforms</span>.<span class="property">uBlurDir</span>, p, <span class="number">0.0</span>, s, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">drawEffect</span>(effectLib.<span class="property">dirBlur</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">unuseEffect</span>(effectLib.<span class="property">dirBlur</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">bindRT</span>(renderSpec.<span class="property">wHalfRT0</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">useEffect</span>(effectLib.<span class="property">dirBlur</span>, renderSpec.<span class="property">wHalfRT1</span>);</span></span><br><span class="line"><span class="language-javascript">        gl.<span class="title function_">uniform4f</span>(effectLib.<span class="property">dirBlur</span>.<span class="property">program</span>.<span class="property">uniforms</span>.<span class="property">uBlurDir</span>, <span class="number">0.0</span>, p, <span class="number">0.0</span>, s);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">drawEffect</span>(effectLib.<span class="property">dirBlur</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">unuseEffect</span>(effectLib.<span class="property">dirBlur</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//display</span></span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">viewport</span>(<span class="number">0</span>, <span class="number">0</span>, renderSpec.<span class="property">width</span>, renderSpec.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">clear</span>(gl.<span class="property">COLOR_BUFFER_BIT</span> | gl.<span class="property">DEPTH_BUFFER_BIT</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">useEffect</span>(effectLib.<span class="property">finalComp</span>, renderSpec.<span class="property">mainRT</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">uniform1i</span>(effectLib.<span class="property">finalComp</span>.<span class="property">program</span>.<span class="property">uniforms</span>.<span class="property">uBloom</span>, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE1</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, renderSpec.<span class="property">wHalfRT0</span>.<span class="property">texture</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">drawEffect</span>(effectLib.<span class="property">finalComp</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">unuseEffect</span>(effectLib.<span class="property">finalComp</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/////</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">SceneEnv</span> = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createScene</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createEffectLib</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createBackground</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createPointFlowers</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createPostProcess</span>();</span></span><br><span class="line"><span class="language-javascript">    sceneStandBy = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">initScene</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initBackground</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initPointFlowers</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initPostProcess</span>();</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//camera.position.z = 17.320508;</span></span></span><br><span class="line"><span class="language-javascript">    camera.<span class="property">position</span>.<span class="property">z</span> = pointFlower.<span class="property">area</span>.<span class="property">z</span> + projection.<span class="property">nearfar</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">    projection.<span class="property">angle</span> = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(pointFlower.<span class="property">area</span>.<span class="property">y</span>, camera.<span class="property">position</span>.<span class="property">z</span> + pointFlower.<span class="property">area</span>.<span class="property">z</span>) * <span class="number">180.0</span> / <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2.0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Matrix44</span>.<span class="title function_">loadProjection</span>(projection.<span class="property">matrix</span>, renderSpec.<span class="property">aspect</span>, projection.<span class="property">angle</span>, projection.<span class="property">nearfar</span>[<span class="number">0</span>], projection.<span class="property">nearfar</span>[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">renderScene</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//draw</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Matrix44</span>.<span class="title function_">loadLookAt</span>(camera.<span class="property">matrix</span>, camera.<span class="property">position</span>, camera.<span class="property">lookat</span>, camera.<span class="property">up</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">enable</span>(gl.<span class="property">DEPTH_TEST</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//gl.bindFramebuffer(gl.FRAMEBUFFER, null);</span></span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, renderSpec.<span class="property">mainRT</span>.<span class="property">frameBuffer</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">viewport</span>(<span class="number">0</span>, <span class="number">0</span>, renderSpec.<span class="property">mainRT</span>.<span class="property">width</span>, renderSpec.<span class="property">mainRT</span>.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">clearColor</span>(<span class="number">0.005</span>, <span class="number">0</span>, <span class="number">0.05</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">clear</span>(gl.<span class="property">COLOR_BUFFER_BIT</span> | gl.<span class="property">DEPTH_BUFFER_BIT</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">renderBackground</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">renderPointFlowers</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">renderPostProcess</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/////</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">onResize</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">makeCanvasFullScreen</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sakura&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setViewports</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(sceneStandBy) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">initScene</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">setViewports</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    renderSpec.<span class="title function_">setSize</span>(gl.<span class="property">canvas</span>.<span class="property">width</span>, gl.<span class="property">canvas</span>.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">clearColor</span>(<span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">1.0</span>);</span></span><br><span class="line"><span class="language-javascript">    gl.<span class="title function_">viewport</span>(<span class="number">0</span>, <span class="number">0</span>, renderSpec.<span class="property">width</span>, renderSpec.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> rtfunc = <span class="keyword">function</span> (<span class="params">rtname, rtw, rth</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> rt = renderSpec[rtname];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(rt) <span class="title function_">deleteRenderTarget</span>(rt);</span></span><br><span class="line"><span class="language-javascript">        renderSpec[rtname] = <span class="title function_">createRenderTarget</span>(rtw, rth);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rtfunc</span>(<span class="string">&#x27;mainRT&#x27;</span>, renderSpec.<span class="property">width</span>, renderSpec.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rtfunc</span>(<span class="string">&#x27;wFullRT0&#x27;</span>, renderSpec.<span class="property">width</span>, renderSpec.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rtfunc</span>(<span class="string">&#x27;wFullRT1&#x27;</span>, renderSpec.<span class="property">width</span>, renderSpec.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rtfunc</span>(<span class="string">&#x27;wHalfRT0&#x27;</span>, renderSpec.<span class="property">halfWidth</span>, renderSpec.<span class="property">halfHeight</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rtfunc</span>(<span class="string">&#x27;wHalfRT1&#x27;</span>, renderSpec.<span class="property">halfWidth</span>, renderSpec.<span class="property">halfHeight</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">renderScene</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> animating = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">toggleAnimation</span>(<span class="params">elm</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    animating ^= <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(animating) <span class="title function_">animate</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(elm) &#123;</span></span><br><span class="line"><span class="language-javascript">        elm.<span class="property">innerHTML</span> = animating? <span class="string">&quot;Stop&quot;</span>:<span class="string">&quot;Start&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">stepAnimation</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(!animating) <span class="title function_">animate</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> curdate = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">    timeInfo.<span class="property">elapsed</span> = (curdate - timeInfo.<span class="property">start</span>) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="language-javascript">    timeInfo.<span class="property">delta</span> = (curdate - timeInfo.<span class="property">prev</span>) / <span class="number">1000.0</span>;</span></span><br><span class="line"><span class="language-javascript">    timeInfo.<span class="property">prev</span> = curdate;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(animating) <span class="title function_">requestAnimationFrame</span>(animate);</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">makeCanvasFullScreen</span>(<span class="params">canvas</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> b = <span class="variable language_">document</span>.<span class="property">body</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> d = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span></span><br><span class="line"><span class="language-javascript">fullw = <span class="title class_">Math</span>.<span class="title function_">max</span>(b.<span class="property">clientWidth</span> , b.<span class="property">scrollWidth</span>, d.<span class="property">scrollWidth</span>, d.<span class="property">clientWidth</span>);</span></span><br><span class="line"><span class="language-javascript">fullh = <span class="title class_">Math</span>.<span class="title function_">max</span>(b.<span class="property">clientHeight</span> , b.<span class="property">scrollHeight</span>, d.<span class="property">scrollHeight</span>, d.<span class="property">clientHeight</span>);</span></span><br><span class="line"><span class="language-javascript">canvas.<span class="property">width</span> = fullw;</span></span><br><span class="line"><span class="language-javascript">canvas.<span class="property">height</span> = fullh;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> canvas = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sakura&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">makeCanvasFullScreen</span>(canvas);</span></span><br><span class="line"><span class="language-javascript">        gl = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;experimental-webgl&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;WebGL not supported.&quot;</span> + e);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">error</span>(e);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, onResize);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setViewports</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createScene</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initScene</span>();</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    timeInfo.<span class="property">start</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">    timeInfo.<span class="property">prev</span> = timeInfo.<span class="property">start</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>();</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//set window.requestAnimationFrame</span></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span> (<span class="params">w, r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    w[<span class="string">&#x27;r&#x27;</span>+r] = w[<span class="string">&#x27;r&#x27;</span>+r] || w[<span class="string">&#x27;webkitR&#x27;</span>+r] || w[<span class="string">&#x27;mozR&#x27;</span>+r] || w[<span class="string">&#x27;msR&#x27;</span>+r] || w[<span class="string">&#x27;oR&#x27;</span>+r] || <span class="keyword">function</span>(<span class="params">c</span>)&#123; w.<span class="built_in">setTimeout</span>(c, <span class="number">1000</span> / <span class="number">60</span>); &#125;;</span></span><br><span class="line"><span class="language-javascript">&#125;)(<span class="variable language_">window</span>, <span class="string">&#x27;equestAnimationFrame&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis学习</title>
      <link href="/2020/07/08/Redis/"/>
      <url>/2020/07/08/Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a><strong>Redis</strong></h1><span id="more"></span><h2 id="一、Redis初始"><a href="#一、Redis初始" class="headerlink" title="一、Redis初始"></a>一、Redis初始</h2><h3 id="redis特性"><a href="#redis特性" class="headerlink" title="redis特性"></a>redis特性</h3><ol><li><p>速度快</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200303174922.png" alt="内存"></p><ul><li>10W OPS（每秒可以实现10万次读写 官方数字）</li><li>数据存在内存中</li><li>用C语言编程（50000 line）</li><li>单线程模型</li></ul></li><li><p>持久化（断电不丢数据）</p><ul><li>Redis所有数据保存在内存中，对数据的更新将异步地保存到磁盘上</li></ul></li><li><p>多种数据结构</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200303180006.png" alt="数据结构"></p><ul><li>BitMaps：位图</li><li>HyperLogLog：超小内存唯一值计数</li><li>GEO：地理信息定位</li><li>BitMaps、HyperLogLog本质是字符串</li></ul></li><li><p>支持多种语言（Java、PHP、python、ruby、lua、node）</p></li><li><p>功能丰富</p><ul><li>发布订阅</li><li>lua脚本</li><li>事务</li><li>pipeline</li></ul></li><li><p>简单</p><ul><li>23000 line c code redis3 集群 （核心代码）</li><li>不依赖外部库</li><li>单线程模型</li></ul></li><li><p>主从复制</p></li><li><p>高可用、分布式</p><ul><li>Redis-Sentinel（V2.8）支持高可用</li><li>Redis-Cluster（V3.0）支持分布式</li></ul></li></ol><h3 id="Redis典型应用场景"><a href="#Redis典型应用场景" class="headerlink" title="Redis典型应用场景"></a>Redis典型应用场景</h3><ol><li>缓存系统<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304092708.png" alt="缓存"> 当redis中有data时直接返回data，当redis中无data–&gt;storage,storage–&gt;appserver、storage–&gt;redis,以便下次访问直接走redis</li></ul></li><li>计数器<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304093255.png" alt="计数">转发数、评论数用缓存计数，还有视频播放数等等</li></ul></li><li>消息队列系统</li><li>排行榜</li><li>社交网络<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304093712.png" alt="img"> 粉丝数、共同关注数。。</li></ul></li><li>实时系统<ul><li>垃圾邮件系统</li></ul></li></ol><h3 id="redis安装"><a href="#redis安装" class="headerlink" title="redis安装"></a>redis安装</h3><ol><li><p>redis安装</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304094433.png" alt="安装"></li><li><strong>创建redis的软连接，方便以后升级</strong>     <code> ln -s redis-3.0.7 redis</code></li></ul></li><li><p>可执行文件说明</p><ul><li>redis-server —&gt; Redis服务器</li><li>redis-cli —&gt; redis命令行客户端</li><li>redis-benchmark —&gt; 性能测试</li><li>redis-check-aof —&gt; AOF文件修复工具</li><li>redis-check-dump —&gt; RDB文件修复工具</li><li>redis-sentinel —&gt; Sentinel服务器（2.8以后）</li></ul></li><li><p>三种启动方法</p><ul><li><p>默认启动</p><ul><li><p>redis-server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis</span><br><span class="line">netstat -antpl | grep redis</span><br><span class="line">redis-cli -h ip -p port ping</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure></li></ul></li><li><p>动态参数启动</p><ul><li><strong>端口随意指定</strong>   <code>redis-server --port 6380  </code></li></ul></li><li><p>配置文件启动</p><ul><li>redis-server configpath (configpath 配置文件的路径)</li></ul></li><li><p>比较</p><ul><li>生产环境选择配置启动</li><li>单机多实例配置文件可以用端口区分</li></ul></li></ul></li><li><p>简单的客户端连接</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304100658.png" alt="img"></li></ul></li><li><p>redis客户端返回值</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304100959.png" alt="img"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304101031.png" alt="img"></li></ul></li></ol><h3 id="redis常用配置"><a href="#redis常用配置" class="headerlink" title="redis常用配置"></a>redis常用配置</h3><ul><li>daemonize —&gt; 是否是守护进程（no|yes）</li><li>port —&gt; redis对外端口号（默认6379）</li><li>logfile —&gt; redis系统日志</li><li>dir —&gt; redis工作目录</li></ul><h2 id="二、API的理解和使用"><a href="#二、API的理解和使用" class="headerlink" title="二、API的理解和使用"></a>二、API的理解和使用</h2><h3 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h3><ul><li><p>通用命令</p><ul><li><p>keys（redis里的所有的键）<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304105306.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304173232.png" alt="img"></p></li><li><p><strong>keys命令一般不再生产环境使用</strong> <strong>keys*怎么用 1.热备从节点 2.scan</strong></p></li><li><p>dbsize（计算数据库大小） </p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304105824.png" alt="img"></p></li><li><p>exists key（键是否存在）</p></li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304110033.png" alt="img"></p><ul><li><p>del key [key …]（删除key，可以多个） </p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304110127.png" alt="img"></p></li><li><p>expire key seconds（设置过期时间） <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304110526.png" alt="img"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304110712.png" alt="img"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304110829.png" alt="img"></p></li><li><p>type key（key类型） <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304111007.png" alt="img"><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304111055.png" alt="img"></p></li><li><p><strong>时间复杂度大部分是O(1)</strong></p></li></ul></li><li><p>数据结构和内部编码</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304112932.png" alt="img"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304140640.png" alt="img"></p></li><li><p>单线程架构 <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304141413.png" alt="redis同一时间只会执行一个命令"><strong>单线程快的原因</strong></p><ul><li>纯内存</li><li>非阻塞IO<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304141813.png" alt="img"></li><li>避免线程切换和竞态消耗 <img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304142116.png" alt="img"></li></ul></li></ul><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><ul><li><p>结构和命令</p><ul><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304142451.png" alt="img"><strong>建议在100KB以内</strong></p></li><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304143253.png" alt="img"><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304143346.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200304143927.png" alt="img"><img src="https://gitee.com//zelentre/IMG/raw/master/PicGo/20200304151748.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304170522.png" alt="img"><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304170853.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171046.png" alt="img"><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304172437.png" alt="img"></p><p> <img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171152.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171244.png" alt="img"></p></li></ul></li><li><p>快速实战</p><ul><li><p>实现：记录网址每个用户个人主页的访问量？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incr userid:pageview（单线程无竞争）</span><br></pre></td></tr></table></figure></li><li><p>实现：缓存视频的基本信息（数据源在MySQL中）伪代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> VideoInfo <span class="title function_">get</span><span class="params">(<span class="type">long</span> id)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> redisPrefix + id;</span><br><span class="line">    <span class="type">VideoInfo</span> <span class="variable">videoInfo</span> <span class="operator">=</span> redis.get(redisKey);</span><br><span class="line">    <span class="keyword">if</span>(videoInfo == <span class="literal">null</span>)&#123;</span><br><span class="line">        videoInf = mysql.get(id);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        redis.set(redisKey,serialize(videoInfo));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> videoInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现：分布式id生成器 <img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304162534.png" alt="img"><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304162814.png" alt="img"></p></li></ul></li><li><p>内部编码</p></li><li><p>查漏补缺</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171507.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171550.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171732.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171823.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171858.png" alt="img"></p></li></ul></li></ul><h3 id="哈希类型"><a href="#哈希类型" class="headerlink" title="哈希类型"></a>哈希类型</h3><ul><li><p>特点</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304175609.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304175636.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304175926.png" alt="img"></p></li></ul></li><li><p>重要API</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304180239.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset user:1:info age 23</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt;  hget user:1:info age</span><br><span class="line">&quot;23&quot;</span><br><span class="line">127.0.0.1:6379&gt; hset user:1:info name ronaldo</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall user:1:info</span><br><span class="line">1) &quot;age&quot;</span><br><span class="line">2) &quot;23&quot;</span><br><span class="line">3) &quot;name&quot;</span><br><span class="line">4) &quot;ronaldo&quot;</span><br><span class="line">127.0.0.1:6379&gt; hdel user:1:info age</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall user:1:info</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line">2) &quot;ronaldo&quot;</span><br></pre></td></tr></table></figure></li><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200305103327.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hgetall user:1:info</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line">2) &quot;ronaldo&quot;</span><br><span class="line">3) &quot;age&quot;</span><br><span class="line">4) &quot;23&quot;</span><br><span class="line">127.0.0.1:6379&gt; hexists user:1:info name</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; hlen user:1:info</span><br><span class="line">(integer) 2</span><br></pre></td></tr></table></figure></li><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200305103100.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hmset user:2:info age 30 name kaka page 50</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; hlen user:2:info</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; hmget user:2:info age name</span><br><span class="line">1) &quot;30&quot;</span><br><span class="line">2) &quot;kaka&quot;</span><br></pre></td></tr></table></figure></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305112446.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hgetall user:2:info</span><br><span class="line">1) &quot;age&quot;</span><br><span class="line">2) &quot;30&quot;</span><br><span class="line">3) &quot;name&quot;</span><br><span class="line">4) &quot;kaka&quot;</span><br><span class="line">5) &quot;page&quot;</span><br><span class="line">6) &quot;50&quot;</span><br><span class="line">127.0.0.1:6379&gt; hvals user:2:info</span><br><span class="line">1) &quot;30&quot;</span><br><span class="line">2) &quot;kaka&quot;</span><br><span class="line">3) &quot;50&quot;</span><br><span class="line">127.0.0.1:6379&gt; hkeys user:2:info</span><br><span class="line">1) &quot;age&quot;</span><br><span class="line">2) &quot;name&quot;</span><br><span class="line">3) &quot;page&quot;</span><br></pre></td></tr></table></figure></li><li><p><strong>小心使用hgetall，牢记redis是单线程（耗时问题）</strong></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305114023.png" alt="img"></p></li><li><p>实现：记录网站每个用户个人主页的访问量<code>hincrby user:1:info pageview count</code></p></li><li><p>实现：缓存视频的基本信息（数据源在MySQL中）伪代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> VideoInfo <span class="title function_">get</span><span class="params">(<span class="type">long</span> id)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> redisPrefix + id;</span><br><span class="line">    Map&lt;String,String&gt; hashMap = redis.hgetAll(redisKey);</span><br><span class="line">    <span class="type">VideoInfo</span> <span class="variable">videoInfo</span> <span class="operator">=</span> transferMapToVideo(hashMap);</span><br><span class="line">    <span class="keyword">if</span>(videoInfo == <span class="literal">null</span>)&#123;</span><br><span class="line">        videoInf = mysql.get(id);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        redis.hmset(redisKey,transferVideoToMap(hashMap));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> videoInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135110.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135214.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135306.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135333.png" alt="img"></p></li></ul></li><li><p>hash vs string</p></li><li><p>查漏补缺</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135928.png" alt="img"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305135957.png" alt="img"></li></ul></li></ul><h3 id="列表类型"><a href="#列表类型" class="headerlink" title="列表类型"></a>列表类型</h3><ul><li><p>特点</p><ul><li><strong>有序、可以重复、左右两边插入弹出</strong></li></ul></li><li><p>重要API</p><ul><li><p><strong>增</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305140613.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305140650.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305140841.png" alt="img"></p></li><li><p><strong>删</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305141347.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305141420.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305141755.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305141650.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305141914.png" alt="img"></p></li><li><p><strong>查</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305142058.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305142200.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305142257.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305142400.png" alt="img"></p></li><li><p><strong>改</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305142501.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; rpush listkey a b c</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange listkey 0 -1</span><br><span class="line">1) &quot;a&quot;</span><br><span class="line">2) &quot;b&quot;</span><br><span class="line">3) &quot;c&quot;</span><br><span class="line">127.0.0.1:6379&gt; lpush listkey 0</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange listkey 0 -1</span><br><span class="line">1) &quot;0&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">3) &quot;b&quot;</span><br><span class="line">4) &quot;c&quot;</span><br><span class="line">127.0.0.1:6379&gt; rpop listkey</span><br><span class="line">&quot;c&quot;</span><br><span class="line">127.0.0.1:6379&gt; lrange listkey 0 -1</span><br><span class="line">1) &quot;0&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">3) &quot;b&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>实战</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305143135.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305143523.png" alt="img"></p></li></ul></li><li><p>查漏补缺</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305143628.png" alt="img"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305143723.png" alt="img"></li></ul></li></ul><h3 id="集合类型"><a href="#集合类型" class="headerlink" title="集合类型"></a>集合类型</h3><ul><li><p>特点</p><ul><li><strong>不能插入重复元素，<code> srem key music</code>删除元素</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305144302.png" alt="img"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305144821.png" alt="img"></li><li><strong>无序、无重复、集合间操作</strong></li></ul></li><li><p>集合内API</p><ul><li><p><strong>S开头</strong></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305150055.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305164445.png" alt="img"></p></li><li><p><strong>smembers：无序、小心使用</strong></p></li><li><p><strong>srandmember和spop：spop从集合弹出、srandmember不会破坏集合</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd user:1:follow it news his sports</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; smembers user:1:follow</span><br><span class="line">1) &quot;sports&quot;</span><br><span class="line">2) &quot;his&quot;</span><br><span class="line">3) &quot;news&quot;</span><br><span class="line">4) &quot;it&quot;</span><br><span class="line">127.0.0.1:6379&gt; spop user:1:follow </span><br><span class="line">&quot;news&quot;</span><br><span class="line">127.0.0.1:6379&gt; smembers user:1:follow</span><br><span class="line">1) &quot;sports&quot;</span><br><span class="line">2) &quot;his&quot;</span><br><span class="line">3) &quot;it&quot;</span><br><span class="line">127.0.0.1:6379&gt; scard user:1:follow</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; sismember user:1:follow entertainment</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure></li><li><p>实现：抽奖系统（can be spop）</p></li><li><p>实现：Like、赞、踩</p></li><li><p>实现：标签（同事务）</p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170048.png" alt="img"></p></li></ul></li><li><p>集合间API</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170220.png" alt="img"></li><li>实现：共同关注（sinter）</li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170414.png" alt="img"></li></ul></li></ul><h3 id="有序集合类型"><a href="#有序集合类型" class="headerlink" title="有序集合类型"></a>有序集合类型</h3><ul><li><p>特点</p><ul><li>结构<img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170705.png" alt="img"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170743.png" alt="img"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305170840.png" alt="img"></li></ul></li><li><p>重要API</p><ul><li><p><strong>以Z开头</strong></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305174533.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305174633.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305171233.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305171320.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305171437.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305172209.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305172314.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305172429.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305174255.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305174339.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd player:rank 1000 ronaldo 900 messi 800 c-ronaldo 600 kaka</span><br><span class="line">  (integer) 4</span><br><span class="line">  127.0.0.1:6379&gt; zscore player:rank kaka</span><br><span class="line">  &quot;600&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zcard player:rank</span><br><span class="line">  (integer) 4</span><br><span class="line">  127.0.0.1:6379&gt; zrank player:rank ronaldo</span><br><span class="line">  (integer) 3</span><br><span class="line">  127.0.0.1:6379&gt; zrem player:rank messi</span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; zrange player:rank 0 -1 withscores</span><br><span class="line">  1) &quot;kaka&quot;</span><br><span class="line">  2) &quot;600&quot;</span><br><span class="line">  3) &quot;c-ronaldo&quot;</span><br><span class="line">  4) &quot;800&quot;</span><br><span class="line">  5) &quot;ronaldo&quot;</span><br><span class="line">  6) &quot;1000&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zadd player:rank 800 c-ronaldo</span><br><span class="line">  (integer) 0</span><br><span class="line">  127.0.0.1:6379&gt; zadd player:rank 900 messi</span><br><span class="line">  (integer) 1</span><br><span class="line">  127.0.0.1:6379&gt; zrange player:rank 0 -1</span><br><span class="line">  1) &quot;kaka&quot;</span><br><span class="line">  2) &quot;c-ronaldo&quot;</span><br><span class="line">  3) &quot;messi&quot;</span><br><span class="line">  4) &quot;ronaldo&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zcount player:rank 700 901</span><br><span class="line">  (integer) 2</span><br><span class="line">  127.0.0.1:6379&gt; zrangebyscore player:rank 700 901</span><br><span class="line">  1) &quot;c-ronaldo&quot;</span><br><span class="line">  2) &quot;messi&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zremrangebyrank player:rank 0 1</span><br><span class="line">  (integer) 2</span><br><span class="line">  127.0.0.1:6379&gt; zrange player:rank 0 -1</span><br><span class="line">  1) &quot;messi&quot;</span><br><span class="line">  2) &quot;ronaldo&quot;</span><br><span class="line">  127.0.0.1:6379&gt; zrange player:rank 0 -1 withscores</span><br><span class="line">  1) &quot;messi&quot;</span><br><span class="line">  2) &quot;900&quot;</span><br><span class="line">  3) &quot;ronaldo&quot;</span><br><span class="line">  4) &quot;1000&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>实战</p><ul><li>实现：排行榜<img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305173811.png" alt="img"></li></ul></li><li><p>查漏补缺</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305173929.png" alt="img"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200305173949.png" alt="img"></p></li></ul></li></ul><h2 id="三、Redis客户端的使用"><a href="#三、Redis客户端的使用" class="headerlink" title="三、Redis客户端的使用"></a>三、Redis客户端的使用</h2><h3 id="Java客户端：Jedis"><a href="#Java客户端：Jedis" class="headerlink" title="Java客户端：Jedis"></a>Java客户端：Jedis</h3><ul><li><p>获取jedis</p><ul><li><p>shell（redis-cli）  Java（jedis）</p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306103814.png"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306103935.png"></p></li><li><p>Jedis直连</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.生成一个Jedis对象，这个对象负责和指定redis节点进行通信</span></span><br><span class="line">    <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="comment">// 2.jedis执行set操作</span></span><br><span class="line">    jedis.set(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>);</span><br><span class="line"><span class="comment">// 3.jedis执行get操作，value=&quot;world&quot;</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>Jedis(String host, int port, int connectionTimeout, int soTimeout)</strong></p><ul><li>host：Redis节点的所在机器的IP</li><li>port：Redis节点的端口</li><li>connectionTimeout：客户端连接超时</li><li>soTimeout：客户端读写超时</li></ul></li></ul></li><li><p>jedis的基本使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.String</span></span><br><span class="line"><span class="comment">// 输出结果：ok</span></span><br><span class="line">jedis.set(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>);</span><br><span class="line"><span class="comment">// 输出结果：world</span></span><br><span class="line">jedis.get(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="comment">// 输出结果：1</span></span><br><span class="line">jedis.incr(<span class="string">&quot;counter&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.hash</span></span><br><span class="line">jedis.hset(<span class="string">&quot;myhash&quot;</span>,<span class="string">&quot;f1&quot;</span>,<span class="string">&quot;v1&quot;</span>);</span><br><span class="line">jedis.hset(<span class="string">&quot;myhash&quot;</span>,<span class="string">&quot;f2&quot;</span>,<span class="string">&quot;v2&quot;</span>)；</span><br><span class="line"><span class="comment">// 输出结果：&#123;f1=v1, f2=v2&#125;</span></span><br><span class="line">jedis.hgetall(<span class="string">&quot;myhash&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.list</span></span><br><span class="line">jedis.rpush(<span class="string">&quot;mylist&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">jedis.rpush(<span class="string">&quot;mylist&quot;</span>,<span class="string">&quot;2&quot;</span>);</span><br><span class="line">jedis.rpush(<span class="string">&quot;mylist&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line"><span class="comment">// 输出结果：[1,2,3]</span></span><br><span class="line">jedis.lrange(<span class="string">&quot;mylist&quot;</span>,<span class="number">0</span>,-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.set</span></span><br><span class="line">jedis.sadd(<span class="string">&quot;myset&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">jedis.sadd(<span class="string">&quot;myset&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br><span class="line">jedis.sadd(<span class="string">&quot;myset&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="comment">// 输出结果：[b, a]</span></span><br><span class="line">jedis.smembers(<span class="string">&quot;myset&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.zset</span></span><br><span class="line">jedis.zadd(<span class="string">&quot;myzset&quot;</span>,<span class="number">99</span>,<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">jedis.zadd(<span class="string">&quot;myzset&quot;</span>,<span class="number">66</span>,<span class="string">&quot;peter&quot;</span>);</span><br><span class="line">jedis.zadd(<span class="string">&quot;myzset&quot;</span>,<span class="number">33</span>,<span class="string">&quot;james&quot;</span>);</span><br><span class="line"><span class="comment">// 输出结果：[[[&quot;james&quot;],33.0],[[&quot;peter&quot;],66.0],[[&quot;tom&quot;],99.0]]</span></span><br><span class="line">jedis.zrangeWithScores(<span class="string">&quot;myzset&quot;</span>,<span class="number">0</span>,-<span class="number">1</span>);</span><br></pre></td></tr></table></figure></li><li><p>jedis连接池使用</p><ul><li><p>Jedis直连</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306113555.png"></li></ul></li><li><p>Jedis连接池</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306113844.png"></li></ul></li><li><p>方案对比</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306134849.png"></li></ul></li><li><p>JedisPool使用</p><ul><li><p>初始化Jedis连接池，通常来讲JedisPool是单例的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">GenericObjectPoolConfig</span> <span class="variable">poolConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericObjectPoolConfig</span>();</span><br><span class="line"><span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(poolConfig,<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;6379&quot;</span>);</span><br><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">// 1.从连接池获取jedis对象</span></span><br><span class="line">    jedis = jedisPool.getResource();</span><br><span class="line">    <span class="comment">// 2.执行操作</span></span><br><span class="line">    jedis.set(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="comment">// Logger logger = LoggerFactory.getLogger(getClass().getName());</span></span><br><span class="line">    <span class="comment">//logger.error(e.getMessage(),e);</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jedis != <span class="literal">null</span>)</span><br><span class="line">        <span class="comment">// 如果使用JedisPool，close操作不是关闭连接，代表归还连接池</span></span><br><span class="line">        jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Jedis配置优化</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306141709.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306142536.png"></li><li>适合的maxTotal（比较难确定）<ul><li>命令平均执行时间 0.1ms &#x3D; 0.001s。</li><li>业务需要50000 QPS。</li><li>maxTotal理论值 &#x3D; 0.001*50000 &#x3D; 50个。实际值要偏大一些。</li></ul></li><li>maxTotal（需要考虑）<ul><li>业务希望redis并发量</li><li>客户端执行命令时间</li><li>redis资源：例如 nodes（例如应用个数）* maxTotal 是不能超过redis的最大连接数。（config get maxclients）</li></ul></li><li>适合的maxIdle和minIdle<ul><li>建议maxIdle &#x3D; maxTotal<ul><li>减少创建新连接的开销</li></ul></li><li>建议预热minIdle<ul><li>减少第一次启动后的新连接开销</li></ul></li></ul></li><li>常见问题<ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200306144528.png"></li></ul></li><li>解决思路<ul><li>慢查询阻塞：池子连接都被hang住。</li><li>资源池参数不合理：例如QPS高、池子小。</li><li>连接泄密（没有close()）：此类问题比较难定位，例如client list、netstat等，最重要的是代码。</li><li>DNS异常等。</li></ul></li></ul></li></ul></li></ul><h2 id="四、Redis其他功能"><a href="#四、Redis其他功能" class="headerlink" title="四、Redis其他功能"></a>四、Redis其他功能</h2><h3 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h3><ol><li><p>生命周期</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309095118.png"></li></ul></li><li><p>两个配置</p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309095543.png"></p><ul><li>slowlog-max-len<ol><li>先进先出队列</li><li>固定长度</li><li>保存在内存内</li></ol></li><li>slowlog-log-slower-than<ol><li>慢查询阈值（单位：微秒）</li><li>slowlog-log-slower-than&#x3D;0，记录所有命令</li><li>slowlog-log-slower-than&lt;0，不记录任何命令</li></ol></li><li>配置方法<ol><li>默认值<ul><li><code>config get slowlog-max-len = 128</code></li><li><code>config get slowlog-log-slower-than = 10000</code></li></ul></li><li>修改配置文件重启</li><li>动态配置<ul><li><code>config set slowlog-max-len 1000</code></li><li><code>config set slowlog-log-slower-than 1000</code></li></ul></li></ol></li></ul></li><li><p>三个命令</p><ol><li>slowlog get [n]：获取慢查询队列</li><li>slowlog len：获取慢查询队列长度</li><li>slowlog reset：清空慢查询队列</li></ol></li><li><p>运维经验</p><ol><li>slowlog-max-len不要设置过大，默认10ms，通常设置1ms</li><li>slowlog-log-slower-than不要设置国国小，通常设置1000左右</li><li>理解命令生命周期</li><li>定期持久化慢查询</li></ol></li></ol><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><ul><li><p>什么是流水线</p><ul><li><p><strong>一次网路命令通信模型</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171244.png" alt="img"></p></li><li><p><strong>批量网络命令通信模型</strong><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200304171152.png" alt="img"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309103325.png"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309103738.png"></p></li></ul></li><li><p>客户端使用</p><ul><li><p>没有pipeline</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++)&#123;</span><br><span class="line">    jedis.hset(<span class="string">&quot;hashKey:&quot;</span>+i, <span class="string">&quot;field&quot;</span>+i, <span class="string">&quot;value&quot;</span>+i);</span><br><span class="line">    <span class="comment">// 1W hset ---&gt; 50s（预估）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用pipeline</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">    <span class="type">Pipeline</span> <span class="variable">pipeline</span> <span class="operator">=</span> jedis.pipelined();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i*<span class="number">100</span>; j &lt; (i+<span class="number">1</span>)*<span class="number">100</span>; j++)&#123;</span><br><span class="line">        pipeline.hset(<span class="string">&quot;hashKey:&quot;</span>+j, <span class="string">&quot;field&quot;</span>+j, <span class="string">&quot;value&quot;</span>+j);</span><br><span class="line">    &#125;</span><br><span class="line">    pipeline.syncAndReturnAll();</span><br><span class="line">    <span class="comment">//1W hset ---&gt; 0.7s（预估）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>与原生操作对比</p><ul><li><strong>与原生相比 pipeline是非原子</strong></li></ul></li><li><p>使用建议</p><ol><li>注意每次pipeline携带数据量</li><li>pipeline每次只能作用在一个Redis节点上</li><li>M操作与pipeline区别</li></ol></li></ul><h3 id="发布订阅"><a href="#发布订阅" class="headerlink" title="发布订阅"></a>发布订阅</h3><ul><li><p>角色</p><ul><li>发布者（publisher）</li><li>订阅者（subscriber）</li><li>频道（channel）</li></ul></li><li><p>模型</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309111739.png"></li><li><strong>订阅这可以订阅多个频道</strong></li></ul></li><li><p>API</p><ul><li><p>publish</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112125.png"></li></ul></li><li><p>subscribe</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112203.png"></li></ul></li><li><p>unsubscribe</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112241.png"></li></ul></li><li><p>其他</p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112346.png"></p></li></ul></li><li><p>发布订阅与消息队列</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112429.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309112608.png"></li></ul></li></ul><h3 id="Bitmap"><a href="#Bitmap" class="headerlink" title="Bitmap"></a>Bitmap</h3><ul><li><p>位图</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309113011.png"></li></ul></li><li><p>相关命令</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309143205.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309143831.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309143926.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309144012.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309144120.png"></li></ul></li><li><p>独立用户统计</p><ol><li>使用set和Bitmap</li><li>1亿用户，5千万独立</li></ol><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309144549.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309144651.png"></li><li><strong>使用经验</strong><ul><li><ol><li>type&#x3D;string，最大512MB</li><li>注意setbit时的偏移量，可能有较大耗时</li><li>位图不是绝对好。</li></ol></li></ul></li></ul></li></ul><h3 id="HyperLogLog"><a href="#HyperLogLog" class="headerlink" title="HyperLogLog"></a>HyperLogLog</h3><ul><li><p>新的数据结构？</p><ol><li><p>基于HyperLogLog算法：极小空间完成独立数量统计</p></li><li><p>本质还是字符串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; type hyperloglog_key</span><br><span class="line">string</span><br></pre></td></tr></table></figure></li></ol></li><li><p>三个命令</p><ol><li><code>pfadd key element [element ...]</code>：向hyperloglog添加元素</li><li><code>pfcount key [key ...]</code>：计算hyperloglog的独立总数</li><li><code>pfmerge destkey sourcekey [sourcekey ...]</code>：合并多个hyperloglog</li></ol></li><li><p>内存消耗</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309151432.png"></li></ul></li><li><p>使用经验</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309151656.png"></li></ul></li></ul><h3 id="GEO"><a href="#GEO" class="headerlink" title="GEO"></a>GEO</h3><ul><li><p>GEO是什么</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309151922.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152004.png"></li></ul></li><li><p>5个城市经纬度</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152029.png"></li></ul></li><li><p>相关命令</p><ul><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152309.png"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152422.png"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152513.png"></p></li><li><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152538.png"></p><p><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309152646.png"></p></li></ul></li><li><p>相关说明</p><ol><li>since 3.2+</li><li>type geoKey &#x3D; zset</li><li>没有删除API：zrem key member</li></ol></li></ul><h2 id="五、Redis持久化的取舍和选择"><a href="#五、Redis持久化的取舍和选择" class="headerlink" title="五、Redis持久化的取舍和选择"></a>五、Redis持久化的取舍和选择</h2><h3 id="持久化的作用"><a href="#持久化的作用" class="headerlink" title="持久化的作用"></a>持久化的作用</h3><ul><li>什么是持久化<ul><li>redis所有数据保持在内存中，对数据的更新将异步地保存到磁盘上</li></ul></li><li>持久化的实现方式<ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309154132.png"></li></ul></li></ul><h3 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h3><ul><li><p>什么是RDB</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309154714.png"></li></ul></li><li><p>触发机制-主要三种方式</p><ul><li><p>save（同步）</p><ul><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309155136.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309155204.png"></li><li><img src="https://gitee.com/zelentre/IMG/raw/master/PicGo/20200309155246.png"></li></ul></li><li><p>bgsave（异步）</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309164147.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309164246.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309164333.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309164353.png"></li></ul></li><li><p>自动</p><ul><li><p><strong>自动生成RDB</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309165036.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置文件</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309165940.png"></p></li></ul></li></ul></li><li><p>触发机制-不容忽视方式</p><ol><li>全量复制</li><li>debug reload</li><li>shutdown</li></ol></li><li><p>总结</p><ol><li>RDB是Redis内存到硬盘的快照，用于持久化</li><li>save通常会阻塞Redis</li><li>bgsave不会阻塞Redis，但是会fork新进程</li><li>save自动配置满足任一就会被执行</li><li>有些触发机制不容忽视</li></ol></li></ul><h3 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h3><ul><li>RDB现存问题<ul><li>耗时、耗性能<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309173446.png"></li></ul></li><li>不可控、丢失数据<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309173612.png"></li></ul></li></ul></li><li>什么是AOF<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309173720.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309173807.png"></li></ul></li><li>AOF三种策略<ul><li>always<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309174020.png"></li></ul></li><li>everysec<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309174135.png"></li></ul></li><li>no<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309174219.png"></li></ul></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309174304.png"></li></ul></li><li>AOF重写<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309174657.png"></li><li>作用：<ul><li>减少硬盘占用量</li><li>加速恢复速度</li></ul></li><li>AOF重写实现两种方式<ul><li>bgrewriteaof<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309175535.png"></li></ul></li><li>AOF重写配置<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309175607.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309180145.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309180238.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309180304.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200309180622.png"></li></ul></li></ul></li></ul></li></ul><h3 id="RDB和AOF的抉择"><a href="#RDB和AOF的抉择" class="headerlink" title="RDB和AOF的抉择"></a>RDB和AOF的抉择</h3><ul><li><p>RDB和AOF比较</p><table><thead><tr><th align="center">命令</th><th align="center">RDB</th><th align="center">AOF</th></tr></thead><tbody><tr><td align="center">启动优先级</td><td align="center">低</td><td align="center">高</td></tr><tr><td align="center">体积</td><td align="center">小</td><td align="center">大</td></tr><tr><td align="center">恢复速度</td><td align="center">快</td><td align="center">慢</td></tr><tr><td align="center">数据安全性</td><td align="center">丢数据</td><td align="center">根据策略决定</td></tr><tr><td align="center">轻重</td><td align="center">重</td><td align="center">轻</td></tr></tbody></table></li><li><p>RDB最佳策略</p><ul><li>“关”</li><li>集中管理</li><li>主从，从开？</li></ul></li><li><p>AOF最佳策略</p><ul><li>“开”：缓存和存储</li><li>AOF重写集中管理</li><li>everysec</li></ul></li><li><p>最佳策略</p><ul><li>小分片</li><li>缓存或者存储</li><li>监控（硬盘、内存、负载、网络）</li><li>足够的内存</li></ul></li></ul><h2 id="六、常见的持久化开发运维问题"><a href="#六、常见的持久化开发运维问题" class="headerlink" title="六、常见的持久化开发运维问题"></a>六、常见的持久化开发运维问题</h2><h3 id="fork操作"><a href="#fork操作" class="headerlink" title="fork操作"></a>fork操作</h3><ol><li>同步操作</li><li>与内存量息息相关：内存越大,耗时越长（与机器类型有关）</li><li>info：latest_fork_usec</li></ol><ul><li>改善fork<ol><li>优先使用物理机或者高效支持fork操作的虚拟化技术</li><li>控制Redis实例最大可用内存：maxmemory</li><li>合理配置Linux内存分配策略：vm.overcommit_memory &#x3D; 1</li><li>降低fork频率：例如放宽AOF重写自动触发时机，不必要的全量复制</li></ol></li></ul><h3 id="子进程开销和优化"><a href="#子进程开销和优化" class="headerlink" title="子进程开销和优化"></a>子进程开销和优化</h3><ol><li>CPU：<ul><li>开销：RDB和AOF文件生成，属于CPU密集型</li><li>优化：不做CPU绑定，不和CPU密集型部署</li></ul></li><li>内存<ul><li>开销：fork内存开销，copy-on-write</li><li>优化：echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled</li></ul></li><li>硬盘<ul><li>开销：AOF和RDB文件写入，可以结合iostat，iotop分析</li><li>优化：<ol><li>不要和高硬盘负载服务部署一起：存储服务、消息队列等</li><li>no-appendfsync-on-rewrite &#x3D; yes</li><li>根据写入量决定磁盘类型：例如ssd</li><li>单机多实例持久化文件目录可以考虑分盘</li></ol></li></ul></li></ol><h3 id="AOF追加阻塞"><a href="#AOF追加阻塞" class="headerlink" title="AOF追加阻塞"></a>AOF追加阻塞</h3><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310114122.png"></li><li>AOF阻塞定位<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310134905.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310134922.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310134939.png"></li></ul></li></ul><h2 id="七、Redis复制的原理与优化"><a href="#七、Redis复制的原理与优化" class="headerlink" title="七、Redis复制的原理与优化"></a>七、Redis复制的原理与优化</h2><h3 id="什么是主从复制"><a href="#什么是主从复制" class="headerlink" title="什么是主从复制"></a>什么是主从复制</h3><ul><li><p>单机问题：</p><ul><li>机器故障</li><li>容量瓶颈</li><li>QPS瓶颈</li></ul></li><li><p>主从复制的作用</p><ul><li><p><strong>一主一从</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310140307.png"></p></li><li><p><strong>一主多从</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310140451.png"></p></li><li><p><strong>作用</strong></p><ul><li>数据副本</li><li>扩展读性能</li></ul></li><li><p><strong>总结</strong></p><ol><li>一个master可以有多个slave</li><li>一个slave只能有一个master</li><li>数据流向是单向的，master到slave</li></ol></li></ul></li></ul><h3 id="复制的配置"><a href="#复制的配置" class="headerlink" title="复制的配置"></a>复制的配置</h3><ul><li><p>slaveof命令</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310141243.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310141458.png"></li></ul></li><li><p>配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slaveof ip port</span><br><span class="line">slave-read-only yes</span><br></pre></td></tr></table></figure></li><li><p><strong>比较</strong></p><table><thead><tr><th align="center">方式</th><th align="center">命令</th><th align="center">配置</th></tr></thead><tbody><tr><td align="center">优点</td><td align="center">无需重启</td><td align="center">统一配置</td></tr><tr><td align="center">缺点</td><td align="center">不便于管理</td><td align="center">需要重启</td></tr></tbody></table></li></ul><h3 id="全量复制和部分复制"><a href="#全量复制和部分复制" class="headerlink" title="全量复制和部分复制"></a>全量复制和部分复制</h3><ul><li><p><strong>全量复制</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310152018.png"></p></li><li><p><strong>全量复制开销</strong></p><ol><li>bgsave时间</li><li>RDB文件网络传输时间</li><li>从节点清空数据时间</li><li>从节点加载RDB的时间</li><li>可能的AOF重写时间</li></ol></li><li><p><strong>部分复制</strong></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310160012.png"></p></li></ul><h3 id="故障处理"><a href="#故障处理" class="headerlink" title="故障处理"></a>故障处理</h3><ul><li><p><strong>主从结构-故障转移</strong></p><ul><li><p>slave宕掉</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310160740.png"></p></li><li><p>master宕掉</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310160902.png"></p></li></ul></li></ul><h3 id="开发运维常见问题"><a href="#开发运维常见问题" class="headerlink" title="开发运维常见问题"></a>开发运维常见问题</h3><ol><li><p>读写分离</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310161840.png"></p><ol><li>读流量分摊到从节点</li><li>可能遇到的问题：<ul><li>复制数据延迟（发生阻塞）</li><li>读到过期数据<ul><li><a href="https://blog.csdn.net/zmflying8177/article/details/104215634">删除过期数据的策略</a><ol><li>懒惰性策略（操作key时才会检查key是否过期，过期才删除，然后返回null）</li><li>定时删除策略（定时扫描所有键值对，发现过期数据立即删除）</li></ol></li></ul></li><li>从节点故障</li></ul></li></ol></li><li><p>主从配置不一致</p><ol><li>例如maxmemory不一致：丢失数据</li><li>例如数据结构优化参数（例如hash-max-ziplist-entries）：内存不一致</li></ol></li><li><p>规避全量复制</p><ol><li>第一次全量复制<ul><li>第一次不可避免</li><li>小主节点、低峰</li></ul></li><li>节点运行ID不匹配<ul><li>主节点重启（运行ID变化）</li><li>故障转移，例如哨兵或集群</li></ul></li><li>复制积压缓冲区不足<ul><li>网络中断，部分复制无法满足</li><li>增大复制缓冲区配置rel_backlog_size，网络“增强”</li></ul></li></ol></li><li><p>规避复制风暴</p><ol><li><p>单主节点复制风暴：</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310173149.png"></p><ul><li>问题：主节点重启，多从节点复制</li><li>解决：更换复制拓扑</li></ul></li><li><p>单机器复制风暴</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310173236.png"></p><ul><li>机器宕机后，大量全量复制</li><li>主节点分散多机器</li></ul></li></ol></li></ol><h2 id="八、Redis-Sentinel"><a href="#八、Redis-Sentinel" class="headerlink" title="八、Redis Sentinel"></a>八、Redis Sentinel</h2><h3 id="主从复制高可用？"><a href="#主从复制高可用？" class="headerlink" title="主从复制高可用？"></a>主从复制高可用？</h3><ul><li><p>手动故障转移</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200310160902.png"></p></li><li><p>写能力和存储能力受限</p></li></ul><h3 id="架构说明"><a href="#架构说明" class="headerlink" title="架构说明"></a>架构说明</h3><ul><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311092857.png"></p></li><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311093130.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311093208.png"></p></li></ul><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><ol><li>配置开启主从节点<ul><li>主节点</li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311162522.png"></li><li>从节点</li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311162637.png"></li><li>主要配置</li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311162829.png"></li></ul></li><li>配置开启sentinel监控主节点。（sentinel是特殊的redis）</li><li>实际应该多机器</li><li>详细配置节点</li></ol><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><ul><li><p>请求流程</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311165122.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311165212.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311165229.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311165336.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200311165359.png"></li><li><strong>客户端接入流程：</strong><ol><li>Sentinel地址集合</li><li>masterName</li><li>不是代理模式</li></ol></li></ul></li><li><p>jedis</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">JedisSentinelPool</span> <span class="variable">sentinelPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisSentinelPool</span>(masterName,sentinelSet,poolConfig,timeout);</span><br><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">// jedis command</span></span><br><span class="line">    jedis = sentinelPool.getResource();</span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    logger.error(e.getMessage(),e);</span><br><span class="line">&#125; <span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(jedis != <span class="literal">null</span>)&#123;</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><ul><li><p>故障转移演练</p><ol><li><p>客户端高可用观察</p></li><li><p>服务端日志分析：数据节点和sentinel节点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span></span><br><span class="line">        LoggerFactory.getLogger(RedisSentinelTest.class);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">masterName</span> <span class="operator">=</span> <span class="string">&quot;myMaster&quot;</span>;</span><br><span class="line">    Set&lt;String&gt; sentinels = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    sentinels.add(<span class="string">&quot;127.0.0.1:26379&quot;</span>);</span><br><span class="line">    sentinels.add(<span class="string">&quot;127.0.0.1:26380&quot;</span>);</span><br><span class="line">    sentinels.add(<span class="string">&quot;127.0.0.1:26381&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">JedisSentinelPool</span> <span class="variable">jedisSentinelPool</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">        <span class="title class_">JedisSentinelPool</span>(masterName,sentinels);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">        counter++;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = jedisSentinelPool.getResource();</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">100000</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&quot;k-&quot;</span> + index;</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> <span class="string">&quot;v-&quot;</span> + index;</span><br><span class="line">            jedis.set(key,value);</span><br><span class="line">            <span class="keyword">if</span>(counter % <span class="number">100</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                logger.info(<span class="string">&quot;&#123;&#125; value is &#123;&#125;&quot;</span>, key, jedis.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">            TimeUnit.MILLISECONDS.sleep(<span class="number">10</span>);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            logger.error(e.getMessage(),e);</span><br><span class="line">         &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(jedis != <span class="literal">null</span>)&#123;</span><br><span class="line">                jedis.close();&#125;</span><br><span class="line">         &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>三个定时任务</p><ol><li><p>每10秒每个sentinel对master和slave执行info</p><ul><li>发现slave节点</li><li>确认主从关系</li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200312113712.png"></p></li><li><p>每2秒每个sentinel通过master节点的channel交换信息（pub&#x2F;sub）</p><ul><li>通过 <code>_sentinel_:hello</code>频道交换</li><li>交换对节点的“看法”和自身信息</li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200312134718.png"></p></li><li><p>每1秒每个sentinel对其他sentinel和redis执行ping</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200312153224.png"></p></li></ol></li><li><p>主观下线和客观下线</p><ul><li><p>配置示例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sentinel monitor &lt;masterName&gt; &lt;ip&gt; &lt;port&gt; &lt;quorum&gt;</span><br><span class="line">sentinel monitor myMaster 127.0.0.1 6379 2</span><br><span class="line">sentinel down-after-milliseconds &lt;masterName&gt; &lt;timeout&gt;</span><br><span class="line">sentinel down-after-milliseconds myMaster 30000</span><br></pre></td></tr></table></figure></li><li><p>主观下线：每个sentinel节点对Redis节点失败的“偏见”</p></li><li><p>客观下线：所有sentinel节点对Redis节点失败“达成共识”（超过quorum个统一）</p><p><code>sentinel is-master-down-by-addr</code></p></li></ul></li><li><p>领导者选举</p><ul><li>原因：只有一个sentinel节点完成故障转移</li><li>选举：通过<code>sentinel is-master-down-by-addr</code>命令都希望成为领导者<ol><li>每个做主观下线的sentinel节点向其他sentinel节点发送命令，要求将它设置为领导者</li><li>收到命令的sentinel节点如果没有同意通过其他sentinel节点发送的命令，那么将同意该请求，否则拒绝</li><li>如果该sentinel节点发现自己的票数已经超过sentinel集合半数且超过quorum，那么它将成为领导者</li><li>如果此过程有多个sentinel节点成为了领导者，那么将等待一段时间重新进行选举</li></ol></li></ul></li><li><p>故障转移（sentinel领导者节点完成）</p><ol><li>从slave节点中选出一个“合适”节点作为新的master节点</li><li>对上面的slave节点执行slaveof no one 命令让其成为master节点</li><li>向剩余的slave节点发送命令，让它们成为新master节点的slave节点，复制规则和parallel-syncs参数有关</li><li>更新对原来master节点配置为slave，并保持着对其“关注”，当其恢复后命令它去复制新的master节点</li></ol></li><li><p>选择“合适的”slave节点</p><ol><li>选择slave-priority（slave节点优先级）最高的slave节点，如果存在则返回，不存在则继续</li><li>选择复制偏移量最大的slave节点（复制的最完整），如果存在则返回，不存在则继续</li><li>选择runId最小的slave节点</li></ol></li></ul><h3 id="开发运维常见问题-1"><a href="#开发运维常见问题-1" class="headerlink" title="开发运维常见问题"></a>开发运维常见问题</h3><ul><li><p>节点运维</p><ul><li><p>节点下线</p><ul><li><p>主节点</p><p><code>sentinel failover &lt;masterName&gt;</code></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200312165933.png"></p></li><li><p>从节点：临时下线还是永久下线，例如是否做一些清理工作，但是要考虑读写分离的情况</p></li><li><p>sentinel节点：类同于从节点</p></li><li><p>机器下线：例如过保等情况</p></li><li><p>机器性能不足：例如CPU、内存、硬盘、网络等</p></li><li><p>机器自身故障：例如服务不稳定等</p></li></ul></li><li><p>节点上线</p><ul><li>主节点：sentinel failover进行替换</li><li>从节点：slaveof即可，sentinel节点可以感知</li><li>sentinel节点：参考其他sentinel节点启动即可</li></ul></li></ul></li><li><p>高可用读写分离</p><ul><li>从节点的作用<ol><li>副本：高可用的基础</li><li>扩展：读能力</li></ol></li><li>三个“消息”<ul><li>+switch-master：切换主节点（从节点晋升主节点）</li><li>+convert-to-slave：切换从节点（原主节点降为从节点）</li><li>+sdown：主观下线</li></ul></li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>redis sentinel是redis的高可用实现方案：故障发现、故障自动转移、配置中心、客户端通知</li><li>redis sentinel从redis2.8版本开始才正式生产可用，之前版本生产不可用</li><li>尽可能在不同物理机上部署redis sentinel所有节点</li><li>redis sentinel中的sentinel节点个数应该大于等于3且最好为奇数</li><li>redis sentinel中的数据节点与普通数据节点没有区别</li><li>客户端初始化时连接的是sentinel节点集合，不再是具体的redis节点，但sentinel只是配置中心不是代理</li><li>redis sentinel 通过三个定时任务实现了sentinel节点对于主节点、从节点、其余sentinel节点的监控</li><li>redis sentinel在对节点做失败判定时分为主观下线和客观下线</li><li>看懂redis sentinel故障转移日志对于redis sentinel以及问题排查非常有帮助</li><li>redis sentinel实现读写分离高可用可以依赖sentinel节点的消息通知，获取redis数据节点的状态变化</li></ul><h2 id="九、Redis-Cluster"><a href="#九、Redis-Cluster" class="headerlink" title="九、Redis Cluster"></a>九、Redis Cluster</h2><h3 id="呼唤集群"><a href="#呼唤集群" class="headerlink" title="呼唤集群"></a>呼唤集群</h3><ul><li><p><strong>扩容最好翻倍扩容</strong></p></li><li><p>使用集群原因：</p><ol><li>并发量：最大10W&#x2F;s，业务需求更多呢</li><li>数据量：机器内存有限，业务需求大呢</li></ol></li><li><p>解决方法：</p><ul><li>配置强悍的机器（×）</li><li>分布式：简单的认为 加机器</li></ul></li><li><p>集群：规模化需求</p><ul><li>并发量：QPS</li><li>数据量</li></ul></li></ul><h3 id="数据分布"><a href="#数据分布" class="headerlink" title="数据分布"></a>数据分布</h3><ul><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313101436.png"></p></li><li><p>顺序分布和哈希分布</p><ul><li><p>顺序分布</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313110955.png"></p></li><li><p>哈希分布（例如节点取模）</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313111241.png"></p></li></ul></li><li><p>数据分布对比</p><table><thead><tr><th align="center">分布方式</th><th align="center">特点</th><th align="center">典型产品</th></tr></thead><tbody><tr><td align="center">哈希分布</td><td align="center">数据分散度高  键值分布业务无关  无法顺序访问  支持批量操作</td><td align="center">一致性哈希Memcache Redis Cluster 其他缓存产品</td></tr><tr><td align="center">顺序分布</td><td align="center">数据分散度易倾斜  键值业务相关  可顺序访问  支持批量操作</td><td align="center">BigTable   HBase</td></tr></tbody></table></li><li><p>哈希分布</p><ul><li><p>节点取余分区：hash(Key)%nodes</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313111241.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313134742.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313135502.png"></p></li><li><p>节点取余：</p><ul><li>客户端分片：哈希+取余</li><li>节点伸缩：数据节点关系变化，导致数据迁移</li><li>迁移数量和添加节点数量有关：建议翻倍扩容</li></ul></li><li><p>一致性哈希分区</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313140707.png"></p><ul><li><p>n1 和 n2之间的key的数据将偏移到n5</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313141030.png"></p></li><li><p>一致性哈希</p><ul><li>客户端分片：哈希+顺时针（优化取余）</li><li>节点伸缩：只影响邻近节点，但是还是有数据迁移</li><li>翻倍伸缩：保证最小迁移数据和负载均衡</li></ul></li></ul></li><li><p>虚拟槽分区</p><ul><li><p>预设虚拟槽：每个槽映射一个数据子集，一般比节点数大</p></li><li><p>良好的哈希函数：例如CRC16</p></li><li><p>服务端管理节点、槽、数据：例如Redis Cluster</p></li><li><p>虚拟槽分配</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313142046.png"></p></li></ul></li></ul></li></ul><h3 id="搭建集群"><a href="#搭建集群" class="headerlink" title="搭建集群"></a>搭建集群</h3><ul><li><p>基本架构</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313142530.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313142550.png"></li></ul></li><li><p>Redis Cluster架构</p><ul><li><p>节点</p><ul><li><p>cluster-enabled:yes  即集群启动</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313142550.png"></p></li></ul></li><li><p>meet</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313151106.png"></p></li><li><p>指派槽</p><ul><li><p>客户端与指派槽</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313151255.png"></p></li></ul><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313151145.png"></p></li><li><p>复制</p></li><li><p>特性</p><ul><li>复制</li><li>高可用</li><li>分片</li></ul></li></ul></li><li><p>Redis Cluster安装</p><ul><li><p>原生命令安装</p><ol><li><p>配置开启节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">port $&#123;port&#125;</span><br><span class="line">daemonize yes</span><br><span class="line">dir &quot;/opt/redis/redis/data/&quot;</span><br><span class="line">dbfilename &quot;dump-$&#123;port&#125;.db&quot;</span><br><span class="line">logfile &quot;$&#123;port&#125;.log&quot;</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes-$&#123;port&#125;.conf</span><br><span class="line"></span><br><span class="line">redis-server redis-7000.conf</span><br><span class="line">redis-server redis-7001.conf</span><br><span class="line">redis-server redis-7002.conf</span><br><span class="line">redis-server redis-7003.conf</span><br><span class="line">redis-server redis-7004.conf</span><br><span class="line">redis-server redis-7005.conf</span><br></pre></td></tr></table></figure><ul><li><p>cluster节点主要配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cluster-enabled yes</span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line">cluster-config-file &quot;nodes.conf&quot;</span><br><span class="line">cluster-require-full-coverage yes</span><br></pre></td></tr></table></figure></li></ul></li><li><p>meet</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313161429.png"></li></ul></li><li><p>指派槽</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313161916.png"></li></ul></li><li><p>主从</p><ul><li><p>设置主从</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200313162242.png"></li></ul></li></ul></li><li><p>总结</p><ul><li>理解redis cluster架构</li></ul></li></ol></li><li><p>生产环境不使用</p></li><li><p>官方工具安装</p><ul><li><p>可以查看这个博客<a href="https://www.cnblogs.com/cqming/p/11191079.html">Redis-cluster集群</a></p></li><li><p>高效、准确</p></li></ul></li><li><p>生产环境可以使用</p></li><li><p>其他：可视化部署</p></li></ul></li></ul><h3 id="集群伸缩"><a href="#集群伸缩" class="headerlink" title="集群伸缩"></a>集群伸缩</h3><ul><li><p>伸缩原理</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316135757.png"></li></ul></li><li><p>扩容集群</p><ul><li><p>准备新节点</p><ul><li><p>集群模式</p></li><li><p>配置和其他节点统一</p></li><li><p>启动后是孤儿节点</p><p><code>redis-server conf/redis-6385.conf</code></p><p><code>redis-server conf/redis-6386.conf</code></p></li></ul></li><li><p>加入集群</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316140616.png"></li><li>作用：<ul><li>为它迁移槽和数据实习扩容</li><li>作为从节点负责故障转移</li></ul></li><li>加入集群-redis-trib.rb<ul><li><code>redis-trib.rb add-node new_host:new_port existing_host:existing_port --slave --master-id &lt;arg&gt;</code></li><li><code>redis-trib.rb add-node 127.0.0.1:6385 127.0.0.1:6379</code></li><li>建议使用redis-trib.rb能够避免新节点已经加入了其他集群，造成故障</li></ul></li></ul></li><li><p>迁移槽和数据</p><ul><li>槽迁移计划<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316143153.png"></li></ul></li><li>迁移数据<ol><li>对目标节点发送：<code>cluster setslot &#123;slot&#125; importing &#123;sourceNodeId&#125;</code>命令，让目标节点准备导入槽的数据</li><li>对源节点发送：<code>cluster setslot &#123;slot&#125; migrating &#123;targetNodeId&#125;</code>命令，让源节点准备迁出槽的数据</li><li>源节点循环执行<code>cluster getkeysinslot &#123;slot&#125; &#123;count&#125;</code>命令，每次获取count个属于槽的键</li><li>在源节点上执行<code>migrate &#123;targetId&#125; &#123;targetPort&#125; key 0 &#123;timeout&#125;</code>命令把指定key迁移</li><li>重复执行步骤3~4知道槽下所有的键数据迁移到目标节点</li><li>向集群内所有主节点发送<code>cluster setslot &#123;slot&#125; node &#123;tartgetNodeId&#125;</code>命令，通知槽分配给目标节点 </li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316144823.png"></li></ol></li><li>添加从节点</li></ul></li></ul></li><li><p>缩容集群</p></li></ul><h3 id="客户端路由"><a href="#客户端路由" class="headerlink" title="客户端路由"></a>客户端路由</h3><ul><li><p>moved重定向</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316152159.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316152247.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316152428.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316152657.png"></li></ul></li><li><p>ask重定向</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316152940.png"></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316153110.png"></li><li>moved和ask<ul><li>两者都是客户单重定向</li><li>moved：槽已经确定迁移</li><li>ask：槽还在迁移中</li></ul></li></ul></li><li><p>smart客户端</p><ul><li><p>smart客户端原理（追求性能）</p><ol><li>从集群中选一个可运行节点，使用cluster slots初始化槽和节点映射</li><li>将cluster slots的结果映射到本地，为每个节点创建JedisPool</li><li>准备执行命令<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316154352.png"></li></ul></li></ol></li><li><p>smart客户端使用：JedisCluster</p><ul><li><p>JedisCluster基本使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;HostAndPort&gt; nodeList = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;HostAndPort&gt;();</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT1));</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT2));</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT3));</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT4));</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT5));</span><br><span class="line">nodeList.add(<span class="keyword">new</span> <span class="title class_">HostAndPort</span>(HOST1,PORT6));</span><br><span class="line"><span class="type">JedisCluster</span> <span class="variable">redisCluster</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisCluster</span>(nodeList,timeout,poolConfig);</span><br><span class="line">redisCluster.command ...</span><br></pre></td></tr></table></figure><ul><li>使用技巧：<ol><li>单例：内置了所有节点的连接池</li><li>无需手动接环连接池</li><li>合理设置commons-pool</li></ol></li></ul></li><li><p>整合spring</p><ul><li><a href="https://github.com/zelentre/tem/blob/master/src/main/java/com/zelentre/jedis/JedisClusterFactory.java">jedisCluster</a></li></ul></li><li><p>多节点命令实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String, JedisPool&gt; jedisPoolMap = jedisCluster.getClusterNodes();</span><br><span class="line"><span class="keyword">for</span>(Entry&lt;String,JedisPool&gt; entry : jedisPoolMap.entrySet())&#123;</span><br><span class="line">    <span class="comment">//获取每个节点的Jedis连接</span></span><br><span class="line">    <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> entry.getValue.getResource();</span><br><span class="line">    <span class="comment">//只删除主节点数据</span></span><br><span class="line">    <span class="keyword">if</span>(!isMaster(jedis))&#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//finally close</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>批量命令实现</p><ul><li><p>mget mset必须在一个槽上</p></li><li><p>四种批量优化的方法</p><ol><li><p>串行mget</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316171442.png"></li></ul></li><li><p>串行IO</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316171622.png"></li></ul></li><li><p>并行IO</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316171711.png"></li></ul></li><li><p>hash_tag</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200316172031.png"></li></ul></li><li><p>总结</p><table><thead><tr><th align="center">方案</th><th align="center">优点</th><th align="center">缺点</th><th align="center">网络IO</th></tr></thead><tbody><tr><td align="center">串行mget</td><td align="center">编程简单  少量keys满足需求</td><td align="center">大量keys请求延迟严重</td><td align="center">O(keys)</td></tr><tr><td align="center">串行IO</td><td align="center">编程简单  少量节点满足需求</td><td align="center">大量node延迟严重</td><td align="center">O(nodes)</td></tr><tr><td align="center">并行IO</td><td align="center">利用并行特性  延迟取决于最慢的节点</td><td align="center">编程复杂  超时定位问题难</td><td align="center">O(max_slow(node))</td></tr><tr><td align="center">hash_tag</td><td align="center">性能最高</td><td align="center">读写增加tag成本  tag分布易出现数据倾斜</td><td align="center">O(1)</td></tr></tbody></table></li></ol></li></ul></li></ul></li></ul></li></ul><h3 id="故障转移"><a href="#故障转移" class="headerlink" title="故障转移"></a>故障转移</h3><ul><li>故障发现<ul><li>通过ping&#x2F;pong消息实现故障发现：不需要sentinel</li><li>主观下线<ul><li>定义：某个节点认为另一个节点不可用，“偏见”</li><li>流程：<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317091147.png"></li></ul></li><li>客观下线<ul><li>定义：当半数以上持有槽的主节点都标记某几点主观下线</li><li>逻辑流程：<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317091350.png"></li><li>流程：<img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317091506.png"><ul><li>通知集群内所有节点标记故障节点为客观下线</li><li>通知故障节点的从节点触发故障转移流程</li></ul></li></ul></li></ul></li><li>故障恢复<ul><li>资格检查<ul><li>每个从节点检查与故障主节点的断线时间</li><li>超过<code>cluster-node-timeout</code>*<code>cluster-slave-validity-factor</code>取消资格（都是默认值得话为150s）</li><li>cluster-slave-validity-factor：默认是10</li></ul></li><li>准备选举时间<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317094316.png"></li></ul></li><li>选举投票<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317094419.png"></li></ul></li><li>替换主节点<ol><li>当前从节点取消复制变为主节点（slave no one）</li><li>执行clusterDelSlot撤销故障主节点负责的槽，并执行clusterAddSlot把这些槽分配给自己</li><li>向集群广播自己的pong消息，表明已经替换了故障从节点</li></ol></li></ul></li><li>故障转移演练<ul><li>步骤：<ol><li>执行kill -9节点模拟宕机</li><li>观察客户端故障恢复时间</li></ol></li></ul></li></ul><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ul><li>集群完整性<ul><li>cluster-require-full-coverage默认为yes<ul><li>集群中16384个槽全部可用：保证集群完整性</li><li>节点故障或者正在故障转移：（error）CLUSTERDOWN The cluster is down</li></ul></li><li>大多数业务无法容忍，cluster-require-full-coverage建议设置为no</li></ul></li><li>带宽消耗<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317104154.png"></li><li>消息发送频率：节点发现与其他节点最后通信时间超过cluster-node-timeout&#x2F;2时会直接发送ping消息</li><li>消息数据量：slots槽数组（2KB空间）和整个集群1&#x2F;10的状态数据（10个节点状态数据约1KB）</li><li>节点部署的机器规模：集群分布的机器越多且每台机器划分的节点数越均匀，则集群内整体的可用带宽越高</li><li>例子：<ul><li>规模：节点200个、20台物理机（每台10个节点）</li><li>cluster-node-timeout &#x3D; 15000，ping&#x2F;pong带宽为25ＭB</li><li>cluster-node-timeout &#x3D; 20000，ping&#x2F;pong带宽为25ＭB</li></ul></li><li>优化：<ul><li>避免“大”集群：避免多业务使用一个集群，大业务可以多集群</li><li>cluster-node-timeout：带宽和故障转移速度的均衡</li><li>尽量均匀分配到多机器上：保证高可用和带宽</li></ul></li></ul></li><li>Pub&#x2F;Sub广播<ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200317112845.png"></li><li>问题：publish在集群每个节点广播：加重宽带</li><li>解决：单独“走”一套Redis Sentinel</li></ul></li><li>集群倾斜<ul><li>数据倾斜：内存不均<ul><li>节点和槽分配不均<ul><li>redis-trib.rb info ip:port查看节点、槽键值分布</li><li>redis-trib.rb rebalance ip:port进行均衡（谨慎使用）</li></ul></li><li>不同槽对应键值数量差异较大<ul><li>CRC16正常情况下比较均匀</li><li>可能存在hash_tag</li><li>cluster countkeysinslot {slot}获取槽对应键值个数</li></ul></li><li>包含bigkey<ul><li>bigkey：例如大字符串、几百万的元素的hash、set等</li><li>从节点：redis-cli –bigkeys</li><li>优化：优化数据结构</li></ul></li><li>内存相关配置不一致<ul><li>hash-max-ziplist-value、set-max-intset-entries等</li><li>优化：定期“检查”配置一致性</li></ul></li></ul></li><li>请求倾斜：热点<ul><li>热点key：重要的key或者bigkey</li><li>优化：<ul><li>避免bigkey</li><li>热键不要用hash_tag</li><li>当一致性不高时，可以用本地缓存+MQ</li></ul></li></ul></li></ul></li><li>集群读写分离<ul><li>只读连接：集群模式的从节点不接受任何读写请求<ul><li>重定向到负责槽的主节点</li><li>readonly命令可以读：连接级别命令</li></ul></li><li>读写分离：更加复杂<ul><li>同样的问题：复制延迟、读取过期数据、从节点故障</li><li>修改客户端：cluster slave {nodeId}</li></ul></li></ul></li><li>数据迁移（在线&#x2F;离线）<ul><li>官方迁移工具：redis-trib.rb import<ul><li>只能从单机迁移到集群</li><li>不支持在线迁移：source需要停写</li><li>不支持断点续传</li><li>单线程迁移：影响速度</li></ul></li><li>在线迁移：<ul><li>唯品会 redis-migrate-tool</li><li>豌豆荚 redis-port</li></ul></li></ul></li><li>集群vs单机<ul><li>集群限制<ul><li>key批量操作支持有限：例如mget、mset必须在一个slot</li><li>key事务和Lua支持有限：操作的key必须在一个节点</li><li>key是数据分区的最小粒度：不支持bigkey分区</li><li>不支持多数据库：集群模式下只有一个db 0</li><li>复制只支持一层：不支持树形复制结构</li></ul></li><li>分布式redis不一定好<ol><li>redis cluster：满足容量和性能的扩展，很多业务“不需要”<ul><li>大多数时客户端性能会“降低”</li><li>命令无法跨节点使用：mget、keys、scan、flush、sinter等</li><li>Lua和事务无法跨节点使用</li><li>客户端维护更复杂：SDK和应用本身消耗（例如更多的连接池）</li></ul></li><li>很多场景redis cluster已经足够好了</li></ol></li></ul></li></ul><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><ul><li>redis cluster数据分区规则采用虚拟槽方式（16384个槽），每个节点负责一部分槽和相关数据，实现数据和请求的负载均衡</li><li>搭建集群划分四个步骤：准备节点、节点握手、分配槽、复制。redis-trib.rb工具用于快速搭建集群</li><li>集群伸缩通过在节点之间移动槽和相关数据实现<ul><li>扩容时根据槽迁移计划把槽从源节点迁移到新节点</li><li>收缩时如果下线的节点有负责的槽需要迁移到其他节点，在通过cluster forget命令让集群内所有节点忘记被下线节点</li></ul></li><li>使用smart客户端操作集群达到通信效率最大化，客户端内部负责计算维护键 -&gt; 槽 -&gt; 节点的映射，用于快速定位到目标节点</li><li>集群自动故障转移过程分为故障发现和节点恢复。节点下线分为主观下线和客观下线，当超过半数主节点认为故障节点为主观下线时标记他为客观下线状态。从节点负责对客观下线的主节点触发故障恢复流程，保证集群的可用性</li><li>开发运维常见问题包括：超大规模集群带宽消耗，pub&#x2F;sub广播问题，集群倾斜问题，单机和集群对比等</li></ul><h2 id="十、缓存设计与优化"><a href="#十、缓存设计与优化" class="headerlink" title="十、缓存设计与优化"></a>十、缓存设计与优化</h2><h3 id="缓存的受益与成本"><a href="#缓存的受益与成本" class="headerlink" title="缓存的受益与成本"></a>缓存的受益与成本</h3><ul><li>受益<ol><li>加速读写<ul><li>通过缓存加速读写速度：CPU L1&#x2F;L2&#x2F;L3 Cache、Linux page Cache加速硬盘读写、浏览器缓存、Ehcache缓存数据库结果</li></ul></li><li>降低后端负载<ul><li>后端服务器通过前端缓存降低负载：业务端使用Redis降低后端MySQL负载等</li></ul></li></ol></li><li>成本<ol><li>数据不一致：缓存层和数据层有时间窗口不一致，和更新策略有关</li><li>代码维护成本：多了一层缓存逻辑</li><li>运维成本：例如Redis Cluster</li></ol></li><li>使用场景<ol><li>降低后端负载<ul><li>对高消耗的SQL：join结果集&#x2F;分组统计结果缓存</li></ul></li><li>加速请求响应<ul><li>利用Redis&#x2F;Memcache优化IO响应时间</li></ul></li><li>大量写合并为批量写<ul><li>如计数器先Redis累加在批量写DB</li></ul></li></ol></li></ul><h3 id="缓存跟新策略"><a href="#缓存跟新策略" class="headerlink" title="缓存跟新策略"></a>缓存跟新策略</h3><ol><li><p>LRU&#x2F;LFU&#x2F;FIFO算法剔除：例如：maxmemory-policy</p></li><li><p>超时剔除：例如expire</p></li><li><p>主动更新：开发控制生命周期</p></li><li><p>比较：</p><table><thead><tr><th align="center">策略</th><th align="center">一致性</th><th align="center">维护成本</th></tr></thead><tbody><tr><td align="center">LRU&#x2F;LIRS算法剔除</td><td align="center">最差</td><td align="center">低</td></tr><tr><td align="center">超时剔除</td><td align="center">较差</td><td align="center">低</td></tr><tr><td align="center">主动更新</td><td align="center">强</td><td align="center">高</td></tr></tbody></table></li><li><p>建议：</p><ol><li>低一致性：最大内存和淘汰策略</li><li>高一致性：超时剔除和主动更新结合，最大内存和淘汰策略兜底</li></ol></li></ol><h3 id="缓存粒度控制"><a href="#缓存粒度控制" class="headerlink" title="缓存粒度控制"></a>缓存粒度控制</h3><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318155735.png"></p><ol><li>从MySQL获取用户信息：<code>select * from user where id=&#123;id&#125;</code></li><li>设置用户信息缓存：<code>set user:&#123;id&#125;</code> <code> select * from user where id=&#123;id&#125;</code></li><li>缓存粒度：<ul><li>全部属性：<code>set user:&#123;id&#125;</code> <code>select*from user where id=&#123;id&#125;</code></li><li>部分重要属性：<code>set user:&#123;id&#125;</code> <code>select importantCoumn1,..importantComnK from user where id=&#123;id&#125;</code></li></ul></li><li>三个角度：<ol><li>通用性：全量属性更好</li><li>占用空间：部分属性更好</li><li>代码维护：表面上全量属性更好</li></ol></li></ol><h3 id="缓存穿透优化"><a href="#缓存穿透优化" class="headerlink" title="缓存穿透优化"></a>缓存穿透优化</h3><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318161322.png"></p><ul><li><p>原因：</p><ol><li>业务代码自身问题</li><li>恶意攻击、爬虫等等</li></ol></li><li><p>发现</p><ol><li>业务的相应时间</li><li>业务本身问题</li><li>相关指标：总调用数、缓存层命中数、存储层命中数</li></ol></li><li><p>解决</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318164417.png"></p></li><li><p>问题：</p><ol><li>需要更多的键</li><li>缓存层和存储层数据“短期”不一致</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getPassThrough</span><span class="params">(String key)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">cacheValue</span> <span class="operator">=</span> cache.get(key);</span><br><span class="line">    <span class="keyword">if</span>(StringUtils.isBlink(cacheValue))&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">storageValue</span> <span class="operator">=</span> storage.get(key);</span><br><span class="line">        cache.set(key,storageValue);</span><br><span class="line">        <span class="comment">//如果存储数据为空，需要设置一个过期时间（300秒）</span></span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isBlink(storageValue))&#123;</span><br><span class="line">            cache.expire(key,<span class="number">60</span>*<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> storageValue;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> cacheValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318165903.png"></li></ul><h3 id="无底洞问题优化"><a href="#无底洞问题优化" class="headerlink" title="无底洞问题优化"></a>无底洞问题优化</h3><ul><li>问题：<ul><li>2010年，Facebook有了3000个Memcache节点</li><li>发现问题：“加”机器性能没能提升，反而下降</li></ul></li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318174658.png"></li><li>优化IO的几种方法<ol><li>命令本身优化：例如慢查询keys、hgetall bigkey</li><li>减少网络通信次数</li><li>降低接入成本：例如客户端长连接&#x2F;连接池、NIO等</li></ol></li></ul><h3 id="缓存雪崩优化"><a href="#缓存雪崩优化" class="headerlink" title="缓存雪崩优化"></a>缓存雪崩优化</h3><ul><li>机器部署<ol><li>机器添加部署脚本：ssh账号、redis安装部署</li><li><a href="https://github.com/sohutv/cachecloud">Cachecloud</a>添加机器</li></ol></li></ul><h3 id="热点key重建优化"><a href="#热点key重建优化" class="headerlink" title="热点key重建优化"></a>热点key重建优化</h3><ul><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318175519.png"></p></li><li><p>三个目标</p><ul><li>减少重缓存的次数</li><li>数据尽可能一致</li><li>减少潜在危险</li></ul></li><li><p>两个解决</p><ul><li><p>互斥锁（mutex key）</p><ul><li><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318175933.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">get</span><span class="params">(String key)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> redis.get(key);</span><br><span class="line">    <span class="keyword">if</span>(value == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">mutexKey</span> <span class="operator">=</span> <span class="string">&quot;mutex:key:&quot;</span>+key;</span><br><span class="line">        <span class="keyword">if</span>(redis.set(mutexKey,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;ex 180&quot;</span>,<span class="string">&quot;nx&quot;</span>))&#123;</span><br><span class="line">            value = db.get(key);</span><br><span class="line">            redis.set(key,value);</span><br><span class="line">            redis.delete(mutexKey);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//其他线程休息50毫秒后重试</span></span><br><span class="line">            Thread.sleep(<span class="number">50</span>);</span><br><span class="line">            get(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>永远不过期</p><ol><li><p>缓存层面：没有设置过期时间（没有用expire）</p></li><li><p>功能层面：为每个value添加逻辑过期时间，但发现超过逻辑过期时间后，会使用单独的线程去构建缓存</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200318180917.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">get</span><span class="params">(<span class="keyword">final</span> String key)</span>&#123;</span><br><span class="line">    <span class="type">V</span> <span class="variable">v</span> <span class="operator">=</span> redis.get(key);</span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> redis.get(key);</span><br><span class="line">    <span class="type">long</span> <span class="variable">logicTimeout</span> <span class="operator">=</span> v.getLogicTimeout();</span><br><span class="line">    <span class="keyword">if</span>(logicTimeout &gt;= System.currentTimeMillis())&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">mutexKey</span> <span class="operator">=</span> <span class="string">&quot;mutex:key:&quot;</span>+key;</span><br><span class="line">        <span class="keyword">if</span>(redis.set(mutexKey,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;ex 180&quot;</span>,<span class="string">&quot;nx&quot;</span>))&#123;</span><br><span class="line">            <span class="comment">//异步更新后台异常执行</span></span><br><span class="line">            threadPool.execute(<span class="keyword">new</span> <span class="title class_">Runnable</span>()&#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">dbValue</span> <span class="operator">=</span> db.get(key);</span><br><span class="line">            redis.set(key,(dbValue,newLogicTimeout));</span><br><span class="line">            redis.delete(keyMutex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>对比</p><table><thead><tr><th align="center">方案</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center">互斥锁</td><td align="center">思路简单  保证一致性</td><td align="center">代码复杂度增加  存在死锁的风险</td></tr><tr><td align="center">永不过期</td><td align="center">基本杜绝热点key重建问题</td><td align="center">不保证一致性  逻辑过期时间增加维护成本和内存成本</td></tr></tbody></table></li></ul></li></ul><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><ul><li>缓存收益：加速读写、降低后端存储负载</li><li>缓存成本：缓存和存储数据不一致性、代码维护成本、运维成本</li><li>推荐结合剔除、超时、主动更新三种方案共同完成</li><li>穿透问题：使用缓存空对象和布隆过滤器来解决，注意它们各自的使用场景和局限性</li><li>无底洞问题：分布式缓存中，有更多的机器不保证有更高的性能。有四种批量操作方式：串行命令、串行IO、并行IO、hash_tag</li></ul><h2 id="十一、Redis云平台CacheCloud"><a href="#十一、Redis云平台CacheCloud" class="headerlink" title="十一、Redis云平台CacheCloud"></a>十一、Redis云平台CacheCloud</h2><h3 id="Redis规模化运维"><a href="#Redis规模化运维" class="headerlink" title="Redis规模化运维"></a>Redis规模化运维</h3><ul><li>问题<ul><li>发布构建繁琐，私搭乱盖</li><li>节点&amp;机器等运维成本</li><li>监控报警初级</li></ul></li><li><a href="https://github.com/sohutv/cachecloud">CacheCloud</a><ol><li>一键开启Redis（Standalone、Sentinel、Cluster）</li><li>机器、应用、实例监控和报警</li><li>客户端：透明使用、性能上报</li><li>可视化运维：配置、扩容、Failover、机器&#x2F;应用&#x2F;实例上下线</li><li>已存在Redis直接接入和数据迁移</li></ol></li><li>场景使用<ol><li>全量视频缓存（视频播放API）：跨机房高可用</li><li>消息队列同步（RedisMQ中间件）</li><li>分布式布隆过滤器（百万QPS）</li><li>计数系统：计数（播放数）</li><li>其他：排行榜、社交（直播）、实时计算（反作弊）等</li></ol></li></ul><h3 id="机器部署"><a href="#机器部署" class="headerlink" title="机器部署"></a>机器部署</h3><ol><li>机器添加部署脚本：ssh账号、Redis安装部署</li><li>Cachecloud添加机器</li></ol><h3 id="应用接入"><a href="#应用接入" class="headerlink" title="应用接入"></a>应用接入</h3><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200320115804.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200320120059.png"></p><h2 id="十二、小结"><a href="#十二、小结" class="headerlink" title="十二、小结"></a>十二、小结</h2><ol><li>Redis初识：单机安装部署（版本选择），边界（使用场景）</li><li>API理解和使用：单线程、5种数据结构使用和选择</li><li>Redis客户端使用：Jedis、redis-py等，客户端很“简单”</li><li>Redis其他功能：慢查询、pipeline、发布订阅、bitmap等</li><li>redis持久化：RDB和AOF的优缺点和最佳实践</li><li>redis复制：配置方法、全量和部分复制、常见运维问题</li><li>redis sentinel：高可用、架构、“新”的客户端、基本原理</li><li>redis cluster：数据分布、架构、安装部署、扩容、客户端、常见问题</li><li>缓存设计与优化：粒度、更新策略、无底洞问题、穿透、雪崩、热点key</li><li>cachecloud：平台化redis开发运维工具</li></ol><h2 id="十三、Redis布隆过滤器"><a href="#十三、Redis布隆过滤器" class="headerlink" title="十三、Redis布隆过滤器"></a>十三、Redis布隆过滤器</h2><h3 id="引出布隆过滤器"><a href="#引出布隆过滤器" class="headerlink" title="引出布隆过滤器"></a>引出布隆过滤器</h3><ul><li>问题：现有50亿个电话号，现有10万个电话号码，要快速准确判断这些电话号是否已经存在<ol><li>通过数据库查询：实现快速有点难</li><li>数据预防在集合中：50亿*8字节≈40GB（内存浪费或不够）</li><li>hyperloglog：准确有点难</li></ol></li><li>类似问题：<ul><li>垃圾邮件过滤</li><li>文件处理软件（例如Word）错误单词检测</li><li>网络爬虫重复URL检测</li><li>Hbase行过滤</li></ul></li></ul><h3 id="布隆过滤器原理"><a href="#布隆过滤器原理" class="headerlink" title="布隆过滤器原理"></a>布隆过滤器原理</h3><ul><li>1970年伯顿.布隆提出，用很小的空间，解决上述类似问题</li><li>实现原理：一个很长的二进制向量和若干个哈希函数</li><li>构建：<ul><li>参数：m个二进制向量，n个预备数据，k个hash函数</li><li>构建布隆过滤器：n个预备数据走一遍上面的过程</li><li>判断元素存在：走一遍上面的过程：如果都是1，则表明存在，反之不存在</li></ul></li></ul><h3 id="布隆过滤器误差率"><a href="#布隆过滤器误差率" class="headerlink" title="布隆过滤器误差率"></a>布隆过滤器误差率</h3><ul><li><p>肯定存在误差：恰好都命中了</p></li><li><p>直观因素：m&#x2F;n的比率，hash函数的个数</p></li><li><p>实际误差率公式</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200325164844.png"></p><ul><li>m&#x2F;n与误差率成反比，k与误差率成反比</li></ul></li></ul><h3 id="本地布隆过滤器"><a href="#本地布隆过滤器" class="headerlink" title="本地布隆过滤器"></a>本地布隆过滤器</h3><ul><li>现有库：<a href="http://ifeve.com/google-guava-hashing/">guava</a></li><li>本地布隆过滤器的问题：<ol><li>容量受限制</li><li>多个应用存在多个布隆过滤器，构建同步复杂</li></ol></li></ul><h3 id="Redis单机布隆过滤器"><a href="#Redis单机布隆过滤器" class="headerlink" title="Redis单机布隆过滤器"></a>Redis单机布隆过滤器</h3><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200325171234.png"></li><li>实现方法<ul><li>定义布隆过滤器构造参数：m、n、k、误差概率</li><li>定义布隆过滤器操作函数：add和contain</li><li>封装Redis位图操作</li><li>开发测试样例</li></ul></li></ul><h3 id="Redis分布式布隆过滤器"><a href="#Redis分布式布隆过滤器" class="headerlink" title="Redis分布式布隆过滤器"></a>Redis分布式布隆过滤器</h3><ul><li>实现方法：<ul><li>多个布隆过滤器：二次路由</li><li>基于pipeline提高效率</li></ul></li></ul><h2 id="十四、Redis开发规范"><a href="#十四、Redis开发规范" class="headerlink" title="十四、Redis开发规范"></a>十四、Redis开发规范</h2><h3 id="Key名设计"><a href="#Key名设计" class="headerlink" title="Key名设计"></a>Key名设计</h3><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200327170152.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200327171733.png"></p><h3 id="Value设计"><a href="#Value设计" class="headerlink" title="Value设计"></a>Value设计</h3><ul><li><p>拒绝bigkey</p><ul><li><p>强制：</p><ul><li>string类型控制在10kb以内</li><li>hash、list、set、zset元素个数不要超过5000</li><li>反例：一个包含几百万个元素的list、hash等，一个巨大的json字符串</li></ul></li><li><p>bigkey危害</p><ul><li>网络阻塞</li><li>redis阻塞<ul><li>慢查询：hgetall、lrange、zrange</li></ul></li><li>集群节点数据不均衡</li><li>频繁序列化：应用服务器CPU消耗<ol><li>redis客户端本身不负责序列化</li><li>应用频繁序列化和反序列化bigkey：本地缓存或Redis缓存</li></ol></li></ul></li><li><p>bigkey发现</p><ul><li><p>应用异常</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200406111455.png"></p></li><li><p>redis-cli –bigkeys  <code>redis-cli -h your.ip -p xxx --bigkeys</code></p></li><li><p>scan + debug object</p></li><li><p>主动报警：网络流量监控、客户端监控</p></li><li><p>内核热点key问题优化</p></li></ul></li><li><p>bigkey删除</p><ol><li><p>阻塞：注意隐性删除（过期、rename等）</p><p>删除hash、list、set、sorted set四种数据结构不同数量不同元素大小的耗时</p><table><thead><tr><th align="center">key类型</th><th align="center">10万（8个字节）</th><th align="center">100万（8个字节）</th><th align="center">10万（16个字节）</th><th align="center">100万（16个字节）</th><th align="center">10万（128个字节）</th><th>100万（128个字节）</th></tr></thead><tbody><tr><td align="center">hash</td><td align="center">51ms</td><td align="center">950ms</td><td align="center">58ms</td><td align="center">970ms</td><td align="center">96ms</td><td>2000ms</td></tr><tr><td align="center">list</td><td align="center">23ms</td><td align="center">134ms</td><td align="center">23ms</td><td align="center">138ms</td><td align="center">23ms</td><td>266ms</td></tr><tr><td align="center">set</td><td align="center">44ms</td><td align="center">873ms</td><td align="center">58ms</td><td align="center">881ms</td><td align="center">73ms</td><td>1319ms</td></tr><tr><td align="center">sorted set</td><td align="center">51ms</td><td align="center">845ms</td><td align="center">57ms</td><td align="center">859ms</td><td align="center">59ms</td><td>969ms</td></tr></tbody></table></li><li><p>redis4.0：lazy delete（unlink命令）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bigkey 删除方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delBigHash</span><span class="params">(String host, <span class="type">int</span> port, String password, String bigHashKey)</span> &#123;</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(host, port);</span><br><span class="line">        <span class="keyword">if</span> (password != <span class="literal">null</span> &amp;&amp; <span class="string">&quot;&quot;</span>.equals(password)) &#123;</span><br><span class="line">            jedis.auth(password);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ScanParams</span> <span class="variable">scanParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ScanParams</span>().count(<span class="number">100</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">cursor</span> <span class="operator">=</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            ScanResult&lt;Map.Entry&lt;String, String&gt;&gt; scanResult = jedis.hscan(bigHashKey, cursor, scanParams);</span><br><span class="line">            List&lt;Map.Entry&lt;String, String&gt;&gt; entryList = scanResult.getResult();</span><br><span class="line">            <span class="keyword">if</span> (entryList != <span class="literal">null</span> &amp;&amp; !entryList.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : entryList) &#123;</span><br><span class="line">                    jedis.hdel(bigHashKey,entry.getKey());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//cursor = scanResult.getStringCursor();  估计是个老方法  没找到</span></span><br><span class="line">            cursor = scanResult.getCursor();</span><br><span class="line">        &#125; <span class="keyword">while</span> (!<span class="string">&quot;0&quot;</span>.equals(cursor));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除bigkey</span></span><br><span class="line">        jedis.del(bigHashKey);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>bigkey预防</p><ul><li>优化数据结构：例如二级拆分</li><li>物理隔离或者万兆网卡：不是治标方案</li><li>命令优化：例如hgetall -&gt;hmget、hscan</li><li>报警和定期优化</li></ul></li></ol></li><li><p>bigkey总结</p><ul><li>牢记Redis单线程特性</li><li>选择合理的数据结构和命令</li><li>清楚自身OPS</li><li>了解bigkey的危害</li></ul></li></ul></li><li><p>选择合适的数据结构</p><ul><li><p>例如：实体类型（数据结构内存优化：例如ziplist，注意内存和性能的平衡）</p><ul><li>反例：<code>set user:1:name tom; set user:1:age 19; set user:1:favor football;</code></li><li>正例：<code>hmset user:1 name tom age 19 favor football</code></li></ul></li><li><p>需求：picId &#x3D;&gt;userId(100万)</p><ul><li><p>方案：</p><ul><li><p>全部string：set picId userId</p></li><li><p>一个hash：hset allPics picId userId</p></li><li><p>若干个小hash：hset picId&#x2F;100 pic%100 userId</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200406165541.png"></p></li><li><p>三种方案内存分析</p><ul><li>配置（支持动态修改）<ul><li>hash-max-ziplist-entries 512</li><li>hash-max-ziplist-value 64</li></ul></li><li>ziplist<ul><li>连续内存</li><li>读写有指针位移，最坏O(n²)</li><li>新增删除有内存重分配</li></ul></li></ul></li><li><p>对比</p><table><thead><tr><th align="center">方案</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center">全String</td><td align="center">编程简单</td><td align="center">浪费内存  全量获取较为复杂</td></tr><tr><td align="center">全hash</td><td align="center">暂无</td><td align="center">浪费内存  bigkey</td></tr><tr><td align="center">分段hash</td><td align="center">节省内存</td><td align="center">编程复杂  超时问题  性能问题  ziplist</td></tr></tbody></table></li></ul></li></ul></li></ul></li><li><p>过期设计</p><ul><li>键值生命周期（redis不是垃圾桶）<ul><li>周期数据需要设置过期时间，object idle time可以找垃圾key-value</li><li>过期时间不宜集中：缓存穿透和雪崩等问题</li></ul></li></ul></li></ul><h3 id="命令使用技巧"><a href="#命令使用技巧" class="headerlink" title="命令使用技巧"></a>命令使用技巧</h3><ol><li><p>【推荐】O(n)以上命令关注N的数量</p><ul><li>例如：hgetall、lrange、smembers、zrange、sinter等并非不能使用，但需要明确N的值。有遍历的需求可以使用hscan、sscan、zscan代替。</li></ul></li><li><p>【推荐】禁用命令</p><ul><li>禁止线上使用keys、flushall、flushdb等，通过redis的rename机制禁掉命令，或者使用scan的方式渐进式处理</li></ul></li><li><p>【推荐】合理使用select</p><ul><li>redis的多数据库较弱，使用数字进行区分</li><li>很多客户端支持较差</li><li>同时多业务用多数据库实际还是单线程处理，会有干扰</li></ul></li><li><p>【推荐】redis事务功能较弱，不建议过多使用</p><ul><li>redis的事务功能较弱（不支持回滚）</li><li>而且集群版本（自研和官方）要求一次事务操作的key必须在一个slot上（可以使用hashtag功能解决）</li></ul></li><li><p>【推荐】redis集群版本在使用Lua上有特殊要求</p><ul><li>所有key，必须在1个slot上，否则直接返回error</li><li><strong>“-ERR eval&#x2F;evalsha command keys must in same slot\r\n”</strong></li></ul></li><li><p>【建议】必要情况下使用monitor命令时，要注意不要长时间使用</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200414141528.png"></p></li></ol><h3 id="Java客户端优化"><a href="#Java客户端优化" class="headerlink" title="Java客户端优化"></a>Java客户端优化</h3><ol><li><p>【推荐】</p><ul><li>避免多个应用使用一个Redis实例</li><li>正例：不相干的业务拆分，公共数据做服务化</li></ul></li><li><p>【推荐】</p><ul><li><p>使用连接池，标准使用方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//redisHost为实例的IP，redisPort为实例端口，redisPassword为实例的密码，timeout既是连接超时又是读写超时</span></span><br><span class="line"><span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPool</span>(jedisPoolConfig, redisHost, redisPort, timeout, redisPasswor<span class="comment">//d);</span></span><br><span class="line"><span class="comment">//执命令如下</span></span><br><span class="line"><span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    jedis = jedisPool.getResource();</span><br><span class="line">    <span class="comment">//具体的命令</span></span><br><span class="line">    jedis.executeCommand()</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    logger.error(e.getMessage(), e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//在JedisPool模式下，Jedis会被归还给资源池</span></span><br><span class="line">    <span class="keyword">if</span> (jedis != <span class="literal">null</span>) </span><br><span class="line">        jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">序号</th><th align="center">参数名</th><th align="center">含义</th><th align="center">默认值</th><th align="center">使用建议</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">testWhileIdle</td><td align="center">是否开启空闲资源检测</td><td align="center">false</td><td align="center">true</td></tr><tr><td align="center">2</td><td align="center">timeBetweenEvictionRunsMillis</td><td align="center">空闲资源的检测周期（单位为毫秒）</td><td align="center">-1：不检测</td><td align="center">建议设置，周期自行选样，也可以默认，也可以使用JedisPoolConfig中的配置</td></tr><tr><td align="center">3</td><td align="center">minEvictableIdleTimeMillis</td><td align="center">资源池中资源最小空闲时间（单位为毫秒），达到此值后空闲资源将被移除</td><td align="center">1000 60 30 &#x3D;30分钟</td><td align="center">可根据自身业务决定，大部分默认即可，也可以考虑使用JedisPoolConfig中的配置</td></tr><tr><td align="center">4</td><td align="center">numTestsPerEvictionRun</td><td align="center">做空闲资源检测时，每次的采样数</td><td align="center">3</td><td align="center">可根据自身应用连接数进行微调，如果设置为-1，就是对所有连接做空闲监测</td></tr></tbody></table><p><strong>其中JedisPoolConfig对一些参数的默认设置如下：</strong></p><p><strong>testWhileIdle&#x3D;true</strong></p><p><strong>minEvictableIdleTimeMills&#x3D;60000</strong></p><p><strong>timeBetweenEvictionRunsMillis&#x3D;30000</strong>·</p><p><strong>numTestsPerEvictionRun&#x3D;-1</strong></p></li><li><p>如何预估最大连接池</p><ul><li>maxTotal怎么设置？maxIdle接近MaxTotal即可<ol><li>考虑因素<ul><li>业务希望Redis并发量</li><li>客户端执行命令时间</li><li>Redis资源：例如node（应用个数）*maxTotal不能超过Redis最大连接数</li><li>资源开销：例如虽然希望控制空闲连接，但是不希望因为连接池的频繁释放创建连接造成不必要开销</li></ul></li><li>例子<ul><li>一次命令时间（borrow|return resource + Jedis执行命令（含网络））的平均耗时约为1ms，一个连接的QPS大约是1000</li><li>业务期望的QPS是50000</li><li>理论的maxTotal &#x3D; 50000&#x2F;1000 &#x3D; 50 个，可以适当伸缩</li></ul></li></ol></li></ul></li></ul></li></ol><h2 id="十五、内存管理"><a href="#十五、内存管理" class="headerlink" title="十五、内存管理"></a>十五、内存管理</h2><h3 id="内存消耗"><a href="#内存消耗" class="headerlink" title="内存消耗"></a>内存消耗</h3><ul><li><p>内存使用统计（进入redis-cli 直接输入 info）</p><table><thead><tr><th align="left">属性名</th><th align="left">属性说明</th></tr></thead><tbody><tr><td align="left"><strong>userd_memory</strong></td><td align="left"><strong>Redis分配器分配的内存量，也就是实际存储数据的自存总量</strong></td></tr><tr><td align="left">used_memory_human</td><td align="left">以可读格式返回Redis使用的内存总量</td></tr><tr><td align="left"><strong>used_memory_rss</strong></td><td align="left"><strong>从操作系统的角度，Redis进程占用的总物理内存</strong></td></tr><tr><td align="left">used_memory_peak</td><td align="left">内存分配器分配的最大内存，代表used_memory的历史峰值</td></tr><tr><td align="left">used_memory_peak_human</td><td align="left">以可读的格式显示内存消耗峰值</td></tr><tr><td align="left">used_memory_lua</td><td align="left">Lua引擎所消耗的内存</td></tr><tr><td align="left"><strong>mem_fragmentation_ratio</strong></td><td align="left"><strong>used_memory_rss&#x2F;used_memory比值，表示内存碎片率</strong></td></tr><tr><td align="left">mem_allocator</td><td align="left">Redis所使用的内存分配器。默认：jemalloc</td></tr></tbody></table><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416101537.png"></p></li><li><p>内存消耗划分</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416105846.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416110647.png"></p></li></ul><h3 id="内存缓冲"><a href="#内存缓冲" class="headerlink" title="内存缓冲"></a>内存缓冲</h3><ul><li><p>缓冲内存-客户端缓冲区</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416112157.png"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416112353.png"></p><ul><li><p>普通客户端</p><ol><li><p>默认：<code>client-output-buffer-limit normal 0 0 0</code></p></li><li><p>默认：没有限制客户端缓冲</p></li><li><p>注意：防止大的命令或者monitor</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416112914.png"></p></li></ol></li><li><p>slave客户端</p><ol><li>默认：<code>client-output-buffer-limit slave 256mb 64mb 60</code></li><li>阻塞：主从延迟较高，或者从节点过多</li><li>注意：主从网络，从节点不要超过2个</li></ol></li><li><p>pubsub客户端</p><ol><li>默认：<code>client-output-buffer-limit pubsub 32mb 8mb 60</code></li><li>阻塞：生产大于消费</li><li>注意：根据实际场景适当调试</li></ol></li></ul></li><li><p>缓冲内存-复制缓冲区</p><ul><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416134820.png"></li><li>缓冲内存-AOF缓冲区<ul><li>注意：AOF重写期间，AOF的缓冲区，没有容量限制</li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416135534.png"></li></ul></li></ul></li><li><p>对象内存</p><ol><li>key：不要过长，量大不容忽视（Redis3：embstr 39字节）</li><li>value：ziplist、intsetde等优化方式</li></ol></li><li><p>内存碎片</p><ol><li>必然存在：jemalloc</li><li>优化方式：<ul><li>避免频繁更新操作：append、setrange等</li><li>安全重启，例如redis sentinel和redis cluster等</li></ul></li></ol></li><li><p>子进程内存消耗</p><ol><li>必然存在：fork（bgsave和bgrewriteaof）</li><li>优化方式：<ul><li>去掉THP特性：2.6.38增加的特性</li><li>观察写入量：copy-on-write</li><li>overcommit_memory&#x3D;1</li></ul></li></ol></li></ul><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><ul><li><p>设置内存上限</p><ul><li><p>注意：定义实例最大内存，便于管理机器内存，一般要预留30%</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200420154633.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis &gt; config set maxmemory 6GB</span><br><span class="line">redis &gt; config set maxmemory 2GB</span><br><span class="line">redis &gt; config rewrite</span><br></pre></td></tr></table></figure></li></ul></li><li><p>动态调整内存上限</p></li><li><p>内存回收策略</p><ul><li><p>删除过期键值</p><ol><li><p>惰性删除：访问key -&gt; expired dict -&gt; del key</p></li><li><p>定时删除：每秒运行10次，采样删除</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200420155255.png"></p></li></ol></li><li><p>内存溢出控制策略</p><ul><li>超过maxmemory后触发相应策略，由maxmemory-policy控制<ul><li>Noeviction：默认策略，不会删除任何数据，拒绝所有写入操作并返回端错误信息“（error） OOM command not allowed when userd memory” 此时Redis只响应读操作由maxmemory-policy控制</li><li>Volatile-lru：根据LRU算法删除设置了超时属性（expire）的键，直到腾出足够空间为止。如果没有可删除的键对象，回退到noeviction策略</li><li>Allkeys-lru：根据LRU算法删除键，不管数据有没有设置超时属性，直到腾出足够空间为止</li><li>Allkeys-random：随机删除所有键，直到腾出足够空间为止</li><li>volatile-random：随机删除过期键，直到腾出足够空间为止</li><li>volatile-ttl：根据键值对象的ttl属性，删除最近将要过期数据。如果没有，回退到noeviction策略</li></ul></li></ul></li></ul></li></ul><h3 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h3><ul><li><p>内存分布</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200416110647.png"></p></li><li><p>合理选择优化数据结构</p><ul><li>需求：计算网站每天独立用户数</li><li>选择：集合、bitmaps、hyperloglog</li><li><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200420172448.png"></li></ul></li><li><p>客户端内存优化</p><ul><li>结构<ul><li>输入缓冲区：最大1G</li><li>输出缓冲区，支持按类型设置：<ol><li>普通客户端</li><li>发布订阅客户端</li><li>复制客户端</li></ol></li></ul></li><li>一次内存暴增（原因）<ol><li>批量写入</li><li>主从不一致</li></ol></li><li>处理和预防<ol><li>处理：找到对应的业务方直接干掉</li><li>预防：<ol><li>运维层面：线上Redis禁用monitor（rename-command）</li><li>运维层面：适度限制缓冲区大小</li><li>开发层面：理解monitor的原理，也可以短暂寻找热点key（本地执行）</li><li>开发层面：使用CacheCloud可以直接监控</li></ol></li></ol></li></ul></li><li><p>其他方法</p><ol><li>不要忽视key长度：一亿个键，一个字节也是节省。（键名：简短明了）<code>user:friends:notify:&#123;id&#125;-----&gt;u:f:n:&#123;id&#125;</code></li><li>序列化和压缩方法：拒绝Java原生，采用portobuf、kryo、snappy等</li></ol></li><li><p>需不需要用Redis？</p><ol><li>数据：大数据、冷数据</li><li>功能性：关系型查询、消息队列</li></ol></li></ul><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><ol><li>内存是宝贵资源</li><li>结合场景选择和优化数据结构</li><li>序列化时有成本的</li><li>不要忽视键长度</li></ol><h2 id="十六、开发运维那些坑"><a href="#十六、开发运维那些坑" class="headerlink" title="十六、开发运维那些坑"></a>十六、开发运维那些坑</h2><h3 id="Linux内核优化"><a href="#Linux内核优化" class="headerlink" title="Linux内核优化"></a>Linux内核优化</h3><ul><li><p>vm.overcommit_memory</p><ul><li><table><thead><tr><th align="center">值</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">表示内核将检查是否有足够的可用内存。如果有足够的可用内存，内存申请通过，否则内存申请失败，并把错误返回给应用进程</td></tr><tr><td align="center">1</td><td align="center">表示内核允许超量使用内存直到用完为止</td></tr><tr><td align="center">2</td><td align="center">表示内核绝不过量（“never overcommit”）使用内存，即系统整个内存地址空间不能超过swap+50%的RAM值，50%时overcommit_ratio默认值，此参数同样支持修改</td></tr></tbody></table></li><li><p>获取和设置</p><ul><li><p>获取：</p><p><code># cat /proc/sys/vm/overcommit_memory   0 </code></p></li><li><p>设置：</p><p><code>echo &quot;vm.overcommit_memory=1&quot; &gt;&gt; /etc/sysctl.conf</code></p><p><code>sysctl vm.overcommit_memory=1</code></p></li></ul></li><li><p>最佳实践</p><ol><li>Redis设置合理的maxmemory，保证机器有20%~30%的闲置内存</li><li>集中化管理AOF重写和RDB的bgsave</li><li>设置vm.overcommit_memory&#x3D;1,防止极端情况下会造成fork失败</li></ol></li></ul></li><li><p>swappiness</p><ul><li><table><thead><tr><th align="center">值</th><th align="center">策略</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">Linux3.5及以上：宁愿用OOM killer 也不用swap    Linux3.4及更早：宁愿用swap也不用OOM killer</td></tr><tr><td align="center">1</td><td align="center">Linux3.5及以上：宁愿用swap也不用OOM killer</td></tr><tr><td align="center">60</td><td align="center">默认值</td></tr><tr><td align="center">100</td><td align="center">操作系统会主动地使用swap</td></tr></tbody></table></li><li><p>设置</p><ol><li>立即生效：<code>echo &#123;bestvalue&#125; &gt; /proc/sys/vm/swappiness</code></li><li>永久生效：<code>echo vm.swappiness=&#123;bestvalue&#125;&gt;&gt;/etc/sysctl.conf</code></li></ol></li><li><p>最佳实践</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200420184749.png"></p></li></ul></li><li><p>THP(Transparent huge page)</p><ul><li><p>作用</p><ol><li><p>作用：加速fork</p></li><li><p>建议：禁用，可能产生更大的内存开销</p></li><li><p>设置方法：<code>echo never&gt;/sys/kernel/mm/transparent_hugepage/enabled</code></p></li><li><p>坑：源码中是绝对路径，注意不同发行版本的区别</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FILE*fp = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;/sys/kernel/mm/transparent_hugepage/enabled&quot;</span>,<span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!fb) <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>OOM killer</p><ul><li>该机制会监控那些占用内存过大，尤其是瞬间占用内存很快的进程，然后防止内存耗尽而自动把该进程杀掉。内核检测到系统内存不足、挑选并杀掉某个进程的过程可以参考内核源代码linux&#x2F;mm&#x2F;oom_kill.c，当系统内存不足的时候，out_of_memory()被触发，然后调用select_bad_process()选择一个”bad”进程杀掉。如何判断和选择一个”bad进程呢？linux选择”bad”进程是通过调用oom_badness()，挑选的算法和想法都很简单很朴实：最bad的那个进程就是那个最占用内存的进程</li></ul></li><li><p><a href="https://blog.csdn.net/iloli/article/details/6431757">NTP(Net Time Protocol)</a></p></li><li><p><a href="https://blog.csdn.net/skiwnc/article/details/84100095">ulimit</a></p></li><li><p><a href="https://www.cnblogs.com/Orgliny/p/5780796.html">TCP backlog</a></p></li></ul><h3 id="安全的Redis"><a href="#安全的Redis" class="headerlink" title="安全的Redis"></a>安全的Redis</h3><ul><li><p>全球crackit攻击</p><ul><li>2015年11月，全球35000+个redis主机受到攻击</li><li>被攻击的redis特征<ol><li>Redis所在的机器有外网IP</li><li>Redis以默认端口6379为启动端口，并且是对外网开放的</li><li>Redis是以root用户启动的</li><li>Redis没有设置密码</li><li>Redis的bind设置为0.0.0.0或者””</li></ol></li></ul></li><li><p>Redis安全七法</p><ol><li><p>设置密码</p><ol><li>服务端配置：requirepass和masterauth</li><li>客户端连接：auth命令和-a参数</li><li>相关建议：<ol><li>密码要足够复杂，防止暴力破解</li><li>masterauth不要忘记</li><li>auth还是通过明文传输</li></ol></li></ol></li><li><p>伪装危险命令</p><ol><li>服务端配置：rename-command为空或者随机字符</li><li>客户端连接：不可用或者使用指定随机字符</li><li>相关建议：<ol><li>不支持config set动态设置</li><li>RDB和AOF如果包含rename-command之前的命令，将无法使用</li><li>config命令本身是在Redis内核会使用到，不建议设置</li></ol></li></ol></li><li><p>bind</p><ol><li>服务端配置：bind限制的是网卡，并不是客户端ip</li><li>相关建议：<ol><li>bind不支持config set</li><li>bind 127.0.0.1需要谨慎</li><li>如果存在外网网卡尽量屏蔽掉</li></ol></li></ol></li><li><p>防火墙：杀手锏</p></li><li><p>定期备份</p></li><li><p>不使用默认端口，防止被弱攻击杀掉</p></li><li><p>使用非root用户启动</p></li></ol></li></ul><h3 id="热点key发现"><a href="#热点key发现" class="headerlink" title="热点key发现"></a>热点key发现</h3><ul><li><p>客户端</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200421100545.png"></p></li><li><p>代理端</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200421100624.png"></p></li><li><p>服务端</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200421100655.png"></p></li><li><p>机器收集</p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/20200421100750.png"></p></li></ul><h3 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th align="center">方案</th><th align="center">优点</th><th align="center">缺点</th></tr></thead><tbody><tr><td align="center">客户端</td><td align="center">实现简单</td><td align="center">1. 内存泄漏隐患 2. 维护成本高 3. 只能统计单个客户端</td></tr><tr><td align="center">代理</td><td align="center">代理是客户端和服务端的桥梁，实现最方便最系统</td><td align="center">增加代理端的开发部署成本</td></tr><tr><td align="center">服务端</td><td align="center">实现简单</td><td align="center">1. monitor本身的使用成本和危害，只能短时间使用 2. 只能统计单个redis节点</td></tr><tr><td align="center">机器</td><td align="center">对于客户端和服务端无侵入和影响</td><td align="center">需要专业的运维团队开发，并且增加了机器的部署成本</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oauth2</title>
      <link href="/2020/07/07/oauth2/"/>
      <url>/2020/07/07/oauth2/</url>
      
        <content type="html"><![CDATA[<p>任何的身份验证，本质上都是基于对请求方的不信任所产生的</p><hr><span id="more"></span><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/oauth2.png" alt="理解oauth2"></p><ol><li>资源所有者（resource owner）即用户本身</li><li>客户端&#x2F;第三方应用（client）即你将要访问的网站BLOGI</li><li>资源服务器（resource server）例如 GitHub</li><li>授权服务器（authorization server）可以与资源服务器放到一起</li></ol><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/oauth2-1.png" alt="oauth2协议"></p><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/oauth2-2.png" alt="oauth2协议角色与流程"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> oauth2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> oauth2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git相关</title>
      <link href="/2020/07/07/Git%E7%9B%B8%E5%85%B3/"/>
      <url>/2020/07/07/Git%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="Git相关"><a href="#Git相关" class="headerlink" title="Git相关"></a>Git相关</h1><!--  more  --><ol><li>用户名查看修改</li></ol><p><a href="https://blog.csdn.net/autoliuweijie/article/details/52230165">https://blog.csdn.net/autoliuweijie/article/details/52230165</a> </p><p><a href="https://blog.csdn.net/lai1170137052/article/details/102974628">https://blog.csdn.net/lai1170137052/article/details/102974628</a> </p><ol start="2"><li><p>git升级   <a href="https://segmentfault.com/q/1010000011704285">https://segmentfault.com/q/1010000011704285</a> </p></li><li><p>git config –global credential.helper store  </p></li><li><p>npm install</p></li><li><p>npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> cnpm install</p><p>使用上述命令后可使用cnpm 替换npm  </p></li><li><p>npm run dev </p></li><li><p>npm run build</p><p>很多人也貌似出现了这个问题，参考了好几个帖子：<br><a href="https://segmentfault.com/q/1010000008223855">https://segmentfault.com/q/1010000008223855</a><br><a href="https://www.imooc.com/qadetail/177063">https://www.imooc.com/qadetail/177063</a><br>我参照改了源,也不确定这个是否有用<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot深度实践</title>
      <link href="/2020/07/07/Spring%20Boot%E6%B7%B1%E5%BA%A6%E5%AE%9E%E8%B7%B5/"/>
      <url>/2020/07/07/Spring%20Boot%E6%B7%B1%E5%BA%A6%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot深度实践"><a href="#Spring-Boot深度实践" class="headerlink" title="Spring Boot深度实践"></a>Spring Boot深度实践</h1><h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><ol><li>组件自动装配：Web MVC、Web Flux、JDBC</li><li>嵌入式Web容器：Tomcat、Jetty以及Undertow</li><li>生产准备特性：指标、健康检查、外部化配置等</li></ol><span id="more"></span><h2 id="核心特性"><a href="#核心特性" class="headerlink" title="核心特性"></a>核心特性</h2><ol><li>激活：@EnableAutoConfiguration</li><li>配置：&#x2F;MATA-INF&#x2F;spring.factories</li><li>实现：XXXAutoConfiguration</li></ol><p><img src="https://gitee.com/zelen/IMG/raw/master/PicGo/web%E5%BA%94%E7%94%A8.png" alt="Web应用"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> spring boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis转义</title>
      <link href="/2020/07/07/mybatis%E7%9B%B8%E5%85%B3/"/>
      <url>/2020/07/07/mybatis%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis转义"><a href="#Mybatis转义" class="headerlink" title="Mybatis转义"></a>Mybatis转义</h1><p><code>&gt;  和 &gt;=</code>都可以在mybatis的xml中使用<br><code>&lt;  和 &lt;=</code>需要使用转译</p><span id="more"></span><table><thead><tr><th>小于</th><th>小于等于</th><th>大于</th><th>大于等于</th><th>和</th><th>单引号</th><th>双引号</th></tr></thead><tbody><tr><td>&lt;</td><td>&lt;&#x3D;</td><td>&gt;</td><td>&gt;&#x3D;</td><td>&amp;</td><td>‘</td><td>“</td></tr><tr><td><code>&amp;lt;</code></td><td><code>&amp;lt;=</code></td><td><code>&amp;gt;</code></td><td><code>&amp;gt;=</code></td><td><code>&amp;amp;</code></td><td><code>&amp;apos;</code></td><td><code>&amp;quot;</code></td></tr></tbody></table><p> <strong>用<code>&lt;![CDATA[]]&gt;</code>包裹</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同步/异步/多线程</title>
      <link href="/2020/07/07/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/"/>
      <url>/2020/07/07/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="同步-x2F-异步-x2F-多线程几个东西的区别："><a href="#同步-x2F-异步-x2F-多线程几个东西的区别：" class="headerlink" title="同步&#x2F;异步&#x2F;多线程几个东西的区别："></a>同步&#x2F;异步&#x2F;多线程几个东西的区别：</h3><p>一般情况：顺序结构，必须等待前面的操作完成（两个人说话，a把所有话说完，b才能继续说）</p><span id="more"></span><p><strong>并发</strong>：同一时间段处理多个任务的能力（两人说话，支持你一言我一语的交流，两人在一个时间段内都有说话，是基于时间段内的同时发生）</p><p><strong>并发又有同步和互斥</strong></p><p><strong>互斥</strong>：不能同时使用临界资源（有一个共享资源–话筒，两人必须用话筒说话，但同时只能有一个人用这个话筒，保证了只有一个人在说话）</p><p><strong>同步</strong>：前一个处理的结果作为下一个处理的资源。大多数情况下，同步已经实现了互斥。（两人你一言我一语的交流，我必须知道你说了啥我才能接上你的话）</p><p><strong>并行</strong>：同一时刻处理多个任务的能力（两人合唱，同时出声）</p><p><strong>异步</strong>：不用等待一个结果出来，可以继续其他操作（两个人不说话了，寄信，a把信拿到邮局就不用管了，回家可以想干嘛就干嘛，等b回信到了，取邮局接收一下结果–b的回信就可以了）</p><p><strong>多线程</strong>：如果说同步和异步是对如何处理事情的要求，那么多线程就是实现这些要求的方法。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 同步/异步/多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
            <tag> 同步/异步/多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2020/07/07/Java/"/>
      <url>/2020/07/07/Java/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Java零散知识（之后可能会整理）"><a href="#一、Java零散知识（之后可能会整理）" class="headerlink" title="一、Java零散知识（之后可能会整理）"></a>一、Java零散知识（之后可能会整理）</h1><p><a href="http://hollischuang.gitee.io/tobetopjavaer/#/basics/object-oriented/object-oriented-vs-procedure-oriented">http://hollischuang.gitee.io/tobetopjavaer/#/basics/object-oriented/object-oriented-vs-procedure-oriented</a></p><span id="more"></span><h2 id="VO-DTO-DO-PO"><a href="#VO-DTO-DO-PO" class="headerlink" title="VO DTO DO PO"></a>VO DTO DO PO</h2><ul><li><p><strong>从前端传后端是VO，从后端传前端是DTO，表对应实体类是PO</strong></p></li><li><p>VO (View Object) :视图对象，用于展示层，它的作用是把某个指定页面(或组件)的所有数据封装起来。</p></li><li><p>DTO (Data Transfer Object) :数据传输对象,这个概念来源于J2EE的设计模式，原来的目的是为了EJB的分布式应用提供粗粒度的数据实体，以减少分布式调用的次数,从而提高分布式调用的性能和降低网络负载，但在这里，我泛指用于展示层与服务层之间的数据传输对象。</p></li><li><p>DO (Domain Object) :领域对象,就是从现实世界中抽象出来的有形或无形的业务实体。</p></li><li><p>PO (Persistent Object) :持久化对象，它跟持久层(通常是关系型数据库)的数据结构形成一一对应的映射关系，如果持久层是关系型数据库,那么,数据表中的每个字段(或若干个)就对应PO的一个(或若干个)属性。</p></li></ul><h2 id="Java类的加载顺序"><a href="#Java类的加载顺序" class="headerlink" title="Java类的加载顺序"></a>Java类的加载顺序</h2><h3 id="1、有继承关系的加载顺序"><a href="#1、有继承关系的加载顺序" class="headerlink" title="1、有继承关系的加载顺序"></a>1、有继承关系的加载顺序</h3><p>关于关键字static，大家都知道它是静态的，相当于一个全局变量，也就是这个属性或者方法是可以通过类来访问，当class文件被加载进内存，开始初始化的时候，被static修饰的变量或者方法即被分配了内存，而其他变量是在对象被创建后，才被分配了内存的。</p><p>所以在类中，加载顺序为：</p><ol><li><p>首先加载父类的静态字段或者静态语句块</p></li><li><p>子类的静态字段或静态语句块</p></li><li><p>父类普通变量以及语句块</p></li><li><p>父类构造方法被加载</p></li><li><p>子类变量或者语句块被加载</p></li><li><p>子类构造方法被加载</p></li></ol><p>父类代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FuLei</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span>  <span class="operator">=</span> <span class="number">5</span>;<span class="comment">//1.首先被加载</span></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;静态语句块已经被加载&quot;</span>+num); <span class="comment">//2.被加载</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//5.被加载</span></span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;普通语句块&quot;</span>+count++);<span class="comment">//6.被加载</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">FuLei</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;父类的构造方法在这时候加载count=&quot;</span>+count);<span class="comment">//7.被加载</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子类代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZiLei</span> <span class="keyword">extends</span> <span class="title class_">FuLei</span> &#123;</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;静态语句块和静态变量被初始化的顺序与代码先后顺序有关&quot;</span>); <span class="comment">//3.被加载</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">45</span>;<span class="comment">//4.被加载</span></span><br><span class="line"><span class="type">int</span> <span class="variable">numre</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//8.被加载</span></span><br><span class="line">&#123;</span><br><span class="line">    numre++;</span><br><span class="line">    System.out.println(<span class="string">&quot;numre&quot;</span>+numre);<span class="comment">//9.被加载</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ZiLei</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;子类构造方法&quot;</span>);<span class="comment">//10.被加载</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">ZiLei</span> <span class="variable">ht</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ZiLei</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>console打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">静态语句块已经被加载5</span><br><span class="line">静态语句块和静态变量被初始化的顺序与代码先后顺序有关</span><br><span class="line">普通语句块0</span><br><span class="line">父类的构造方法在这时候加载count=1</span><br><span class="line">numre1</span><br><span class="line">子类构造方法</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>当class文件被加载进内存，开始初始化的时候，被static修饰的变量或者方法即被分配了内存，而其他变量是在对象被创建后，才被分配了内存的。</p><p>将子类代码中的创建对象注释掉</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ZiLei ht = new ZiLei();</span></span><br></pre></td></tr></table></figure><p>console打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">静态语句块已经被加载5</span><br><span class="line">静态语句块和静态变量被初始化的顺序与代码先后顺序有关</span><br></pre></td></tr></table></figure><h3 id="2、没有继承关系的加载顺序"><a href="#2、没有继承关系的加载顺序" class="headerlink" title="2、没有继承关系的加载顺序"></a>2、没有继承关系的加载顺序</h3><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Test</span>();                         <span class="comment">//4.第四步，new一个类，但在new之前要处理匿名代码块</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;                    <span class="comment">//2.第二步，静态变量和静态代码块的加载顺序由编写先后决定</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    num += <span class="number">3</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;b&quot;</span>);           <span class="comment">//5.第五步，按照顺序加载匿名代码块，代码块中有打印</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>;                             <span class="comment">//6.第六步，按照顺序加载变量</span></span><br><span class="line"></span><br><span class="line">&#123; <span class="comment">// 成员变量第三个</span></span><br><span class="line">    System.out.println(<span class="string">&quot;c&quot;</span>);           <span class="comment">//7.第七步，按照顺序打印c</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Test() &#123; <span class="comment">// 类的构造函数，第四个加载</span></span><br><span class="line">    System.out.println(<span class="string">&quot;d&quot;</span>);           <span class="comment">//8.第八步，最后加载构造函数，完成对象的建立</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;                              <span class="comment">// 3.第三步，静态块，然后执行静态代码块，因为有输出，故打印a</span></span><br><span class="line">    System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>                    <span class="comment">// 静态方法，调用的时候才加载// 注意看，e没有加载</span></span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;e&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>console打印：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br></pre></td></tr></table></figure><h3 id="3、注意"><a href="#3、注意" class="headerlink" title="3、注意"></a>3、注意</h3><ul><li>静态代码块（只加载一次）</li><li>构造方法（创建一个实例就加载一次）</li><li>静态方法，调用的时候才会加载，不调用的时候不会加载</li><li>静态语句块和静态变量被初始化的顺序与代码先后顺序有关</li></ul><h2 id="静态方法和非静态方法的区别是什么"><a href="#静态方法和非静态方法的区别是什么" class="headerlink" title="静态方法和非静态方法的区别是什么"></a>静态方法和非静态方法的区别是什么</h2><p>静态方法和非静态方法的区别总结如下：</p><ol><li>静态方法属于类所有，类实例化前即可使用； </li><li>非静态方法可以访问类中的任何成员，静态方法只能访问类中的静态成员； </li><li>因为静态方法在类实例化前就可以使用，而类中的非静态变量必须在实例化之后才能分配内存；    </li><li>static内部只能出现static变量和其他static方法!而且static方法中还不能使用this等关键字，因为它是属于整个类；</li><li>静态方法效率上要比实例化高，静态方法的缺点是不自动进行销毁，而实例化的则可以做销毁； </li><li>静态方法和静态变量创建后始终使用同一块内存，而使用实例的方式会创建多个内存。</li><li>主要区别：静态方法在创建对象前就可以使用了，非静态方法必须通过new出来的对象调用。</li><li>静态方法与实例方法在性能和占用内存上没有明显的区别，是否声明为静态方法需要从类型的非静态字段、事件、面向对象扩展和多态这三方面来考虑。</li></ol><h1 id="二、BigDecimal详解"><a href="#二、BigDecimal详解" class="headerlink" title="二、BigDecimal详解"></a>二、BigDecimal详解</h1><ol><li><p>BigDecimal所创建的是对象，故我们不能使用传统的+、-、*、&#x2F;等算数运算符</p></li><li><p>创建 <code> BigDecimal a =new BigDecimal(0.1);//0.1可为 int double long String</code></p></li><li><p>add(+)、subtract(-)、multiply(*)、divide(&#x2F;)、toString(转字符串)、doubleValue(转double。。)</p></li><li><p>compareTo比较大小 -1小于 0 等于 1 大于</p></li><li><h1 id="Java之BigDecimal详解"><a href="#Java之BigDecimal详解" class="headerlink" title="Java之BigDecimal详解"></a><a href="https://www.cnblogs.com/zhangyinhua/p/11545305.html">Java之BigDecimal详解</a></h1></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
